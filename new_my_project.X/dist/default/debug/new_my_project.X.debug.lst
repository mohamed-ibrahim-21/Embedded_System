

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Nov 14 21:44:47 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    26   000000                     
    27                           ; Generated 23/03/2023 GMT
    28                           ; 
    29                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F4620 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61   000000                     
    62                           	psect	idataCOMRAM
    63   00164C                     __pidataCOMRAM:
    64                           	callstack 0
    65                           
    66                           ;initializer for _port_registers
    67   00164C  80                 	db	128
    68   00164D  0F                 	db	15
    69   00164E  81                 	db	129
    70   00164F  0F                 	db	15
    71   001650  82                 	db	130
    72   001651  0F                 	db	15
    73   001652  83                 	db	131
    74   001653  0F                 	db	15
    75   001654  84                 	db	132
    76   001655  0F                 	db	15
    77                           
    78                           ;initializer for _lat_registers
    79   001656  89                 	db	137
    80   001657  0F                 	db	15
    81   001658  8A                 	db	138
    82   001659  0F                 	db	15
    83   00165A  8B                 	db	139
    84   00165B  0F                 	db	15
    85   00165C  8C                 	db	140
    86   00165D  0F                 	db	15
    87   00165E  8D                 	db	141
    88   00165F  0F                 	db	15
    89                           
    90                           ;initializer for _tris_registers
    91   001660  92                 	db	146
    92   001661  0F                 	db	15
    93   001662  93                 	db	147
    94   001663  0F                 	db	15
    95   001664  94                 	db	148
    96   001665  0F                 	db	15
    97   001666  95                 	db	149
    98   001667  0F                 	db	15
    99   001668  96                 	db	150
   100   001669  0F                 	db	15
   101                           
   102                           ;initializer for _lcd_2
   103   00166A  32                 	db	50
   104   00166B  3A                 	db	58
   105   00166C  03                 	db	3
   106   00166D  0B                 	db	11
   107   00166E  13                 	db	19
   108   00166F  1B                 	db	27
   109   001670  23                 	db	35
   110   001671  2B                 	db	43
   111   001672  33                 	db	51
   112   001673  3B                 	db	59
   113                           
   114                           ;initializer for _lcd_1
   115   001674  02                 	db	2
   116   001675  0A                 	db	10
   117   001676  12                 	db	18
   118   001677  1A                 	db	26
   119   001678  22                 	db	34
   120   001679  2A                 	db	42
   121                           
   122                           	psect	smallconst
   123   001000                     __psmallconst:
   124                           	callstack 0
   125   001000  00                 	db	0
   126   001001                     _btn_values:
   127                           	callstack 0
   128   001001  37                 	db	55
   129   001002  38                 	db	56
   130   001003  39                 	db	57
   131   001004  2F                 	db	47
   132   001005  34                 	db	52
   133   001006  35                 	db	53
   134   001007  36                 	db	54
   135   001008  2A                 	db	42
   136   001009  31                 	db	49
   137   00100A  32                 	db	50
   138   00100B  33                 	db	51
   139   00100C  2D                 	db	45
   140   00100D  23                 	db	35
   141   00100E  30                 	db	48
   142   00100F  3D                 	db	61
   143   001010  2B                 	db	43
   144   001011                     __end_of_btn_values:
   145                           	callstack 0
   146   000000                     _PORTE	set	3972
   147   000000                     _PORTD	set	3971
   148   000000                     _PORTC	set	3970
   149   000000                     _PORTB	set	3969
   150   000000                     _PORTA	set	3968
   151   000000                     _LATA	set	3977
   152   000000                     _TRISA	set	3986
   153   000000                     _TRISE	set	3990
   154   000000                     _TRISD	set	3989
   155   000000                     _TRISC	set	3988
   156   000000                     _TRISB	set	3987
   157   000000                     _LATE	set	3981
   158   000000                     _LATD	set	3980
   159   000000                     _LATC	set	3979
   160   000000                     _LATB	set	3978
   161   001011                     STR_2:
   162   001011  6D                 	db	109	;'m'
   163   001012  6F                 	db	111	;'o'
   164   001013  68                 	db	104	;'h'
   165   001014  61                 	db	97	;'a'
   166   001015  6D                 	db	109	;'m'
   167   001016  65                 	db	101	;'e'
   168   001017  64                 	db	100	;'d'
   169   001018  00                 	db	0
   170   001019                     STR_1:
   171   001019  61                 	db	97	;'a'
   172   00101A  68                 	db	104	;'h'
   173   00101B  6D                 	db	109	;'m'
   174   00101C  65                 	db	101	;'e'
   175   00101D  64                 	db	100	;'d'
   176   00101E  00                 	db	0
   177   00101F  00                 	db	0	; dummy byte at the end
   178   000000                     
   179                           ; #config settings
   180                           
   181                           	psect	cinit
   182   0015E2                     __pcinit:
   183                           	callstack 0
   184   0015E2                     start_initialization:
   185                           	callstack 0
   186   0015E2                     __initialization:
   187                           	callstack 0
   188                           
   189                           ; Initialize objects allocated to COMRAM (46 bytes)
   190                           ; load TBLPTR registers with __pidataCOMRAM
   191   0015E2  0E4C               	movlw	low __pidataCOMRAM
   192   0015E4  6EF6               	movwf	tblptrl,c
   193   0015E6  0E16               	movlw	high __pidataCOMRAM
   194   0015E8  6EF7               	movwf	tblptrh,c
   195   0015EA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   196   0015EC  6EF8               	movwf	tblptru,c
   197   0015EE  EE00  F001         	lfsr	0,__pdataCOMRAM
   198   0015F2  EE10 F02E          	lfsr	1,46
   199   0015F6                     copy_data0:
   200   0015F6  0009               	tblrd		*+
   201   0015F8  CFF5 FFEE          	movff	tablat,postinc0
   202   0015FC  50E5               	movf	postdec1,w,c
   203   0015FE  50E1               	movf	fsr1l,w,c
   204   001600  E1FA               	bnz	copy_data0
   205                           
   206                           ; Clear objects allocated to COMRAM (7 bytes)
   207   001602  EE00  F04A         	lfsr	0,__pbssCOMRAM
   208   001606  0E07               	movlw	7
   209   001608                     clear_0:
   210   001608  6AEE               	clrf	postinc0,c
   211   00160A  06E8               	decf	wreg,f,c
   212   00160C  E1FD               	bnz	clear_0
   213   00160E                     end_of_initialization:
   214                           	callstack 0
   215   00160E                     __end_of__initialization:
   216                           	callstack 0
   217   00160E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   218   001610  6EF8               	movwf	tblptru,c
   219   001612  0100               	movlb	0
   220   001614  EF0C  F00B         	goto	_main	;jump to C main() function
   221                           
   222                           	psect	bssCOMRAM
   223   00004A                     __pbssCOMRAM:
   224                           	callstack 0
   225   00004A                     relay_turn_off@F2895:
   226                           	callstack 0
   227   00004A                     	ds	1
   228   00004B                     relay_turn_on@F2890:
   229                           	callstack 0
   230   00004B                     	ds	1
   231   00004C                     relay_initialize@F2885:
   232                           	callstack 0
   233   00004C                     	ds	1
   234   00004D                     led_turn_toggle@F2906:
   235                           	callstack 0
   236   00004D                     	ds	1
   237   00004E                     led_turn_off@F2901:
   238                           	callstack 0
   239   00004E                     	ds	1
   240   00004F                     led_turn_on@F2896:
   241                           	callstack 0
   242   00004F                     	ds	1
   243   000050                     led_initialize@F2891:
   244                           	callstack 0
   245   000050                     	ds	1
   246                           
   247                           	psect	dataCOMRAM
   248   000001                     __pdataCOMRAM:
   249                           	callstack 0
   250   000001                     _port_registers:
   251                           	callstack 0
   252   000001                     	ds	10
   253   00000B                     _lat_registers:
   254                           	callstack 0
   255   00000B                     	ds	10
   256   000015                     _tris_registers:
   257                           	callstack 0
   258   000015                     	ds	10
   259   00001F                     _lcd_2:
   260                           	callstack 0
   261   00001F                     	ds	10
   262   000029                     _lcd_1:
   263                           	callstack 0
   264   000029                     	ds	6
   265                           
   266                           	psect	cstackCOMRAM
   267   00002F                     __pcstackCOMRAM:
   268                           	callstack 0
   269   00002F                     gpio_pin_direction_intialize@_pin_config:
   270                           	callstack 0
   271   00002F                     gpio_pin_write_logic@_pin_config:
   272                           	callstack 0
   273                           
   274                           ; 1 bytes @ 0x0
   275   00002F                     	ds	1
   276   000030                     ??_gpio_pin_direction_intialize:
   277   000030                     gpio_pin_write_logic@logic:
   278                           	callstack 0
   279                           
   280                           ; 1 bytes @ 0x1
   281   000030                     	ds	1
   282   000031                     ??_gpio_pin_write_logic:
   283                           
   284                           ; 1 bytes @ 0x2
   285   000031                     	ds	4
   286   000035                     gpio_pin_direction_intialize@ret:
   287                           	callstack 0
   288                           
   289                           ; 1 bytes @ 0x6
   290   000035                     	ds	1
   291   000036                     gpio_pin_write_logic@ret:
   292                           	callstack 0
   293                           
   294                           ; 1 bytes @ 0x7
   295   000036                     	ds	1
   296   000037                     gpio_pin_intialize@_pin_config:
   297                           	callstack 0
   298   000037                     lcd_8bit_send_enable_signal@_lcd_:
   299                           	callstack 0
   300                           
   301                           ; 1 bytes @ 0x8
   302   000037                     	ds	1
   303   000038                     ??_gpio_pin_intialize:
   304   000038                     lcd_8bit_send_enable_signal@ret:
   305                           	callstack 0
   306                           
   307                           ; 1 bytes @ 0x9
   308   000038                     	ds	1
   309   000039                     gpio_pin_intialize@ret:
   310                           	callstack 0
   311   000039                     lcd_8bit_send_command@_lcd_:
   312                           	callstack 0
   313   000039                     lcd_8bit_send_char_data@_lcd_:
   314                           	callstack 0
   315                           
   316                           ; 1 bytes @ 0xA
   317   000039                     	ds	1
   318   00003A                     lcd_4bit_initialize@_lcd_:
   319                           	callstack 0
   320   00003A                     lcd_8bit_send_command@command:
   321                           	callstack 0
   322   00003A                     lcd_8bit_send_char_data@data:
   323                           	callstack 0
   324                           
   325                           ; 1 bytes @ 0xB
   326   00003A                     	ds	1
   327   00003B                     ??_lcd_8bit_send_command:
   328   00003B                     ??_lcd_8bit_send_char_data:
   329   00003B                     lcd_4bit_initialize@ret:
   330                           	callstack 0
   331                           
   332                           ; 1 bytes @ 0xC
   333   00003B                     	ds	1
   334   00003C                     lcd_4bit_initialize@l_data_pins_counter:
   335                           	callstack 0
   336                           
   337                           ; 1 bytes @ 0xD
   338   00003C                     	ds	1
   339   00003D                     lcd_8bit_send_command@ret:
   340                           	callstack 0
   341   00003D                     lcd_8bit_send_char_data@ret:
   342                           	callstack 0
   343                           
   344                           ; 1 bytes @ 0xE
   345   00003D                     	ds	1
   346   00003E                     lcd_8bit_send_command@l_pin_counter:
   347                           	callstack 0
   348   00003E                     lcd_8bit_send_char_data@l_pin_counter:
   349                           	callstack 0
   350                           
   351                           ; 1 bytes @ 0xF
   352   00003E                     	ds	1
   353   00003F                     lcd_8bit_initialize@_lcd_:
   354                           	callstack 0
   355   00003F                     lcd_8bit_set_cursor@_lcd_:
   356                           	callstack 0
   357                           
   358                           ; 1 bytes @ 0x10
   359   00003F                     	ds	1
   360   000040                     ??_lcd_8bit_initialize:
   361   000040                     lcd_8bit_set_cursor@row:
   362                           	callstack 0
   363                           
   364                           ; 1 bytes @ 0x11
   365   000040                     	ds	1
   366   000041                     lcd_8bit_initialize@l_data_pins_counter:
   367                           	callstack 0
   368   000041                     lcd_8bit_set_cursor@coulmn:
   369                           	callstack 0
   370                           
   371                           ; 1 bytes @ 0x12
   372   000041                     	ds	1
   373   000042                     ??_lcd_8bit_set_cursor:
   374   000042                     lcd_8bit_initialize@ret:
   375                           	callstack 0
   376                           
   377                           ; 1 bytes @ 0x13
   378   000042                     	ds	1
   379   000043                     
   380                           ; 1 bytes @ 0x14
   381   000043                     	ds	1
   382   000044                     lcd_8bit_set_cursor@ret:
   383                           	callstack 0
   384                           
   385                           ; 1 bytes @ 0x15
   386   000044                     	ds	1
   387   000045                     lcd_8bit_send_string_position@_lcd_:
   388                           	callstack 0
   389                           
   390                           ; 1 bytes @ 0x16
   391   000045                     	ds	1
   392   000046                     lcd_8bit_send_string_position@row:
   393                           	callstack 0
   394                           
   395                           ; 1 bytes @ 0x17
   396   000046                     	ds	1
   397   000047                     lcd_8bit_send_string_position@column:
   398                           	callstack 0
   399                           
   400                           ; 1 bytes @ 0x18
   401   000047                     	ds	1
   402   000048                     lcd_8bit_send_string_position@str:
   403                           	callstack 0
   404                           
   405                           ; 1 bytes @ 0x19
   406   000048                     	ds	1
   407   000049                     lcd_8bit_send_string_position@ret:
   408                           	callstack 0
   409                           
   410                           ; 1 bytes @ 0x1A
   411   000049                     	ds	1
   412   00004A                     
   413                           ; 1 bytes @ 0x1B
   414 ;;
   415 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   416 ;;
   417 ;; *************** function _main *****************
   418 ;; Defined at:
   419 ;;		line 98 in file "application.c"
   420 ;; Parameters:    Size  Location     Type
   421 ;;		None
   422 ;; Auto vars:     Size  Location     Type
   423 ;;  ret             1    0        unsigned char 
   424 ;; Return value:  Size  Location     Type
   425 ;;                  2  284[None  ] int 
   426 ;; Registers used:
   427 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   428 ;; Tracked objects:
   429 ;;		On entry : 0/0
   430 ;;		On exit  : 0/0
   431 ;;		Unchanged: 0/0
   432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   437 ;;Total ram usage:        0 bytes
   438 ;; Hardware stack levels required when called: 5
   439 ;; This function calls:
   440 ;;		_application_intialize
   441 ;;		_lcd_8bit_send_string_position
   442 ;; This function is called by:
   443 ;;		Startup code after reset
   444 ;; This function uses a non-reentrant model
   445 ;;
   446                           
   447                           	psect	text0
   448   001618                     __ptext0:
   449                           	callstack 0
   450   001618                     _main:
   451                           	callstack 26
   452   001618                     
   453                           ;application.c: 100:     application_intialize();
   454   001618  EC4F  F00B         	call	_application_intialize	;wreg free
   455   00161C                     l2305:
   456   00161C  0E1F               	movlw	low _lcd_2
   457   00161E  6E45               	movwf	lcd_8bit_send_string_position@_lcd_^0,c
   458   001620  0E01               	movlw	1
   459   001622  6E46               	movwf	lcd_8bit_send_string_position@row^0,c
   460   001624  0E01               	movlw	1
   461   001626  6E47               	movwf	lcd_8bit_send_string_position@column^0,c
   462   001628  0E19               	movlw	low STR_1
   463   00162A  6E48               	movwf	lcd_8bit_send_string_position@str^0,c
   464   00162C  EC62  F00A         	call	_lcd_8bit_send_string_position	;wreg free
   465   001630  0E1F               	movlw	low _lcd_2
   466   001632  6E45               	movwf	lcd_8bit_send_string_position@_lcd_^0,c
   467   001634  0E02               	movlw	2
   468   001636  6E46               	movwf	lcd_8bit_send_string_position@row^0,c
   469   001638  0E01               	movlw	1
   470   00163A  6E47               	movwf	lcd_8bit_send_string_position@column^0,c
   471   00163C  0E11               	movlw	low STR_2
   472   00163E  6E48               	movwf	lcd_8bit_send_string_position@str^0,c
   473   001640  EC62  F00A         	call	_lcd_8bit_send_string_position	;wreg free
   474   001644  EF0E  F00B         	goto	l2305
   475   001648  EF00  F000         	goto	start
   476   00164C                     __end_of_main:
   477                           	callstack 0
   478                           
   479 ;; *************** function _lcd_8bit_send_string_position *****************
   480 ;; Defined at:
   481 ;;		line 335 in file "ECU_Layer/LCD/ecu_lcd.c"
   482 ;; Parameters:    Size  Location     Type
   483 ;;  _lcd_           1   22[COMRAM] PTR const struct .
   484 ;;		 -> lcd_2(10), 
   485 ;;  row             1   23[COMRAM] unsigned char 
   486 ;;  column          1   24[COMRAM] unsigned char 
   487 ;;  str             1   25[COMRAM] PTR unsigned char 
   488 ;;		 -> STR_2(8), STR_1(6), 
   489 ;; Auto vars:     Size  Location     Type
   490 ;;  ret             1   26[COMRAM] unsigned char 
   491 ;; Return value:  Size  Location     Type
   492 ;;                  1    wreg      unsigned char 
   493 ;; Registers used:
   494 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   495 ;; Tracked objects:
   496 ;;		On entry : 0/0
   497 ;;		On exit  : 0/0
   498 ;;		Unchanged: 0/0
   499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   500 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   501 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   503 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   504 ;;Total ram usage:        5 bytes
   505 ;; Hardware stack levels used: 1
   506 ;; Hardware stack levels required when called: 4
   507 ;; This function calls:
   508 ;;		_lcd_8bit_send_char_data
   509 ;;		_lcd_8bit_set_cursor
   510 ;; This function is called by:
   511 ;;		_main
   512 ;; This function uses a non-reentrant model
   513 ;;
   514                           
   515                           	psect	text1
   516   0014C4                     __ptext1:
   517                           	callstack 0
   518   0014C4                     _lcd_8bit_send_string_position:
   519                           	callstack 26
   520   0014C4                     
   521                           ;ECU_Layer/LCD/ecu_lcd.c: 337:     if(((void*)0) == _lcd_){
   522   0014C4  5045               	movf	lcd_8bit_send_string_position@_lcd_^0,w,c
   523   0014C6  A4D8               	btfss	status,2,c
   524   0014C8  EF68  F00A         	goto	u1121
   525   0014CC  EF6A  F00A         	goto	u1120
   526   0014D0                     u1121:
   527   0014D0  EF6E  F00A         	goto	l2041
   528   0014D4                     u1120:
   529   0014D4                     
   530                           ;ECU_Layer/LCD/ecu_lcd.c: 338:         ret = (Std_ReturnType)0x00;
   531   0014D4  0E00               	movlw	0
   532   0014D6  6E49               	movwf	lcd_8bit_send_string_position@ret^0,c
   533                           
   534                           ;ECU_Layer/LCD/ecu_lcd.c: 339:     }
   535   0014D8  EF94  F00A         	goto	l2049
   536   0014DC                     l2041:
   537                           
   538                           ;ECU_Layer/LCD/ecu_lcd.c: 341:         ret = lcd_8bit_set_cursor(_lcd_, row, column);
   539   0014DC  C045  F03F         	movff	lcd_8bit_send_string_position@_lcd_,lcd_8bit_set_cursor@_lcd_
   540   0014E0  C046  F040         	movff	lcd_8bit_send_string_position@row,lcd_8bit_set_cursor@row
   541   0014E4  C047  F041         	movff	lcd_8bit_send_string_position@column,lcd_8bit_set_cursor@coulmn
   542   0014E8  ECA0  F009         	call	_lcd_8bit_set_cursor	;wreg free
   543   0014EC  6E49               	movwf	lcd_8bit_send_string_position@ret^0,c
   544                           
   545                           ;ECU_Layer/LCD/ecu_lcd.c: 342:         while(*str){
   546   0014EE  EF86  F00A         	goto	l2047
   547   0014F2                     l2043:
   548                           
   549                           ;ECU_Layer/LCD/ecu_lcd.c: 343:             ret = lcd_8bit_send_char_data(_lcd_, *str++);
   550   0014F2  C045  F039         	movff	lcd_8bit_send_string_position@_lcd_,lcd_8bit_send_char_data@_lcd_
   551   0014F6  C048  FFF6         	movff	lcd_8bit_send_string_position@str,tblptrl
   552   0014FA                     	if	1	;There is more than 1 active tblptr byte
   553   0014FA  0E10               	movlw	high __smallconst
   554   0014FC  6EF7               	movwf	tblptrh,c
   555   0014FE                     	endif
   556   0014FE                     	if	0	;tblptru may be non-zero
   557   0014FE                     	endif
   558   0014FE                     	if	0	;tblptru may be non-zero
   559   0014FE                     	endif
   560   0014FE  0008               	tblrd		*
   561   001500  CFF5 F03A          	movff	tablat,lcd_8bit_send_char_data@data
   562   001504  ECEC  F009         	call	_lcd_8bit_send_char_data	;wreg free
   563   001508  6E49               	movwf	lcd_8bit_send_string_position@ret^0,c
   564   00150A  2A48               	incf	lcd_8bit_send_string_position@str^0,f,c
   565   00150C                     l2047:
   566                           
   567                           ;ECU_Layer/LCD/ecu_lcd.c: 342:         while(*str){
   568   00150C  C048  FFF6         	movff	lcd_8bit_send_string_position@str,tblptrl
   569   001510                     	if	1	;There is more than 1 active tblptr byte
   570   001510  0E10               	movlw	high __smallconst
   571   001512  6EF7               	movwf	tblptrh,c
   572   001514                     	endif
   573   001514                     	if	0	;tblptru may be non-zero
   574   001514                     	endif
   575   001514                     	if	0	;tblptru may be non-zero
   576   001514                     	endif
   577   001514  0008               	tblrd		*
   578   001516  50F5               	movf	tablat,w,c
   579   001518  0900               	iorlw	0
   580   00151A  A4D8               	btfss	status,2,c
   581   00151C  EF92  F00A         	goto	u1131
   582   001520  EF94  F00A         	goto	u1130
   583   001524                     u1131:
   584   001524  EF79  F00A         	goto	l2043
   585   001528                     u1130:
   586   001528                     l2049:
   587                           
   588                           ;ECU_Layer/LCD/ecu_lcd.c: 346:     return ret;
   589   001528  5049               	movf	lcd_8bit_send_string_position@ret^0,w,c
   590   00152A  0012               	return		;funcret
   591   00152C                     __end_of_lcd_8bit_send_string_position:
   592                           	callstack 0
   593                           
   594 ;; *************** function _lcd_8bit_set_cursor *****************
   595 ;; Defined at:
   596 ;;		line 414 in file "ECU_Layer/LCD/ecu_lcd.c"
   597 ;; Parameters:    Size  Location     Type
   598 ;;  _lcd_           1   16[COMRAM] PTR const struct .
   599 ;;		 -> lcd_2(10), 
   600 ;;  row             1   17[COMRAM] unsigned char 
   601 ;;  coulmn          1   18[COMRAM] unsigned char 
   602 ;; Auto vars:     Size  Location     Type
   603 ;;  ret             1   21[COMRAM] unsigned char 
   604 ;; Return value:  Size  Location     Type
   605 ;;                  1    wreg      unsigned char 
   606 ;; Registers used:
   607 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   608 ;; Tracked objects:
   609 ;;		On entry : 0/0
   610 ;;		On exit  : 0/0
   611 ;;		Unchanged: 0/0
   612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   613 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   614 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   615 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   616 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   617 ;;Total ram usage:        6 bytes
   618 ;; Hardware stack levels used: 1
   619 ;; Hardware stack levels required when called: 3
   620 ;; This function calls:
   621 ;;		_lcd_8bit_send_command
   622 ;; This function is called by:
   623 ;;		_lcd_8bit_send_string_position
   624 ;;		_lcd_8bit_send_char_data_position
   625 ;; This function uses a non-reentrant model
   626 ;;
   627                           
   628                           	psect	text2
   629   001340                     __ptext2:
   630                           	callstack 0
   631   001340                     _lcd_8bit_set_cursor:
   632                           	callstack 26
   633   001340                     
   634                           ;ECU_Layer/LCD/ecu_lcd.c: 415:     Std_ReturnType ret = (Std_ReturnType)0x01;
   635   001340  0E01               	movlw	1
   636   001342  6E44               	movwf	lcd_8bit_set_cursor@ret^0,c
   637   001344                     
   638                           ;ECU_Layer/LCD/ecu_lcd.c: 416:     coulmn--;
   639   001344  0641               	decf	lcd_8bit_set_cursor@coulmn^0,f,c
   640                           
   641                           ;ECU_Layer/LCD/ecu_lcd.c: 417:     switch (row){
   642   001346  EFCD  F009         	goto	l2021
   643   00134A                     l2013:
   644   00134A  C03F  F039         	movff	lcd_8bit_set_cursor@_lcd_,lcd_8bit_send_command@_lcd_
   645   00134E  5041               	movf	lcd_8bit_set_cursor@coulmn^0,w,c
   646   001350  0F80               	addlw	128
   647   001352  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   648   001354  EC27  F00A         	call	_lcd_8bit_send_command	;wreg free
   649   001358  6E44               	movwf	lcd_8bit_set_cursor@ret^0,c
   650                           
   651                           ;ECU_Layer/LCD/ecu_lcd.c: 419:         break;
   652   00135A  EFEA  F009         	goto	l2023
   653   00135E                     l2015:
   654   00135E  C03F  F039         	movff	lcd_8bit_set_cursor@_lcd_,lcd_8bit_send_command@_lcd_
   655   001362  5041               	movf	lcd_8bit_set_cursor@coulmn^0,w,c
   656   001364  0FC0               	addlw	192
   657   001366  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   658   001368  EC27  F00A         	call	_lcd_8bit_send_command	;wreg free
   659   00136C  6E44               	movwf	lcd_8bit_set_cursor@ret^0,c
   660                           
   661                           ;ECU_Layer/LCD/ecu_lcd.c: 421:         break;
   662   00136E  EFEA  F009         	goto	l2023
   663   001372                     l2017:
   664   001372  C03F  F039         	movff	lcd_8bit_set_cursor@_lcd_,lcd_8bit_send_command@_lcd_
   665   001376  5041               	movf	lcd_8bit_set_cursor@coulmn^0,w,c
   666   001378  0F94               	addlw	148
   667   00137A  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   668   00137C  EC27  F00A         	call	_lcd_8bit_send_command	;wreg free
   669   001380  6E44               	movwf	lcd_8bit_set_cursor@ret^0,c
   670                           
   671                           ;ECU_Layer/LCD/ecu_lcd.c: 423:         break;
   672   001382  EFEA  F009         	goto	l2023
   673   001386                     l2019:
   674   001386  C03F  F039         	movff	lcd_8bit_set_cursor@_lcd_,lcd_8bit_send_command@_lcd_
   675   00138A  5041               	movf	lcd_8bit_set_cursor@coulmn^0,w,c
   676   00138C  0FD4               	addlw	212
   677   00138E  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   678   001390  EC27  F00A         	call	_lcd_8bit_send_command	;wreg free
   679   001394  6E44               	movwf	lcd_8bit_set_cursor@ret^0,c
   680                           
   681                           ;ECU_Layer/LCD/ecu_lcd.c: 425:         break;
   682   001396  EFEA  F009         	goto	l2023
   683   00139A                     l2021:
   684   00139A  5040               	movf	lcd_8bit_set_cursor@row^0,w,c
   685   00139C  6E42               	movwf	??_lcd_8bit_set_cursor^0,c
   686   00139E  6A43               	clrf	(??_lcd_8bit_set_cursor+1)^0,c
   687                           
   688                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   689                           ; Switch size 1, requested type "simple"
   690                           ; Number of cases is 1, Range of values is 0 to 0
   691                           ; switch strategies available:
   692                           ; Name         Instructions Cycles
   693                           ; simple_byte            4     3 (average)
   694                           ;	Chosen strategy is simple_byte
   695   0013A0  5043               	movf	(??_lcd_8bit_set_cursor+1)^0,w,c
   696   0013A2  0A00               	xorlw	0	; case 0
   697   0013A4  B4D8               	btfsc	status,2,c
   698   0013A6  EFD7  F009         	goto	l2385
   699   0013AA  EFEA  F009         	goto	l2023
   700   0013AE                     l2385:
   701                           
   702                           ; Switch size 1, requested type "simple"
   703                           ; Number of cases is 4, Range of values is 1 to 4
   704                           ; switch strategies available:
   705                           ; Name         Instructions Cycles
   706                           ; simple_byte           13     7 (average)
   707                           ;	Chosen strategy is simple_byte
   708   0013AE  5042               	movf	??_lcd_8bit_set_cursor^0,w,c
   709   0013B0  0A01               	xorlw	1	; case 1
   710   0013B2  B4D8               	btfsc	status,2,c
   711   0013B4  EFA5  F009         	goto	l2013
   712   0013B8  0A03               	xorlw	3	; case 2
   713   0013BA  B4D8               	btfsc	status,2,c
   714   0013BC  EFAF  F009         	goto	l2015
   715   0013C0  0A01               	xorlw	1	; case 3
   716   0013C2  B4D8               	btfsc	status,2,c
   717   0013C4  EFB9  F009         	goto	l2017
   718   0013C8  0A07               	xorlw	7	; case 4
   719   0013CA  B4D8               	btfsc	status,2,c
   720   0013CC  EFC3  F009         	goto	l2019
   721   0013D0  EFEA  F009         	goto	l2023
   722   0013D4                     l2023:
   723                           
   724                           ;ECU_Layer/LCD/ecu_lcd.c: 428:     return ret;
   725   0013D4  5044               	movf	lcd_8bit_set_cursor@ret^0,w,c
   726   0013D6  0012               	return		;funcret
   727   0013D8                     __end_of_lcd_8bit_set_cursor:
   728                           	callstack 0
   729                           
   730 ;; *************** function _lcd_8bit_send_char_data *****************
   731 ;; Defined at:
   732 ;;		line 260 in file "ECU_Layer/LCD/ecu_lcd.c"
   733 ;; Parameters:    Size  Location     Type
   734 ;;  _lcd_           1   10[COMRAM] PTR const struct .
   735 ;;		 -> lcd_2(10), 
   736 ;;  data            1   11[COMRAM] unsigned char 
   737 ;; Auto vars:     Size  Location     Type
   738 ;;  l_pin_counte    1   15[COMRAM] unsigned char 
   739 ;;  ret             1   14[COMRAM] unsigned char 
   740 ;; Return value:  Size  Location     Type
   741 ;;                  1    wreg      unsigned char 
   742 ;; Registers used:
   743 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   744 ;; Tracked objects:
   745 ;;		On entry : 0/0
   746 ;;		On exit  : 0/0
   747 ;;		Unchanged: 0/0
   748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   749 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   750 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   751 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   752 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   753 ;;Total ram usage:        6 bytes
   754 ;; Hardware stack levels used: 1
   755 ;; Hardware stack levels required when called: 2
   756 ;; This function calls:
   757 ;;		_gpio_pin_write_logic
   758 ;;		_lcd_8bit_send_enable_signal
   759 ;; This function is called by:
   760 ;;		_lcd_8bit_send_string_position
   761 ;;		_lcd_8bit_send_char_data_position
   762 ;;		_lcd_8bit_send_string
   763 ;; This function uses a non-reentrant model
   764 ;;
   765                           
   766                           	psect	text3
   767   0013D8                     __ptext3:
   768                           	callstack 0
   769   0013D8                     _lcd_8bit_send_char_data:
   770                           	callstack 27
   771   0013D8                     
   772                           ;ECU_Layer/LCD/ecu_lcd.c: 262:     uint8 l_pin_counter = 0;
   773   0013D8  0E00               	movlw	0
   774   0013DA  6E3E               	movwf	lcd_8bit_send_char_data@l_pin_counter^0,c
   775                           
   776                           ;ECU_Layer/LCD/ecu_lcd.c: 263:     if(((void*)0) == _lcd_){
   777   0013DC  5039               	movf	lcd_8bit_send_char_data@_lcd_^0,w,c
   778   0013DE  A4D8               	btfss	status,2,c
   779   0013E0  EFF4  F009         	goto	u1091
   780   0013E4  EFF6  F009         	goto	u1090
   781   0013E8                     u1091:
   782   0013E8  EFFA  F009         	goto	l1989
   783   0013EC                     u1090:
   784   0013EC                     
   785                           ;ECU_Layer/LCD/ecu_lcd.c: 264:         ret = (Std_ReturnType)0x00;
   786   0013EC  0E00               	movlw	0
   787   0013EE  6E3D               	movwf	lcd_8bit_send_char_data@ret^0,c
   788                           
   789                           ;ECU_Layer/LCD/ecu_lcd.c: 265:     }
   790   0013F0  EF25  F00A         	goto	l2005
   791   0013F4                     l1989:
   792   0013F4  C039  F02F         	movff	lcd_8bit_send_char_data@_lcd_,gpio_pin_write_logic@_pin_config
   793   0013F8  0E01               	movlw	1
   794   0013FA  6E30               	movwf	gpio_pin_write_logic@logic^0,c
   795   0013FC  ECA3  F008         	call	_gpio_pin_write_logic	;wreg free
   796   001400                     
   797                           ;ECU_Layer/LCD/ecu_lcd.c: 268:         for(l_pin_counter = 0 ; l_pin_counter < 8 ; l_pin
      +                          _counter++){
   798   001400  0E00               	movlw	0
   799   001402  6E3E               	movwf	lcd_8bit_send_char_data@l_pin_counter^0,c
   800   001404                     l1997:
   801   001404  5039               	movf	lcd_8bit_send_char_data@_lcd_^0,w,c
   802   001406  243E               	addwf	lcd_8bit_send_char_data@l_pin_counter^0,w,c
   803   001408  0F02               	addlw	2
   804   00140A  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
   805   00140C  C03E  F03B         	movff	lcd_8bit_send_char_data@l_pin_counter,??_lcd_8bit_send_char_data
   806   001410  C03A  F03C         	movff	lcd_8bit_send_char_data@data,??_lcd_8bit_send_char_data+1
   807   001414  2A3B               	incf	??_lcd_8bit_send_char_data^0,f,c
   808   001416  EF0F  F00A         	goto	u1104
   809   00141A                     u1105:
   810   00141A  90D8               	bcf	status,0,c
   811   00141C  323C               	rrcf	(??_lcd_8bit_send_char_data+1)^0,f,c
   812   00141E                     u1104:
   813   00141E  2E3B               	decfsz	??_lcd_8bit_send_char_data^0,f,c
   814   001420  EF0D  F00A         	goto	u1105
   815   001424  503C               	movf	(??_lcd_8bit_send_char_data+1)^0,w,c
   816   001426  0B01               	andlw	1
   817   001428  6E30               	movwf	gpio_pin_write_logic@logic^0,c
   818   00142A  ECA3  F008         	call	_gpio_pin_write_logic	;wreg free
   819   00142E                     
   820                           ;ECU_Layer/LCD/ecu_lcd.c: 270:         }
   821   00142E  2A3E               	incf	lcd_8bit_send_char_data@l_pin_counter^0,f,c
   822   001430  0E07               	movlw	7
   823   001432  643E               	cpfsgt	lcd_8bit_send_char_data@l_pin_counter^0,c
   824   001434  EF1E  F00A         	goto	u1111
   825   001438  EF20  F00A         	goto	u1110
   826   00143C                     u1111:
   827   00143C  EF02  F00A         	goto	l1997
   828   001440                     u1110:
   829   001440                     
   830                           ;ECU_Layer/LCD/ecu_lcd.c: 271:         ret = lcd_8bit_send_enable_signal(_lcd_);
   831   001440  C039  F037         	movff	lcd_8bit_send_char_data@_lcd_,lcd_8bit_send_enable_signal@_lcd_
   832   001444  EC3D  F00B         	call	_lcd_8bit_send_enable_signal	;wreg free
   833   001448  6E3D               	movwf	lcd_8bit_send_char_data@ret^0,c
   834   00144A                     l2005:
   835                           
   836                           ;ECU_Layer/LCD/ecu_lcd.c: 275:     return ret;
   837   00144A  503D               	movf	lcd_8bit_send_char_data@ret^0,w,c
   838   00144C  0012               	return		;funcret
   839   00144E                     __end_of_lcd_8bit_send_char_data:
   840                           	callstack 0
   841                           
   842 ;; *************** function _application_intialize *****************
   843 ;; Defined at:
   844 ;;		line 112 in file "application.c"
   845 ;; Parameters:    Size  Location     Type
   846 ;;		None
   847 ;; Auto vars:     Size  Location     Type
   848 ;;  ret             1    0        unsigned char 
   849 ;; Return value:  Size  Location     Type
   850 ;;                  1    wreg      void 
   851 ;; Registers used:
   852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   853 ;; Tracked objects:
   854 ;;		On entry : 0/0
   855 ;;		On exit  : 0/0
   856 ;;		Unchanged: 0/0
   857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   862 ;;Total ram usage:        0 bytes
   863 ;; Hardware stack levels used: 1
   864 ;; Hardware stack levels required when called: 4
   865 ;; This function calls:
   866 ;;		_lcd_4bit_initialize
   867 ;;		_lcd_8bit_initialize
   868 ;; This function is called by:
   869 ;;		_main
   870 ;; This function uses a non-reentrant model
   871 ;;
   872                           
   873                           	psect	text4
   874   00169E                     __ptext4:
   875                           	callstack 0
   876   00169E                     _application_intialize:
   877                           	callstack 26
   878   00169E  0E29               	movlw	low _lcd_1
   879   0016A0  6E3A               	movwf	lcd_4bit_initialize@_lcd_^0,c
   880   0016A2  ECC5  F00A         	call	_lcd_4bit_initialize	;wreg free
   881   0016A6  0E1F               	movlw	low _lcd_2
   882   0016A8  6E3F               	movwf	lcd_8bit_initialize@_lcd_^0,c
   883   0016AA  EC2B  F009         	call	_lcd_8bit_initialize	;wreg free
   884   0016AE  0012               	return		;funcret
   885   0016B0                     __end_of_application_intialize:
   886                           	callstack 0
   887                           
   888 ;; *************** function _lcd_8bit_initialize *****************
   889 ;; Defined at:
   890 ;;		line 195 in file "ECU_Layer/LCD/ecu_lcd.c"
   891 ;; Parameters:    Size  Location     Type
   892 ;;  _lcd_           1   16[COMRAM] PTR const struct .
   893 ;;		 -> lcd_2(10), 
   894 ;; Auto vars:     Size  Location     Type
   895 ;;  ret             1   19[COMRAM] unsigned char 
   896 ;;  l_data_pins_    1   18[COMRAM] unsigned char 
   897 ;; Return value:  Size  Location     Type
   898 ;;                  1    wreg      unsigned char 
   899 ;; Registers used:
   900 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   901 ;; Tracked objects:
   902 ;;		On entry : 0/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   906 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   907 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   908 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   909 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   910 ;;Total ram usage:        4 bytes
   911 ;; Hardware stack levels used: 1
   912 ;; Hardware stack levels required when called: 3
   913 ;; This function calls:
   914 ;;		_gpio_pin_intialize
   915 ;;		_lcd_8bit_send_command
   916 ;; This function is called by:
   917 ;;		_application_intialize
   918 ;; This function uses a non-reentrant model
   919 ;;
   920                           
   921                           	psect	text5
   922   001256                     __ptext5:
   923                           	callstack 0
   924   001256                     _lcd_8bit_initialize:
   925                           	callstack 26
   926   001256                     
   927                           ;ECU_Layer/LCD/ecu_lcd.c: 197:     uint8 l_data_pins_counter = 0;
   928   001256  0E00               	movlw	0
   929   001258  6E41               	movwf	lcd_8bit_initialize@l_data_pins_counter^0,c
   930                           
   931                           ;ECU_Layer/LCD/ecu_lcd.c: 198:     if(((void*)0) == _lcd_){
   932   00125A  503F               	movf	lcd_8bit_initialize@_lcd_^0,w,c
   933   00125C  A4D8               	btfss	status,2,c
   934   00125E  EF33  F009         	goto	u1071
   935   001262  EF35  F009         	goto	u1070
   936   001266                     u1071:
   937   001266  EF39  F009         	goto	l1945
   938   00126A                     u1070:
   939   00126A                     
   940                           ;ECU_Layer/LCD/ecu_lcd.c: 199:         ret = (Std_ReturnType)0x00;
   941   00126A  0E00               	movlw	0
   942   00126C  6E42               	movwf	lcd_8bit_initialize@ret^0,c
   943                           
   944                           ;ECU_Layer/LCD/ecu_lcd.c: 200:     }
   945   00126E  EF9E  F009         	goto	l1981
   946   001272                     l1945:
   947                           
   948                           ;ECU_Layer/LCD/ecu_lcd.c: 202:         ret = gpio_pin_intialize(&(_lcd_->lcd_rs));
   949   001272  C03F  F037         	movff	lcd_8bit_initialize@_lcd_,gpio_pin_intialize@_pin_config
   950   001276  EC96  F00A         	call	_gpio_pin_intialize	;wreg free
   951   00127A  6E42               	movwf	lcd_8bit_initialize@ret^0,c
   952                           
   953                           ;ECU_Layer/LCD/ecu_lcd.c: 203:         ret = gpio_pin_intialize(&(_lcd_->lcd_en));
   954   00127C  283F               	incf	lcd_8bit_initialize@_lcd_^0,w,c
   955   00127E  6E37               	movwf	gpio_pin_intialize@_pin_config^0,c
   956   001280  EC96  F00A         	call	_gpio_pin_intialize	;wreg free
   957   001284  6E42               	movwf	lcd_8bit_initialize@ret^0,c
   958   001286                     
   959                           ;ECU_Layer/LCD/ecu_lcd.c: 204:         for(l_data_pins_counter = 0 ; l_data_pins_counter
      +                          <8 ; l_data_pins_counter++){
   960   001286  0E00               	movlw	0
   961   001288  6E41               	movwf	lcd_8bit_initialize@l_data_pins_counter^0,c
   962   00128A                     l1953:
   963   00128A  503F               	movf	lcd_8bit_initialize@_lcd_^0,w,c
   964   00128C  2441               	addwf	lcd_8bit_initialize@l_data_pins_counter^0,w,c
   965   00128E  0F02               	addlw	2
   966   001290  6E37               	movwf	gpio_pin_intialize@_pin_config^0,c
   967   001292  EC96  F00A         	call	_gpio_pin_intialize	;wreg free
   968   001296                     
   969                           ;ECU_Layer/LCD/ecu_lcd.c: 206:         }
   970   001296  2A41               	incf	lcd_8bit_initialize@l_data_pins_counter^0,f,c
   971   001298  0E07               	movlw	7
   972   00129A  6441               	cpfsgt	lcd_8bit_initialize@l_data_pins_counter^0,c
   973   00129C  EF52  F009         	goto	u1081
   974   0012A0  EF54  F009         	goto	u1080
   975   0012A4                     u1081:
   976   0012A4  EF45  F009         	goto	l1953
   977   0012A8                     u1080:
   978   0012A8                     
   979                           ;ECU_Layer/LCD/ecu_lcd.c: 207:         _delay((unsigned long)((20)*(4000000UL/4000.0)));
   980   0012A8  0E1A               	movlw	26
   981   0012AA  6E40               	movwf	??_lcd_8bit_initialize^0,c
   982   0012AC  0EF8               	movlw	248
   983   0012AE                     u1487:
   984   0012AE  2EE8               	decfsz	wreg,f,c
   985   0012B0  D7FE               	bra	u1487
   986   0012B2  2E40               	decfsz	??_lcd_8bit_initialize^0,f,c
   987   0012B4  D7FC               	bra	u1487
   988   0012B6  D000               	nop2	
   989   0012B8  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
   990   0012BC  0E38               	movlw	56
   991   0012BE  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   992   0012C0  EC27  F00A         	call	_lcd_8bit_send_command	;wreg free
   993   0012C4                     
   994                           ;ECU_Layer/LCD/ecu_lcd.c: 209:         _delay((unsigned long)((5)*(4000000UL/4000.0)));
   995   0012C4  0E07               	movlw	7
   996   0012C6  6E40               	movwf	??_lcd_8bit_initialize^0,c
   997   0012C8  0E7D               	movlw	125
   998   0012CA                     u1497:
   999   0012CA  2EE8               	decfsz	wreg,f,c
  1000   0012CC  D7FE               	bra	u1497
  1001   0012CE  2E40               	decfsz	??_lcd_8bit_initialize^0,f,c
  1002   0012D0  D7FC               	bra	u1497
  1003   0012D2  0000               	nop	
  1004   0012D4  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
  1005   0012D8  0E38               	movlw	56
  1006   0012DA  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1007   0012DC  EC27  F00A         	call	_lcd_8bit_send_command	;wreg free
  1008   0012E0                     
  1009                           ;ECU_Layer/LCD/ecu_lcd.c: 211:         _delay((unsigned long)((150)*(4000000UL/4000000.0
      +                          )));
  1010   0012E0  0E32               	movlw	50
  1011   0012E2                     u1507:
  1012   0012E2  2EE8               	decfsz	wreg,f,c
  1013   0012E4  D7FE               	bra	u1507
  1014   0012E6  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
  1015   0012EA  0E38               	movlw	56
  1016   0012EC  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1017   0012EE  EC27  F00A         	call	_lcd_8bit_send_command	;wreg free
  1018   0012F2  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
  1019   0012F6  0E01               	movlw	1
  1020   0012F8  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1021   0012FA  EC27  F00A         	call	_lcd_8bit_send_command	;wreg free
  1022   0012FE  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
  1023   001302  0E02               	movlw	2
  1024   001304  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1025   001306  EC27  F00A         	call	_lcd_8bit_send_command	;wreg free
  1026   00130A  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
  1027   00130E  0E06               	movlw	6
  1028   001310  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1029   001312  EC27  F00A         	call	_lcd_8bit_send_command	;wreg free
  1030   001316  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
  1031   00131A  0E0C               	movlw	12
  1032   00131C  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1033   00131E  EC27  F00A         	call	_lcd_8bit_send_command	;wreg free
  1034   001322  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
  1035   001326  0E38               	movlw	56
  1036   001328  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1037   00132A  EC27  F00A         	call	_lcd_8bit_send_command	;wreg free
  1038   00132E                     
  1039                           ;ECU_Layer/LCD/ecu_lcd.c: 219:         ret = lcd_8bit_send_command(_lcd_, 0x80);
  1040   00132E  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
  1041   001332  0E80               	movlw	128
  1042   001334  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1043   001336  EC27  F00A         	call	_lcd_8bit_send_command	;wreg free
  1044   00133A  6E42               	movwf	lcd_8bit_initialize@ret^0,c
  1045   00133C                     l1981:
  1046                           
  1047                           ;ECU_Layer/LCD/ecu_lcd.c: 223:     return ret;
  1048   00133C  5042               	movf	lcd_8bit_initialize@ret^0,w,c
  1049   00133E  0012               	return		;funcret
  1050   001340                     __end_of_lcd_8bit_initialize:
  1051                           	callstack 0
  1052                           
  1053 ;; *************** function _lcd_8bit_send_command *****************
  1054 ;; Defined at:
  1055 ;;		line 234 in file "ECU_Layer/LCD/ecu_lcd.c"
  1056 ;; Parameters:    Size  Location     Type
  1057 ;;  _lcd_           1   10[COMRAM] PTR const struct .
  1058 ;;		 -> lcd_2(10), 
  1059 ;;  command         1   11[COMRAM] unsigned char 
  1060 ;; Auto vars:     Size  Location     Type
  1061 ;;  l_pin_counte    1   15[COMRAM] unsigned char 
  1062 ;;  ret             1   14[COMRAM] unsigned char 
  1063 ;; Return value:  Size  Location     Type
  1064 ;;                  1    wreg      unsigned char 
  1065 ;; Registers used:
  1066 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1067 ;; Tracked objects:
  1068 ;;		On entry : 0/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1072 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1073 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1074 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1075 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1076 ;;Total ram usage:        6 bytes
  1077 ;; Hardware stack levels used: 1
  1078 ;; Hardware stack levels required when called: 2
  1079 ;; This function calls:
  1080 ;;		_gpio_pin_write_logic
  1081 ;;		_lcd_8bit_send_enable_signal
  1082 ;; This function is called by:
  1083 ;;		_lcd_8bit_initialize
  1084 ;;		_lcd_8bit_set_cursor
  1085 ;; This function uses a non-reentrant model
  1086 ;;
  1087                           
  1088                           	psect	text6
  1089   00144E                     __ptext6:
  1090                           	callstack 0
  1091   00144E                     _lcd_8bit_send_command:
  1092                           	callstack 26
  1093   00144E                     
  1094                           ;ECU_Layer/LCD/ecu_lcd.c: 236:     uint8 l_pin_counter = 0;
  1095   00144E  0E00               	movlw	0
  1096   001450  6E3E               	movwf	lcd_8bit_send_command@l_pin_counter^0,c
  1097                           
  1098                           ;ECU_Layer/LCD/ecu_lcd.c: 237:     if(((void*)0) == _lcd_){
  1099   001452  5039               	movf	lcd_8bit_send_command@_lcd_^0,w,c
  1100   001454  A4D8               	btfss	status,2,c
  1101   001456  EF2F  F00A         	goto	u1021
  1102   00145A  EF31  F00A         	goto	u1020
  1103   00145E                     u1021:
  1104   00145E  EF35  F00A         	goto	l1899
  1105   001462                     u1020:
  1106   001462                     
  1107                           ;ECU_Layer/LCD/ecu_lcd.c: 238:         ret = (Std_ReturnType)0x00;
  1108   001462  0E00               	movlw	0
  1109   001464  6E3D               	movwf	lcd_8bit_send_command@ret^0,c
  1110                           
  1111                           ;ECU_Layer/LCD/ecu_lcd.c: 239:     }
  1112   001466  EF60  F00A         	goto	l1915
  1113   00146A                     l1899:
  1114   00146A  C039  F02F         	movff	lcd_8bit_send_command@_lcd_,gpio_pin_write_logic@_pin_config
  1115   00146E  0E00               	movlw	0
  1116   001470  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1117   001472  ECA3  F008         	call	_gpio_pin_write_logic	;wreg free
  1118   001476                     
  1119                           ;ECU_Layer/LCD/ecu_lcd.c: 242:         for(l_pin_counter = 0 ; l_pin_counter < 8 ; l_pin
      +                          _counter++){
  1120   001476  0E00               	movlw	0
  1121   001478  6E3E               	movwf	lcd_8bit_send_command@l_pin_counter^0,c
  1122   00147A                     l1907:
  1123   00147A  5039               	movf	lcd_8bit_send_command@_lcd_^0,w,c
  1124   00147C  243E               	addwf	lcd_8bit_send_command@l_pin_counter^0,w,c
  1125   00147E  0F02               	addlw	2
  1126   001480  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1127   001482  C03E  F03B         	movff	lcd_8bit_send_command@l_pin_counter,??_lcd_8bit_send_command
  1128   001486  C03A  F03C         	movff	lcd_8bit_send_command@command,??_lcd_8bit_send_command+1
  1129   00148A  2A3B               	incf	??_lcd_8bit_send_command^0,f,c
  1130   00148C  EF4A  F00A         	goto	u1034
  1131   001490                     u1035:
  1132   001490  90D8               	bcf	status,0,c
  1133   001492  323C               	rrcf	(??_lcd_8bit_send_command+1)^0,f,c
  1134   001494                     u1034:
  1135   001494  2E3B               	decfsz	??_lcd_8bit_send_command^0,f,c
  1136   001496  EF48  F00A         	goto	u1035
  1137   00149A  503C               	movf	(??_lcd_8bit_send_command+1)^0,w,c
  1138   00149C  0B01               	andlw	1
  1139   00149E  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1140   0014A0  ECA3  F008         	call	_gpio_pin_write_logic	;wreg free
  1141   0014A4                     
  1142                           ;ECU_Layer/LCD/ecu_lcd.c: 244:         }
  1143   0014A4  2A3E               	incf	lcd_8bit_send_command@l_pin_counter^0,f,c
  1144   0014A6  0E07               	movlw	7
  1145   0014A8  643E               	cpfsgt	lcd_8bit_send_command@l_pin_counter^0,c
  1146   0014AA  EF59  F00A         	goto	u1041
  1147   0014AE  EF5B  F00A         	goto	u1040
  1148   0014B2                     u1041:
  1149   0014B2  EF3D  F00A         	goto	l1907
  1150   0014B6                     u1040:
  1151   0014B6                     
  1152                           ;ECU_Layer/LCD/ecu_lcd.c: 245:         ret = lcd_8bit_send_enable_signal(_lcd_);
  1153   0014B6  C039  F037         	movff	lcd_8bit_send_command@_lcd_,lcd_8bit_send_enable_signal@_lcd_
  1154   0014BA  EC3D  F00B         	call	_lcd_8bit_send_enable_signal	;wreg free
  1155   0014BE  6E3D               	movwf	lcd_8bit_send_command@ret^0,c
  1156   0014C0                     l1915:
  1157                           
  1158                           ;ECU_Layer/LCD/ecu_lcd.c: 249:     return ret;
  1159   0014C0  503D               	movf	lcd_8bit_send_command@ret^0,w,c
  1160   0014C2  0012               	return		;funcret
  1161   0014C4                     __end_of_lcd_8bit_send_command:
  1162                           	callstack 0
  1163                           
  1164 ;; *************** function _lcd_8bit_send_enable_signal *****************
  1165 ;; Defined at:
  1166 ;;		line 406 in file "ECU_Layer/LCD/ecu_lcd.c"
  1167 ;; Parameters:    Size  Location     Type
  1168 ;;  _lcd_           1    8[COMRAM] PTR const struct .
  1169 ;;		 -> lcd_2(10), 
  1170 ;; Auto vars:     Size  Location     Type
  1171 ;;  ret             1    9[COMRAM] unsigned char 
  1172 ;; Return value:  Size  Location     Type
  1173 ;;                  1    wreg      unsigned char 
  1174 ;; Registers used:
  1175 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1176 ;; Tracked objects:
  1177 ;;		On entry : 0/0
  1178 ;;		On exit  : 0/0
  1179 ;;		Unchanged: 0/0
  1180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1181 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1182 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1184 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1185 ;;Total ram usage:        2 bytes
  1186 ;; Hardware stack levels used: 1
  1187 ;; Hardware stack levels required when called: 1
  1188 ;; This function calls:
  1189 ;;		_gpio_pin_write_logic
  1190 ;; This function is called by:
  1191 ;;		_lcd_8bit_send_command
  1192 ;;		_lcd_8bit_send_char_data
  1193 ;; This function uses a non-reentrant model
  1194 ;;
  1195                           
  1196                           	psect	text7
  1197   00167A                     __ptext7:
  1198                           	callstack 0
  1199   00167A                     _lcd_8bit_send_enable_signal:
  1200                           	callstack 26
  1201   00167A  2837               	incf	lcd_8bit_send_enable_signal@_lcd_^0,w,c
  1202   00167C  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1203   00167E  0E01               	movlw	1
  1204   001680  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1205   001682  ECA3  F008         	call	_gpio_pin_write_logic	;wreg free
  1206   001686                     
  1207                           ;ECU_Layer/LCD/ecu_lcd.c: 409:     _delay((unsigned long)((5)*(4000000UL/4000000.0)));
  1208   001686  D000               	nop2		;2 cycle nop
  1209   001688  D000               	nop2		;2 cycle nop
  1210   00168A  0000               	nop	
  1211   00168C                     
  1212                           ;ECU_Layer/LCD/ecu_lcd.c: 410:     ret = gpio_pin_write_logic(&(_lcd_->lcd_en), GPIO_LOW
      +                          );
  1213   00168C  2837               	incf	lcd_8bit_send_enable_signal@_lcd_^0,w,c
  1214   00168E  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1215   001690  0E00               	movlw	0
  1216   001692  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1217   001694  ECA3  F008         	call	_gpio_pin_write_logic	;wreg free
  1218   001698  6E38               	movwf	lcd_8bit_send_enable_signal@ret^0,c
  1219                           
  1220                           ;ECU_Layer/LCD/ecu_lcd.c: 411:     return ret;
  1221   00169A  5038               	movf	lcd_8bit_send_enable_signal@ret^0,w,c
  1222   00169C  0012               	return		;funcret
  1223   00169E                     __end_of_lcd_8bit_send_enable_signal:
  1224                           	callstack 0
  1225                           
  1226 ;; *************** function _lcd_4bit_initialize *****************
  1227 ;; Defined at:
  1228 ;;		line 27 in file "ECU_Layer/LCD/ecu_lcd.c"
  1229 ;; Parameters:    Size  Location     Type
  1230 ;;  _lcd_           1   11[COMRAM] PTR const struct .
  1231 ;;		 -> lcd_1(6), 
  1232 ;; Auto vars:     Size  Location     Type
  1233 ;;  l_data_pins_    1   13[COMRAM] unsigned char 
  1234 ;;  ret             1   12[COMRAM] unsigned char 
  1235 ;; Return value:  Size  Location     Type
  1236 ;;                  1    wreg      unsigned char 
  1237 ;; Registers used:
  1238 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1239 ;; Tracked objects:
  1240 ;;		On entry : 0/0
  1241 ;;		On exit  : 0/0
  1242 ;;		Unchanged: 0/0
  1243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1244 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1245 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1247 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1248 ;;Total ram usage:        3 bytes
  1249 ;; Hardware stack levels used: 1
  1250 ;; Hardware stack levels required when called: 2
  1251 ;; This function calls:
  1252 ;;		_gpio_pin_intialize
  1253 ;; This function is called by:
  1254 ;;		_application_intialize
  1255 ;; This function uses a non-reentrant model
  1256 ;;
  1257                           
  1258                           	psect	text8
  1259   00158A                     __ptext8:
  1260                           	callstack 0
  1261   00158A                     _lcd_4bit_initialize:
  1262                           	callstack 27
  1263   00158A                     
  1264                           ;ECU_Layer/LCD/ecu_lcd.c: 29:     uint8 l_data_pins_counter = 0;
  1265   00158A  0E00               	movlw	0
  1266   00158C  6E3C               	movwf	lcd_4bit_initialize@l_data_pins_counter^0,c
  1267                           
  1268                           ;ECU_Layer/LCD/ecu_lcd.c: 30:     if(((void*)0) == _lcd_){
  1269   00158E  503A               	movf	lcd_4bit_initialize@_lcd_^0,w,c
  1270   001590  A4D8               	btfss	status,2,c
  1271   001592  EFCD  F00A         	goto	u1051
  1272   001596  EFCF  F00A         	goto	u1050
  1273   00159A                     u1051:
  1274   00159A  EFD3  F00A         	goto	l1923
  1275   00159E                     u1050:
  1276   00159E                     
  1277                           ;ECU_Layer/LCD/ecu_lcd.c: 31:         ret = (Std_ReturnType)0x00;
  1278   00159E  0E00               	movlw	0
  1279   0015A0  6E3B               	movwf	lcd_4bit_initialize@ret^0,c
  1280                           
  1281                           ;ECU_Layer/LCD/ecu_lcd.c: 32:     }
  1282   0015A2  EFEF  F00A         	goto	l1937
  1283   0015A6                     l1923:
  1284                           
  1285                           ;ECU_Layer/LCD/ecu_lcd.c: 34:         ret = gpio_pin_intialize(&(_lcd_->lcd_rs));
  1286   0015A6  C03A  F037         	movff	lcd_4bit_initialize@_lcd_,gpio_pin_intialize@_pin_config
  1287   0015AA  EC96  F00A         	call	_gpio_pin_intialize	;wreg free
  1288   0015AE  6E3B               	movwf	lcd_4bit_initialize@ret^0,c
  1289                           
  1290                           ;ECU_Layer/LCD/ecu_lcd.c: 35:         ret = gpio_pin_intialize(&(_lcd_->lcd_en));
  1291   0015B0  283A               	incf	lcd_4bit_initialize@_lcd_^0,w,c
  1292   0015B2  6E37               	movwf	gpio_pin_intialize@_pin_config^0,c
  1293   0015B4  EC96  F00A         	call	_gpio_pin_intialize	;wreg free
  1294   0015B8  6E3B               	movwf	lcd_4bit_initialize@ret^0,c
  1295   0015BA                     
  1296                           ;ECU_Layer/LCD/ecu_lcd.c: 36:         for(l_data_pins_counter = 0 ; l_data_pins_counter<
      +                          4 ; l_data_pins_counter++){
  1297   0015BA  0E00               	movlw	0
  1298   0015BC  6E3C               	movwf	lcd_4bit_initialize@l_data_pins_counter^0,c
  1299   0015BE                     l1931:
  1300                           
  1301                           ;ECU_Layer/LCD/ecu_lcd.c: 37:             ret = gpio_pin_intialize(&(_lcd_->lcd_data[l_d
      +                          ata_pins_counter]));
  1302   0015BE  503A               	movf	lcd_4bit_initialize@_lcd_^0,w,c
  1303   0015C0  243C               	addwf	lcd_4bit_initialize@l_data_pins_counter^0,w,c
  1304   0015C2  0F02               	addlw	2
  1305   0015C4  6E37               	movwf	gpio_pin_intialize@_pin_config^0,c
  1306   0015C6  EC96  F00A         	call	_gpio_pin_intialize	;wreg free
  1307   0015CA  6E3B               	movwf	lcd_4bit_initialize@ret^0,c
  1308   0015CC                     
  1309                           ;ECU_Layer/LCD/ecu_lcd.c: 38:         }
  1310   0015CC  2A3C               	incf	lcd_4bit_initialize@l_data_pins_counter^0,f,c
  1311   0015CE  0E03               	movlw	3
  1312   0015D0  643C               	cpfsgt	lcd_4bit_initialize@l_data_pins_counter^0,c
  1313   0015D2  EFED  F00A         	goto	u1061
  1314   0015D6  EFEF  F00A         	goto	u1060
  1315   0015DA                     u1061:
  1316   0015DA  EFDF  F00A         	goto	l1931
  1317   0015DE                     u1060:
  1318   0015DE                     l1937:
  1319                           
  1320                           ;ECU_Layer/LCD/ecu_lcd.c: 42:     return ret;
  1321   0015DE  503B               	movf	lcd_4bit_initialize@ret^0,w,c
  1322   0015E0  0012               	return		;funcret
  1323   0015E2                     __end_of_lcd_4bit_initialize:
  1324                           	callstack 0
  1325                           
  1326 ;; *************** function _gpio_pin_intialize *****************
  1327 ;; Defined at:
  1328 ;;		line 54 in file "MCAL_Layer/GPIO/hel_gpio.c"
  1329 ;; Parameters:    Size  Location     Type
  1330 ;;  _pin_config     1    8[COMRAM] PTR const struct .
  1331 ;;		 -> lcd_2$lcd_data(8), lcd_2(10), lcd_1$lcd_data(4), lcd_1(6), 
  1332 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  1333 ;; Auto vars:     Size  Location     Type
  1334 ;;  ret             1   10[COMRAM] unsigned char 
  1335 ;; Return value:  Size  Location     Type
  1336 ;;                  1    wreg      unsigned char 
  1337 ;; Registers used:
  1338 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1339 ;; Tracked objects:
  1340 ;;		On entry : 0/0
  1341 ;;		On exit  : 0/0
  1342 ;;		Unchanged: 0/0
  1343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1344 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1345 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1346 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1347 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1348 ;;Total ram usage:        3 bytes
  1349 ;; Hardware stack levels used: 1
  1350 ;; Hardware stack levels required when called: 1
  1351 ;; This function calls:
  1352 ;;		_gpio_pin_direction_intialize
  1353 ;;		_gpio_pin_write_logic
  1354 ;; This function is called by:
  1355 ;;		_lcd_4bit_initialize
  1356 ;;		_lcd_8bit_initialize
  1357 ;;		_seven_segment_intialize
  1358 ;;		_dc_motor_initialize
  1359 ;;		_keypad_initialize
  1360 ;;		_led_initialize
  1361 ;;		_relay_initialize
  1362 ;; This function uses a non-reentrant model
  1363 ;;
  1364                           
  1365                           	psect	text9
  1366   00152C                     __ptext9:
  1367                           	callstack 0
  1368   00152C                     _gpio_pin_intialize:
  1369                           	callstack 27
  1370   00152C                     
  1371                           ;MCAL_Layer/GPIO/hel_gpio.c: 56:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1){
  1372   00152C  5037               	movf	gpio_pin_intialize@_pin_config^0,w,c
  1373   00152E  B4D8               	btfsc	status,2,c
  1374   001530  EF9C  F00A         	goto	u1001
  1375   001534  EF9E  F00A         	goto	u1000
  1376   001538                     u1001:
  1377   001538  EFAE  F00A         	goto	l1887
  1378   00153C                     u1000:
  1379   00153C  5037               	movf	gpio_pin_intialize@_pin_config^0,w,c
  1380   00153E  6ED9               	movwf	fsr2l,c
  1381   001540  6ADA               	clrf	fsr2h,c
  1382   001542  30DF               	rrcf	223,w,c
  1383   001544  32E8               	rrcf	wreg,f,c
  1384   001546  32E8               	rrcf	wreg,f,c
  1385   001548  0B07               	andlw	7
  1386   00154A  6E38               	movwf	??_gpio_pin_intialize^0,c
  1387   00154C  0E07               	movlw	7
  1388   00154E  6438               	cpfsgt	??_gpio_pin_intialize^0,c
  1389   001550  EFAC  F00A         	goto	u1011
  1390   001554  EFAE  F00A         	goto	u1010
  1391   001558                     u1011:
  1392   001558  EFB2  F00A         	goto	l1889
  1393   00155C                     u1010:
  1394   00155C                     l1887:
  1395                           
  1396                           ;MCAL_Layer/GPIO/hel_gpio.c: 57:         ret = (Std_ReturnType)0x00;
  1397   00155C  0E00               	movlw	0
  1398   00155E  6E39               	movwf	gpio_pin_intialize@ret^0,c
  1399                           
  1400                           ;MCAL_Layer/GPIO/hel_gpio.c: 58:     }
  1401   001560  EFC3  F00A         	goto	l1891
  1402   001564                     l1889:
  1403                           
  1404                           ;MCAL_Layer/GPIO/hel_gpio.c: 60:         ret = gpio_pin_direction_intialize(_pin_config)
      +                          ;
  1405   001564  C037  F02F         	movff	gpio_pin_intialize@_pin_config,gpio_pin_direction_intialize@_pin_config
  1406   001568  EC10  F008         	call	_gpio_pin_direction_intialize	;wreg free
  1407   00156C  6E39               	movwf	gpio_pin_intialize@ret^0,c
  1408                           
  1409                           ;MCAL_Layer/GPIO/hel_gpio.c: 61:         ret = gpio_pin_write_logic(_pin_config, _pin_co
      +                          nfig->logic);
  1410   00156E  C037  F02F         	movff	gpio_pin_intialize@_pin_config,gpio_pin_write_logic@_pin_config
  1411   001572  5037               	movf	gpio_pin_intialize@_pin_config^0,w,c
  1412   001574  6ED9               	movwf	fsr2l,c
  1413   001576  6ADA               	clrf	fsr2h,c
  1414   001578  0E00               	movlw	0
  1415   00157A  BEDF               	btfsc	indf2,7,c
  1416   00157C  0E01               	movlw	1
  1417   00157E  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1418   001580  ECA3  F008         	call	_gpio_pin_write_logic	;wreg free
  1419   001584  6E39               	movwf	gpio_pin_intialize@ret^0,c
  1420   001586                     l1891:
  1421                           
  1422                           ;MCAL_Layer/GPIO/hel_gpio.c: 63:     return ret;
  1423   001586  5039               	movf	gpio_pin_intialize@ret^0,w,c
  1424   001588  0012               	return		;funcret
  1425   00158A                     __end_of_gpio_pin_intialize:
  1426                           	callstack 0
  1427                           
  1428 ;; *************** function _gpio_pin_write_logic *****************
  1429 ;; Defined at:
  1430 ;;		line 97 in file "MCAL_Layer/GPIO/hel_gpio.c"
  1431 ;; Parameters:    Size  Location     Type
  1432 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  1433 ;;		 -> lcd_2$lcd_data(8), lcd_2(10), lcd_1$lcd_data(4), lcd_1(6), 
  1434 ;;		 -> relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), relay_initialize@pin_obj(1), led_turn_off@pin_obj(1), 
  1435 ;;		 -> led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
  1436 ;;  logic           1    1[COMRAM] enum E2811
  1437 ;; Auto vars:     Size  Location     Type
  1438 ;;  ret             1    7[COMRAM] unsigned char 
  1439 ;; Return value:  Size  Location     Type
  1440 ;;                  1    wreg      unsigned char 
  1441 ;; Registers used:
  1442 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1443 ;; Tracked objects:
  1444 ;;		On entry : 0/0
  1445 ;;		On exit  : 0/0
  1446 ;;		Unchanged: 0/0
  1447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1448 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1449 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1450 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1451 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1452 ;;Total ram usage:        8 bytes
  1453 ;; Hardware stack levels used: 1
  1454 ;; This function calls:
  1455 ;;		Nothing
  1456 ;; This function is called by:
  1457 ;;		_gpio_pin_intialize
  1458 ;;		_lcd_8bit_send_command
  1459 ;;		_lcd_8bit_send_char_data
  1460 ;;		_lcd_8bit_send_enable_signal
  1461 ;;		_seven_segment_write_number
  1462 ;;		_dc_motor_move_right
  1463 ;;		_dc_motor_move_left
  1464 ;;		_dc_motor_stop
  1465 ;;		_keypad_get_value
  1466 ;;		_led_turn_on
  1467 ;;		_led_turn_off
  1468 ;;		_relay_turn_on
  1469 ;;		_relay_turn_off
  1470 ;;		_lcd_4bit_send_command
  1471 ;;		_lcd_4bit_send_char_data
  1472 ;;		_lcd_send_4bits
  1473 ;;		_lcd_4bit_send_enable_signal
  1474 ;; This function uses a non-reentrant model
  1475 ;;
  1476                           
  1477                           	psect	text10
  1478   001146                     __ptext10:
  1479                           	callstack 0
  1480   001146                     _gpio_pin_write_logic:
  1481                           	callstack 26
  1482   001146                     
  1483                           ;MCAL_Layer/GPIO/hel_gpio.c: 98:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1484   001146  0E01               	movlw	1
  1485   001148  6E36               	movwf	gpio_pin_write_logic@ret^0,c
  1486                           
  1487                           ;MCAL_Layer/GPIO/hel_gpio.c: 99:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1){
  1488   00114A  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1489   00114C  B4D8               	btfsc	status,2,c
  1490   00114E  EFAB  F008         	goto	u901
  1491   001152  EFAD  F008         	goto	u900
  1492   001156                     u901:
  1493   001156  EFBD  F008         	goto	l1833
  1494   00115A                     u900:
  1495   00115A  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1496   00115C  6ED9               	movwf	fsr2l,c
  1497   00115E  6ADA               	clrf	fsr2h,c
  1498   001160  30DF               	rrcf	223,w,c
  1499   001162  32E8               	rrcf	wreg,f,c
  1500   001164  32E8               	rrcf	wreg,f,c
  1501   001166  0B07               	andlw	7
  1502   001168  6E31               	movwf	??_gpio_pin_write_logic^0,c
  1503   00116A  0E07               	movlw	7
  1504   00116C  6431               	cpfsgt	??_gpio_pin_write_logic^0,c
  1505   00116E  EFBB  F008         	goto	u911
  1506   001172  EFBD  F008         	goto	u910
  1507   001176                     u911:
  1508   001176  EF14  F009         	goto	l1841
  1509   00117A                     u910:
  1510   00117A                     l1833:
  1511                           
  1512                           ;MCAL_Layer/GPIO/hel_gpio.c: 100:         ret = (Std_ReturnType)0x00;
  1513   00117A  0E00               	movlw	0
  1514   00117C  6E36               	movwf	gpio_pin_write_logic@ret^0,c
  1515                           
  1516                           ;MCAL_Layer/GPIO/hel_gpio.c: 101:     }
  1517   00117E  EF29  F009         	goto	l1843
  1518   001182                     l1835:
  1519                           
  1520                           ;MCAL_Layer/GPIO/hel_gpio.c: 105:                 (*lat_registers[_pin_config->port] &= 
      +                          ~((uint8) 1 << _pin_config->pin));
  1521   001182  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1522   001184  6ED9               	movwf	fsr2l,c
  1523   001186  6ADA               	clrf	fsr2h,c
  1524   001188  30DF               	rrcf	223,w,c
  1525   00118A  32E8               	rrcf	wreg,f,c
  1526   00118C  32E8               	rrcf	wreg,f,c
  1527   00118E  0B07               	andlw	7
  1528   001190  6E31               	movwf	??_gpio_pin_write_logic^0,c
  1529   001192  0E01               	movlw	1
  1530   001194  6E32               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1531   001196  2A31               	incf	??_gpio_pin_write_logic^0,f,c
  1532   001198  EFD0  F008         	goto	u924
  1533   00119C                     u925:
  1534   00119C  90D8               	bcf	status,0,c
  1535   00119E  3632               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1536   0011A0                     u924:
  1537   0011A0  2E31               	decfsz	??_gpio_pin_write_logic^0,f,c
  1538   0011A2  EFCE  F008         	goto	u925
  1539   0011A6  5032               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1540   0011A8  0AFF               	xorlw	255
  1541   0011AA  6E33               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1542   0011AC  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1543   0011AE  6ED9               	movwf	fsr2l,c
  1544   0011B0  6ADA               	clrf	fsr2h,c
  1545   0011B2  50DF               	movf	223,w,c
  1546   0011B4  0B07               	andlw	7
  1547   0011B6  0D02               	mullw	2
  1548   0011B8  50F3               	movf	243,w,c
  1549   0011BA  0F0B               	addlw	low _lat_registers
  1550   0011BC  6ED9               	movwf	fsr2l,c
  1551   0011BE  6ADA               	clrf	fsr2h,c
  1552   0011C0  CFDE F034          	movff	postinc2,??_gpio_pin_write_logic+3
  1553   0011C4  CFDD F035          	movff	postdec2,??_gpio_pin_write_logic+4
  1554   0011C8  C034  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1555   0011CC  C035  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1556   0011D0  5033               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1557   0011D2  16DF               	andwf	indf2,f,c
  1558                           
  1559                           ;MCAL_Layer/GPIO/hel_gpio.c: 106:                 break;
  1560   0011D4  EF29  F009         	goto	l1843
  1561   0011D8                     l1837:
  1562                           
  1563                           ;MCAL_Layer/GPIO/hel_gpio.c: 108:                 (*lat_registers[_pin_config->port] |= 
      +                          ((uint8) 1 << _pin_config->pin));
  1564   0011D8  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1565   0011DA  6ED9               	movwf	fsr2l,c
  1566   0011DC  6ADA               	clrf	fsr2h,c
  1567   0011DE  30DF               	rrcf	223,w,c
  1568   0011E0  32E8               	rrcf	wreg,f,c
  1569   0011E2  32E8               	rrcf	wreg,f,c
  1570   0011E4  0B07               	andlw	7
  1571   0011E6  6E31               	movwf	??_gpio_pin_write_logic^0,c
  1572   0011E8  0E01               	movlw	1
  1573   0011EA  6E32               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1574   0011EC  2A31               	incf	??_gpio_pin_write_logic^0,f,c
  1575   0011EE  EFFB  F008         	goto	u934
  1576   0011F2                     u935:
  1577   0011F2  90D8               	bcf	status,0,c
  1578   0011F4  3632               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1579   0011F6                     u934:
  1580   0011F6  2E31               	decfsz	??_gpio_pin_write_logic^0,f,c
  1581   0011F8  EFF9  F008         	goto	u935
  1582   0011FC  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1583   0011FE  6ED9               	movwf	fsr2l,c
  1584   001200  6ADA               	clrf	fsr2h,c
  1585   001202  50DF               	movf	223,w,c
  1586   001204  0B07               	andlw	7
  1587   001206  0D02               	mullw	2
  1588   001208  50F3               	movf	243,w,c
  1589   00120A  0F0B               	addlw	low _lat_registers
  1590   00120C  6ED9               	movwf	fsr2l,c
  1591   00120E  6ADA               	clrf	fsr2h,c
  1592   001210  CFDE F033          	movff	postinc2,??_gpio_pin_write_logic+2
  1593   001214  CFDD F034          	movff	postdec2,??_gpio_pin_write_logic+3
  1594   001218  C033  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  1595   00121C  C034  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  1596   001220  5032               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1597   001222  12DF               	iorwf	indf2,f,c
  1598                           
  1599                           ;MCAL_Layer/GPIO/hel_gpio.c: 109:                 break;
  1600   001224  EF29  F009         	goto	l1843
  1601   001228                     l1841:
  1602   001228  5030               	movf	gpio_pin_write_logic@logic^0,w,c
  1603   00122A  6E31               	movwf	??_gpio_pin_write_logic^0,c
  1604   00122C  6A32               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1605                           
  1606                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1607                           ; Switch size 1, requested type "simple"
  1608                           ; Number of cases is 1, Range of values is 0 to 0
  1609                           ; switch strategies available:
  1610                           ; Name         Instructions Cycles
  1611                           ; simple_byte            4     3 (average)
  1612                           ;	Chosen strategy is simple_byte
  1613   00122E  5032               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1614   001230  0A00               	xorlw	0	; case 0
  1615   001232  B4D8               	btfsc	status,2,c
  1616   001234  EF1E  F009         	goto	l2387
  1617   001238  EFBD  F008         	goto	l1833
  1618   00123C                     l2387:
  1619                           
  1620                           ; Switch size 1, requested type "simple"
  1621                           ; Number of cases is 2, Range of values is 0 to 1
  1622                           ; switch strategies available:
  1623                           ; Name         Instructions Cycles
  1624                           ; simple_byte            7     4 (average)
  1625                           ;	Chosen strategy is simple_byte
  1626   00123C  5031               	movf	??_gpio_pin_write_logic^0,w,c
  1627   00123E  0A00               	xorlw	0	; case 0
  1628   001240  B4D8               	btfsc	status,2,c
  1629   001242  EFC1  F008         	goto	l1835
  1630   001246  0A01               	xorlw	1	; case 1
  1631   001248  B4D8               	btfsc	status,2,c
  1632   00124A  EFEC  F008         	goto	l1837
  1633   00124E  EFBD  F008         	goto	l1833
  1634   001252                     l1843:
  1635                           
  1636                           ;MCAL_Layer/GPIO/hel_gpio.c: 113:     return ret;
  1637   001252  5036               	movf	gpio_pin_write_logic@ret^0,w,c
  1638   001254  0012               	return		;funcret
  1639   001256                     __end_of_gpio_pin_write_logic:
  1640                           	callstack 0
  1641                           
  1642 ;; *************** function _gpio_pin_direction_intialize *****************
  1643 ;; Defined at:
  1644 ;;		line 26 in file "MCAL_Layer/GPIO/hel_gpio.c"
  1645 ;; Parameters:    Size  Location     Type
  1646 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  1647 ;;		 -> lcd_2$lcd_data(8), lcd_2(10), lcd_1$lcd_data(4), lcd_1(6), 
  1648 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  1649 ;; Auto vars:     Size  Location     Type
  1650 ;;  ret             1    6[COMRAM] unsigned char 
  1651 ;; Return value:  Size  Location     Type
  1652 ;;                  1    wreg      unsigned char 
  1653 ;; Registers used:
  1654 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1655 ;; Tracked objects:
  1656 ;;		On entry : 0/0
  1657 ;;		On exit  : 0/0
  1658 ;;		Unchanged: 0/0
  1659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1660 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1661 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1662 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1663 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1664 ;;Total ram usage:        7 bytes
  1665 ;; Hardware stack levels used: 1
  1666 ;; This function calls:
  1667 ;;		Nothing
  1668 ;; This function is called by:
  1669 ;;		_gpio_pin_intialize
  1670 ;;		_keypad_initialize
  1671 ;;		_push_button_initialize
  1672 ;; This function uses a non-reentrant model
  1673 ;;
  1674                           
  1675                           	psect	text11
  1676   001020                     __ptext11:
  1677                           	callstack 0
  1678   001020                     _gpio_pin_direction_intialize:
  1679                           	callstack 27
  1680   001020                     
  1681                           ;MCAL_Layer/GPIO/hel_gpio.c: 27:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1682   001020  0E01               	movlw	1
  1683   001022  6E35               	movwf	gpio_pin_direction_intialize@ret^0,c
  1684                           
  1685                           ;MCAL_Layer/GPIO/hel_gpio.c: 28:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1){
  1686   001024  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1687   001026  B4D8               	btfsc	status,2,c
  1688   001028  EF18  F008         	goto	u941
  1689   00102C  EF1A  F008         	goto	u940
  1690   001030                     u941:
  1691   001030  EF2A  F008         	goto	l1855
  1692   001034                     u940:
  1693   001034  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1694   001036  6ED9               	movwf	fsr2l,c
  1695   001038  6ADA               	clrf	fsr2h,c
  1696   00103A  30DF               	rrcf	223,w,c
  1697   00103C  32E8               	rrcf	wreg,f,c
  1698   00103E  32E8               	rrcf	wreg,f,c
  1699   001040  0B07               	andlw	7
  1700   001042  6E30               	movwf	??_gpio_pin_direction_intialize^0,c
  1701   001044  0E07               	movlw	7
  1702   001046  6430               	cpfsgt	??_gpio_pin_direction_intialize^0,c
  1703   001048  EF28  F008         	goto	u951
  1704   00104C  EF2A  F008         	goto	u950
  1705   001050                     u951:
  1706   001050  EF81  F008         	goto	l1863
  1707   001054                     u950:
  1708   001054                     l1855:
  1709                           
  1710                           ;MCAL_Layer/GPIO/hel_gpio.c: 29:         ret = (Std_ReturnType)0x00;
  1711   001054  0E00               	movlw	0
  1712   001056  6E35               	movwf	gpio_pin_direction_intialize@ret^0,c
  1713                           
  1714                           ;MCAL_Layer/GPIO/hel_gpio.c: 30:     }
  1715   001058  EFA1  F008         	goto	l1865
  1716   00105C                     l1857:
  1717                           
  1718                           ;MCAL_Layer/GPIO/hel_gpio.c: 34:                 (*tris_registers[_pin_config->port] &= 
      +                          ~((uint8) 1 << _pin_config->pin));
  1719   00105C  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1720   00105E  6ED9               	movwf	fsr2l,c
  1721   001060  6ADA               	clrf	fsr2h,c
  1722   001062  30DF               	rrcf	223,w,c
  1723   001064  32E8               	rrcf	wreg,f,c
  1724   001066  32E8               	rrcf	wreg,f,c
  1725   001068  0B07               	andlw	7
  1726   00106A  6E30               	movwf	??_gpio_pin_direction_intialize^0,c
  1727   00106C  0E01               	movlw	1
  1728   00106E  6E31               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  1729   001070  2A30               	incf	??_gpio_pin_direction_intialize^0,f,c
  1730   001072  EF3D  F008         	goto	u964
  1731   001076                     u965:
  1732   001076  90D8               	bcf	status,0,c
  1733   001078  3631               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  1734   00107A                     u964:
  1735   00107A  2E30               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  1736   00107C  EF3B  F008         	goto	u965
  1737   001080  5031               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1738   001082  0AFF               	xorlw	255
  1739   001084  6E32               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  1740   001086  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1741   001088  6ED9               	movwf	fsr2l,c
  1742   00108A  6ADA               	clrf	fsr2h,c
  1743   00108C  50DF               	movf	223,w,c
  1744   00108E  0B07               	andlw	7
  1745   001090  0D02               	mullw	2
  1746   001092  50F3               	movf	243,w,c
  1747   001094  0F15               	addlw	low _tris_registers
  1748   001096  6ED9               	movwf	fsr2l,c
  1749   001098  6ADA               	clrf	fsr2h,c
  1750   00109A  CFDE F033          	movff	postinc2,??_gpio_pin_direction_intialize+3
  1751   00109E  CFDD F034          	movff	postdec2,??_gpio_pin_direction_intialize+4
  1752   0010A2  C033  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  1753   0010A6  C034  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  1754   0010AA  5032               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  1755   0010AC  16DF               	andwf	indf2,f,c
  1756                           
  1757                           ;MCAL_Layer/GPIO/hel_gpio.c: 35:                 break;
  1758   0010AE  EFA1  F008         	goto	l1865
  1759   0010B2                     l1859:
  1760                           
  1761                           ;MCAL_Layer/GPIO/hel_gpio.c: 37:                 (*tris_registers[_pin_config->port] |= 
      +                          ((uint8) 1 << _pin_config->pin));
  1762   0010B2  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1763   0010B4  6ED9               	movwf	fsr2l,c
  1764   0010B6  6ADA               	clrf	fsr2h,c
  1765   0010B8  30DF               	rrcf	223,w,c
  1766   0010BA  32E8               	rrcf	wreg,f,c
  1767   0010BC  32E8               	rrcf	wreg,f,c
  1768   0010BE  0B07               	andlw	7
  1769   0010C0  6E30               	movwf	??_gpio_pin_direction_intialize^0,c
  1770   0010C2  0E01               	movlw	1
  1771   0010C4  6E31               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  1772   0010C6  2A30               	incf	??_gpio_pin_direction_intialize^0,f,c
  1773   0010C8  EF68  F008         	goto	u974
  1774   0010CC                     u975:
  1775   0010CC  90D8               	bcf	status,0,c
  1776   0010CE  3631               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  1777   0010D0                     u974:
  1778   0010D0  2E30               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  1779   0010D2  EF66  F008         	goto	u975
  1780   0010D6  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1781   0010D8  6ED9               	movwf	fsr2l,c
  1782   0010DA  6ADA               	clrf	fsr2h,c
  1783   0010DC  50DF               	movf	223,w,c
  1784   0010DE  0B07               	andlw	7
  1785   0010E0  0D02               	mullw	2
  1786   0010E2  50F3               	movf	243,w,c
  1787   0010E4  0F15               	addlw	low _tris_registers
  1788   0010E6  6ED9               	movwf	fsr2l,c
  1789   0010E8  6ADA               	clrf	fsr2h,c
  1790   0010EA  CFDE F032          	movff	postinc2,??_gpio_pin_direction_intialize+2
  1791   0010EE  CFDD F033          	movff	postdec2,??_gpio_pin_direction_intialize+3
  1792   0010F2  C032  FFD9         	movff	??_gpio_pin_direction_intialize+2,fsr2l
  1793   0010F6  C033  FFDA         	movff	??_gpio_pin_direction_intialize+3,fsr2h
  1794   0010FA  5031               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1795   0010FC  12DF               	iorwf	indf2,f,c
  1796                           
  1797                           ;MCAL_Layer/GPIO/hel_gpio.c: 38:                 break;
  1798   0010FE  EFA1  F008         	goto	l1865
  1799   001102                     l1863:
  1800   001102  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1801   001104  6ED9               	movwf	fsr2l,c
  1802   001106  6ADA               	clrf	fsr2h,c
  1803   001108  BCDF               	btfsc	indf2,6,c
  1804   00110A  EF89  F008         	goto	u981
  1805   00110E  EF8C  F008         	goto	u980
  1806   001112                     u981:
  1807   001112  0E01               	movlw	1
  1808   001114  EF8D  F008         	goto	u990
  1809   001118                     u980:
  1810   001118  0E00               	movlw	0
  1811   00111A                     u990:
  1812   00111A  6E30               	movwf	??_gpio_pin_direction_intialize^0,c
  1813   00111C  6A31               	clrf	(??_gpio_pin_direction_intialize+1)^0,c
  1814                           
  1815                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1816                           ; Switch size 1, requested type "simple"
  1817                           ; Number of cases is 1, Range of values is 0 to 0
  1818                           ; switch strategies available:
  1819                           ; Name         Instructions Cycles
  1820                           ; simple_byte            4     3 (average)
  1821                           ;	Chosen strategy is simple_byte
  1822   00111E  5031               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1823   001120  0A00               	xorlw	0	; case 0
  1824   001122  B4D8               	btfsc	status,2,c
  1825   001124  EF96  F008         	goto	l2389
  1826   001128  EF2A  F008         	goto	l1855
  1827   00112C                     l2389:
  1828                           
  1829                           ; Switch size 1, requested type "simple"
  1830                           ; Number of cases is 2, Range of values is 0 to 1
  1831                           ; switch strategies available:
  1832                           ; Name         Instructions Cycles
  1833                           ; simple_byte            7     4 (average)
  1834                           ;	Chosen strategy is simple_byte
  1835   00112C  5030               	movf	??_gpio_pin_direction_intialize^0,w,c
  1836   00112E  0A00               	xorlw	0	; case 0
  1837   001130  B4D8               	btfsc	status,2,c
  1838   001132  EF2E  F008         	goto	l1857
  1839   001136  0A01               	xorlw	1	; case 1
  1840   001138  B4D8               	btfsc	status,2,c
  1841   00113A  EF59  F008         	goto	l1859
  1842   00113E  EF2A  F008         	goto	l1855
  1843   001142                     l1865:
  1844                           
  1845                           ;MCAL_Layer/GPIO/hel_gpio.c: 42:     return ret;
  1846   001142  5035               	movf	gpio_pin_direction_intialize@ret^0,w,c
  1847   001144  0012               	return		;funcret
  1848   001146                     __end_of_gpio_pin_direction_intialize:
  1849                           	callstack 0
  1850                           
  1851                           	psect	rparam
  1852   000000                     
  1853                           	psect	config
  1854                           
  1855                           ; Padding undefined space
  1856   300000                     	org	3145728
  1857   300000  FF                 	db	255
  1858                           
  1859                           ;Config register CONFIG1H @ 0x300001
  1860                           ;	Oscillator Selection bits
  1861                           ;	OSC = HS, HS oscillator
  1862                           ;	Fail-Safe Clock Monitor Enable bit
  1863                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1864                           ;	Internal/External Oscillator Switchover bit
  1865                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1866   300001                     	org	3145729
  1867   300001  02                 	db	2
  1868                           
  1869                           ;Config register CONFIG2L @ 0x300002
  1870                           ;	Power-up Timer Enable bit
  1871                           ;	PWRT = OFF, PWRT disabled
  1872                           ;	Brown-out Reset Enable bits
  1873                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1874                           ;	Brown Out Reset Voltage bits
  1875                           ;	BORV = 1, 
  1876   300002                     	org	3145730
  1877   300002  09                 	db	9
  1878                           
  1879                           ;Config register CONFIG2H @ 0x300003
  1880                           ;	Watchdog Timer Enable bit
  1881                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1882                           ;	Watchdog Timer Postscale Select bits
  1883                           ;	WDTPS = 32768, 1:32768
  1884   300003                     	org	3145731
  1885   300003  1E                 	db	30
  1886                           
  1887                           ; Padding undefined space
  1888   300004                     	org	3145732
  1889   300004  FF                 	db	255
  1890                           
  1891                           ;Config register CONFIG3H @ 0x300005
  1892                           ;	CCP2 MUX bit
  1893                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1894                           ;	PORTB A/D Enable bit
  1895                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1896                           ;	Low-Power Timer1 Oscillator Enable bit
  1897                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1898                           ;	MCLR Pin Enable bit
  1899                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1900   300005                     	org	3145733
  1901   300005  81                 	db	129
  1902                           
  1903                           ;Config register CONFIG4L @ 0x300006
  1904                           ;	Stack Full/Underflow Reset Enable bit
  1905                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1906                           ;	Single-Supply ICSP Enable bit
  1907                           ;	LVP = OFF, Single-Supply ICSP disabled
  1908                           ;	Extended Instruction Set Enable bit
  1909                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1910                           ;	Background Debugger Enable bit
  1911                           ;	DEBUG = 0x1, unprogrammed default
  1912   300006                     	org	3145734
  1913   300006  81                 	db	129
  1914                           
  1915                           ; Padding undefined space
  1916   300007                     	org	3145735
  1917   300007  FF                 	db	255
  1918                           
  1919                           ;Config register CONFIG5L @ 0x300008
  1920                           ;	Code Protection bit
  1921                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1922                           ;	Code Protection bit
  1923                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1924                           ;	Code Protection bit
  1925                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1926                           ;	Code Protection bit
  1927                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1928   300008                     	org	3145736
  1929   300008  0F                 	db	15
  1930                           
  1931                           ;Config register CONFIG5H @ 0x300009
  1932                           ;	Boot Block Code Protection bit
  1933                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1934                           ;	Data EEPROM Code Protection bit
  1935                           ;	CPD = OFF, Data EEPROM not code-protected
  1936   300009                     	org	3145737
  1937   300009  C0                 	db	192
  1938                           
  1939                           ;Config register CONFIG6L @ 0x30000A
  1940                           ;	Write Protection bit
  1941                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1942                           ;	Write Protection bit
  1943                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1944                           ;	Write Protection bit
  1945                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1946                           ;	Write Protection bit
  1947                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1948   30000A                     	org	3145738
  1949   30000A  0F                 	db	15
  1950                           
  1951                           ;Config register CONFIG6H @ 0x30000B
  1952                           ;	Configuration Register Write Protection bit
  1953                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1954                           ;	Boot Block Write Protection bit
  1955                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1956                           ;	Data EEPROM Write Protection bit
  1957                           ;	WRTD = OFF, Data EEPROM not write-protected
  1958   30000B                     	org	3145739
  1959   30000B  E0                 	db	224
  1960                           
  1961                           ;Config register CONFIG7L @ 0x30000C
  1962                           ;	Table Read Protection bit
  1963                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1964                           ;	Table Read Protection bit
  1965                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1966                           ;	Table Read Protection bit
  1967                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1968                           ;	Table Read Protection bit
  1969                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1970   30000C                     	org	3145740
  1971   30000C  0F                 	db	15
  1972                           
  1973                           ;Config register CONFIG7H @ 0x30000D
  1974                           ;	Boot Block Table Read Protection bit
  1975                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1976   30000D                     	org	3145741
  1977   30000D  40                 	db	64
  1978                           tosu	equ	0xFFF
  1979                           tosh	equ	0xFFE
  1980                           tosl	equ	0xFFD
  1981                           stkptr	equ	0xFFC
  1982                           pclatu	equ	0xFFB
  1983                           pclath	equ	0xFFA
  1984                           pcl	equ	0xFF9
  1985                           tblptru	equ	0xFF8
  1986                           tblptrh	equ	0xFF7
  1987                           tblptrl	equ	0xFF6
  1988                           tablat	equ	0xFF5
  1989                           prodh	equ	0xFF4
  1990                           prodl	equ	0xFF3
  1991                           indf0	equ	0xFEF
  1992                           postinc0	equ	0xFEE
  1993                           postdec0	equ	0xFED
  1994                           preinc0	equ	0xFEC
  1995                           plusw0	equ	0xFEB
  1996                           fsr0h	equ	0xFEA
  1997                           fsr0l	equ	0xFE9
  1998                           wreg	equ	0xFE8
  1999                           indf1	equ	0xFE7
  2000                           postinc1	equ	0xFE6
  2001                           postdec1	equ	0xFE5
  2002                           preinc1	equ	0xFE4
  2003                           plusw1	equ	0xFE3
  2004                           fsr1h	equ	0xFE2
  2005                           fsr1l	equ	0xFE1
  2006                           bsr	equ	0xFE0
  2007                           indf2	equ	0xFDF
  2008                           postinc2	equ	0xFDE
  2009                           postdec2	equ	0xFDD
  2010                           preinc2	equ	0xFDC
  2011                           plusw2	equ	0xFDB
  2012                           fsr2h	equ	0xFDA
  2013                           fsr2l	equ	0xFD9
  2014                           status	equ	0xFD8

Data Sizes:
    Strings     14
    Constant    16
    Data        46
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     27      80
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    gpio_pin_direction_intialize@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), lcd_2(COMRAM[10]), lcd_2$lcd_data(COMRAM[8]), 
		 -> led_initialize@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_intialize@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), lcd_2(COMRAM[10]), lcd_2$lcd_data(COMRAM[8]), 
		 -> led_initialize@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), lcd_2(COMRAM[10]), lcd_2$lcd_data(COMRAM[8]), 
		 -> led_initialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 
		 -> relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    lcd_4bit_initialize@_lcd_	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_8bit_initialize@_lcd_	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_char_data@_lcd_	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_command@_lcd_	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_enable_signal@_lcd_	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_string_position@_lcd_	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_string_position@str	PTR unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[6]), STR_2(CODE[8]), 

    lcd_8bit_set_cursor@_lcd_	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 


Critical Paths under _main in COMRAM

    _main->_lcd_8bit_send_string_position
    _lcd_8bit_send_string_position->_lcd_8bit_set_cursor
    _lcd_8bit_set_cursor->_lcd_8bit_send_command
    _lcd_8bit_send_char_data->_lcd_8bit_send_enable_signal
    _application_intialize->_lcd_8bit_initialize
    _lcd_8bit_initialize->_lcd_8bit_send_command
    _lcd_8bit_send_command->_lcd_8bit_send_enable_signal
    _lcd_8bit_send_enable_signal->_gpio_pin_write_logic
    _lcd_4bit_initialize->_gpio_pin_intialize
    _gpio_pin_intialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   50453
              _application_intialize
      _lcd_8bit_send_string_position
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_send_string_position                        5     1      4   24365
                                             22 COMRAM     5     1      4
            _lcd_8bit_send_char_data
                _lcd_8bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_set_cursor                                  6     3      3   12889
                                             16 COMRAM     6     3      3
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_char_data                              6     4      2   10687
                                             10 COMRAM     6     4      2
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                1     1      0   26085
                _lcd_4bit_initialize
                _lcd_8bit_initialize
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_initialize                                  4     3      1   19248
                                             16 COMRAM     4     3      1
                 _gpio_pin_intialize
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_command                                6     4      2   12207
                                             10 COMRAM     6     4      2
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (4) _lcd_8bit_send_enable_signal                          2     1      1    5112
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_initialize                                  3     2      1    6834
                                             11 COMRAM     3     2      1
                 _gpio_pin_intialize
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_intialize                                   3     2      1    6574
                                              8 COMRAM     3     2      1
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                 8     6      2    4891
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_intialize                         7     6      1     407
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_intialize
     _lcd_4bit_initialize
       _gpio_pin_intialize
         _gpio_pin_direction_intialize
         _gpio_pin_write_logic
     _lcd_8bit_initialize
       _gpio_pin_intialize
       _lcd_8bit_send_command
         _gpio_pin_write_logic
         _lcd_8bit_send_enable_signal
           _gpio_pin_write_logic
   _lcd_8bit_send_string_position
     _lcd_8bit_send_char_data
       _gpio_pin_write_logic
       _lcd_8bit_send_enable_signal
     _lcd_8bit_set_cursor
       _lcd_8bit_send_command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     1B      50       1       63.0%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      50      39        0.0%
DATA                 0      0      50       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Nov 14 21:44:47 2023

     lcd_8bit_send_string_position@_lcd_ 0045      lcd_8bit_send_string_position@column 0047  
                                    l210 1588                                      l203 1144  
                                    l314 15E0                                      l229 1254  
                                    l351 133E                                      l409 169C  
                                    l291 16AE                                      l419 13D6  
                                    l365 144C                                      l358 14C2  
                                    l386 152A                                      u900 115A  
                                    u901 1156                                      u910 117A  
                                    u911 1176                                      u940 1034  
                                    u924 11A0                                      u941 1030  
                                    u925 119C                                      u950 1054  
                                    u934 11F6                                      u951 1050  
                                    u935 11F2                                      u980 1118  
                                    u964 107A                                      u981 1112  
                                    u965 1076                                      u990 111A  
                                    u974 10D0                                      u975 10CC  
                    led_initialize@F2891 0050                                      wreg 0FE8  
                  relay_initialize@F2885 004C              __end_of_lcd_8bit_set_cursor 13D8  
                                   l2001 1430                                     l2003 1440  
                                   l2011 1344                                     l2005 144A  
                                   l2013 134A                                     l2021 139A  
                                   l2031 169E                                     l2015 135E  
                                   l2023 13D4                                     l2033 169E  
                                   l2017 1372                                     l2009 1340  
                                   l2041 14DC                                     l2035 16A6  
                                   l2019 1386                                     l2043 14F2  
                                   l2045 150A                                     l2037 14C4  
                                   l2301 1618                                     l2047 150C  
                                   l2039 14D4                                     l2303 1618  
                                   l2049 1528                                     l2305 161C  
                                   l2307 1630                                     l1901 1476  
                                   l1831 115A                                     l1911 14A6  
                                   l1841 1228                                     l1833 117A  
                                   l1921 159E                                     l1913 14B6  
                                   l2385 13AE                                     l1851 1020  
                                   l2387 123C                                     l1835 1182  
                                   l1843 1252                                     l1931 15BE  
                                   l1923 15A6                                     l1907 147A  
                                   l1915 14C0                                     l2389 112C  
                                   l1853 1034                                     l1837 11D8  
                                   l1829 1146                                     l1933 15CC  
                                   l1925 15BA                                     l1909 14A4  
                                   l1941 1256                                     l1863 1102  
                                   l1855 1054                                     l1935 15CE  
                                   l1919 158A                                     l1943 126A  
                                   l1857 105C                                     l1865 1142  
                                   l1937 15DE                                     l1873 167A  
                                   l1961 12B8                                     l1953 128A  
                                   l1945 1272                                     l1859 10B2  
                                   l1891 1586                                     l1883 152C  
                                   l1875 167A                                     l1971 12FE  
                                   l1963 12C4                                     l1955 1296  
                                   l1947 1286                                     l1885 153C  
                                   l1877 1686                                     l1973 130A  
                                   l1965 12E0                                     l1957 1298  
                                   l1981 133C                                     l1887 155C  
                                   l1879 168C                                     l1895 144E  
                                   l1975 1316                                     l1967 12E6  
                                   l1959 12A8                                     l1991 1400  
                                   l1889 1564                                     l1897 1462  
                                   l1977 1322                                     l1969 12F2  
                                   l1985 13D8                                     l1899 146A  
                                   l1979 132E                                     l1987 13EC  
                                   l1997 1404                                     l1989 13F4  
                                   l1999 142E                                     STR_1 1019  
                                   STR_2 1011                                     u1000 153C  
                                   u1001 1538                                     u1010 155C  
                                   u1011 1558                                     u1020 1462  
                                   u1021 145E                                     u1110 1440  
                                   u1111 143C                                     u1040 14B6  
                                   u1104 141E                                     u1120 14D4  
                                   u1041 14B2                                     u1105 141A  
                                   u1121 14D0                                     u1050 159E  
                                   u1034 1494                                     u1130 1528  
                                   u1051 159A                                     u1035 1490  
                                   u1131 1524                                     u1060 15DE  
                                   u1061 15DA                                     u1070 126A  
                                   u1071 1266                                     u1080 12A8  
     lcd_8bit_send_command@l_pin_counter 003E                                     u1081 12A4  
                                   u1090 13EC                                     u1091 13E8  
                                   _LATA 0F89                                     _LATB 0F8A  
                                   _LATC 0F8B                                     _LATD 0F8C  
                                   _LATE 0F8D                                     u1507 12E2  
                                   u1487 12AE                                     u1497 12CA  
                ??_application_intialize 0043                                     _main 1618  
                                   fsr2h 0FDA                                     indf2 0FDF  
                                   fsr1l 0FE1                                     fsr2l 0FD9  
                                   prodl 0FF3                                     start 0000  
          __end_of_lcd_8bit_send_command 14C4                             ___param_bank 0000  
                   _gpio_pin_write_logic 1146                                    ?_main 002F  
                    relay_turn_off@F2895 004A                                    _PORTA 0F80  
                                  _PORTB 0F81                                    _PORTC 0F82  
                                  _PORTD 0F83                                    _PORTE 0F84  
                                  _TRISA 0F92                                    _TRISB 0F93  
                                  _TRISC 0F94                                    _TRISD 0F95  
                                  _TRISE 0F96                                    _lcd_1 0029  
                                  _lcd_2 001F                 ?_lcd_8bit_send_char_data 0039  
                                  tablat 0FF5                                    status 0FD8  
                        __initialization 15E2                             __end_of_main 164C  
                  ?_gpio_pin_write_logic 002F                   lcd_8bit_set_cursor@ret 0044  
                 lcd_8bit_set_cursor@row 0040                            _lat_registers 000B  
                                 ??_main 004A                            __activetblptr 0002  
                       led_turn_on@F2896 004F                                   clear_0 1608  
                                 isa$std 0001  gpio_pin_direction_intialize@_pin_config 002F  
                           __pdataCOMRAM 0001                             __mediumconst 0000  
                                 tblptrh 0FF7                                   tblptrl 0FF6  
                                 tblptru 0FF8               lcd_8bit_send_command@_lcd_ 0039  
                             __accesstop 0080                  __end_of__initialization 160E  
                          ___rparam_used 0001                   ??_gpio_pin_write_logic 0031  
                         __pcstackCOMRAM 002F                 lcd_8bit_initialize@_lcd_ 003F  
          __end_of_application_intialize 16B0                   lcd_8bit_initialize@ret 0042  
           lcd_8bit_send_char_data@_lcd_ 0039                        led_turn_off@F2901 004E  
       lcd_8bit_send_string_position@ret 0049         lcd_8bit_send_string_position@row 0046  
       lcd_8bit_send_string_position@str 0048                     led_turn_toggle@F2906 004D  
    __end_of_lcd_8bit_send_enable_signal 169E              _lcd_8bit_send_enable_signal 167A  
                             _btn_values 1001          ??_lcd_8bit_send_string_position 0049  
         lcd_8bit_send_enable_signal@ret 0038                           _tris_registers 0015  
          ??_lcd_8bit_send_enable_signal 0038   lcd_8bit_initialize@l_data_pins_counter 0041  
 lcd_4bit_initialize@l_data_pins_counter 003C                                  __Hparam 0000  
                                __Lparam 0000                    _lcd_8bit_send_command 144E  
                           __psmallconst 1000               __end_of_gpio_pin_intialize 158A  
                                __pcinit 15E2                                  __ramtop 1000  
                                __ptext0 1618                                  __ptext1 14C4  
                                __ptext2 1340                                  __ptext3 13D8  
                                __ptext4 169E                                  __ptext5 1256  
                                __ptext6 144E                                  __ptext7 167A  
                                __ptext8 158A                                  __ptext9 152C  
                   end_of_initialization 160E                            __Lmediumconst 0000  
                  gpio_pin_intialize@ret 0039                                  postdec1 0FE5  
                                postdec2 0FDD                                  postinc0 0FEE  
                                postinc2 0FDE                      _lcd_4bit_initialize 158A  
          gpio_pin_intialize@_pin_config 0037     __end_of_gpio_pin_direction_intialize 1146  
           _gpio_pin_direction_intialize 1020                     ?_lcd_4bit_initialize 003A  
       lcd_8bit_send_enable_signal@_lcd_ 0037    __end_of_lcd_8bit_send_string_position 152C  
          _lcd_8bit_send_string_position 14C4                   ?_lcd_8bit_send_command 0039  
                     relay_turn_on@F2890 004B                            __pidataCOMRAM 164C  
                    start_initialization 15E2                      _lcd_8bit_initialize 1256  
          ?_gpio_pin_direction_intialize 002F                    ??_lcd_4bit_initialize 003B  
               lcd_8bit_set_cursor@_lcd_ 003F                     ?_lcd_8bit_initialize 003F  
                _lcd_8bit_send_char_data 13D8                      _lcd_8bit_set_cursor 1340  
               lcd_8bit_send_command@ret 003D                              __pbssCOMRAM 004A  
                   ?_lcd_8bit_set_cursor 003F          gpio_pin_direction_intialize@ret 0035  
                  ??_lcd_8bit_initialize 0040                    _application_intialize 169E  
            lcd_8bit_send_char_data@data 003A          gpio_pin_write_logic@_pin_config 002F  
         ?_lcd_8bit_send_string_position 0045                gpio_pin_write_logic@logic 0030  
                            __smallconst 1000                       _gpio_pin_intialize 152C  
                  ??_lcd_8bit_set_cursor 0042           ??_gpio_pin_direction_intialize 0030  
              ??_lcd_8bit_send_char_data 003B                      ?_gpio_pin_intialize 0037  
   lcd_8bit_send_char_data@l_pin_counter 003E                     ??_gpio_pin_intialize 0038  
              lcd_8bit_set_cursor@coulmn 0041                  gpio_pin_write_logic@ret 0036  
                              copy_data0 15F6                  ??_lcd_8bit_send_command 003B  
                 ?_application_intialize 002F                                 __Hrparam 0000  
                               __Lrparam 0000          __end_of_lcd_8bit_send_char_data 144E  
                     __end_of_btn_values 1011               lcd_8bit_send_char_data@ret 003D  
                               __ptext10 1146                                 __ptext11 1020  
                               isa$xinst 0000              __end_of_lcd_4bit_initialize 15E2  
           __end_of_gpio_pin_write_logic 1256             ?_lcd_8bit_send_enable_signal 0037  
                         _port_registers 0001              __end_of_lcd_8bit_initialize 1340  
               lcd_4bit_initialize@_lcd_ 003A             lcd_8bit_send_command@command 003A  
                 lcd_4bit_initialize@ret 003B  
