

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Nov 14 21:57:35 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    29   000000                     
    30                           ; Generated 23/03/2023 GMT
    31                           ; 
    32                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F4620 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64   000000                     
    65                           	psect	idataCOMRAM
    66   001736                     __pidataCOMRAM:
    67                           	callstack 0
    68                           
    69                           ;initializer for _port_registers
    70   001736  80                 	db	128
    71   001737  0F                 	db	15
    72   001738  81                 	db	129
    73   001739  0F                 	db	15
    74   00173A  82                 	db	130
    75   00173B  0F                 	db	15
    76   00173C  83                 	db	131
    77   00173D  0F                 	db	15
    78   00173E  84                 	db	132
    79   00173F  0F                 	db	15
    80                           
    81                           ;initializer for _lat_registers
    82   001740  89                 	db	137
    83   001741  0F                 	db	15
    84   001742  8A                 	db	138
    85   001743  0F                 	db	15
    86   001744  8B                 	db	139
    87   001745  0F                 	db	15
    88   001746  8C                 	db	140
    89   001747  0F                 	db	15
    90   001748  8D                 	db	141
    91   001749  0F                 	db	15
    92                           
    93                           ;initializer for _tris_registers
    94   00174A  92                 	db	146
    95   00174B  0F                 	db	15
    96   00174C  93                 	db	147
    97   00174D  0F                 	db	15
    98   00174E  94                 	db	148
    99   00174F  0F                 	db	15
   100   001750  95                 	db	149
   101   001751  0F                 	db	15
   102   001752  96                 	db	150
   103   001753  0F                 	db	15
   104                           
   105                           ;initializer for _lcd_2
   106   001754  32                 	db	50
   107   001755  3A                 	db	58
   108   001756  03                 	db	3
   109   001757  0B                 	db	11
   110   001758  13                 	db	19
   111   001759  1B                 	db	27
   112   00175A  23                 	db	35
   113   00175B  2B                 	db	43
   114   00175C  33                 	db	51
   115   00175D  3B                 	db	59
   116                           
   117                           ;initializer for _lcd_1
   118   00175E  02                 	db	2
   119   00175F  0A                 	db	10
   120   001760  12                 	db	18
   121   001761  1A                 	db	26
   122   001762  22                 	db	34
   123   001763  2A                 	db	42
   124                           
   125                           	psect	smallconst
   126   001000                     __psmallconst:
   127                           	callstack 0
   128   001000  00                 	db	0
   129   001001                     _btn_values:
   130                           	callstack 0
   131   001001  37                 	db	55
   132   001002  38                 	db	56
   133   001003  39                 	db	57
   134   001004  2F                 	db	47
   135   001005  34                 	db	52
   136   001006  35                 	db	53
   137   001007  36                 	db	54
   138   001008  2A                 	db	42
   139   001009  31                 	db	49
   140   00100A  32                 	db	50
   141   00100B  33                 	db	51
   142   00100C  2D                 	db	45
   143   00100D  23                 	db	35
   144   00100E  30                 	db	48
   145   00100F  3D                 	db	61
   146   001010  2B                 	db	43
   147   001011                     __end_of_btn_values:
   148                           	callstack 0
   149   000000                     _PORTE	set	3972
   150   000000                     _PORTD	set	3971
   151   000000                     _PORTC	set	3970
   152   000000                     _PORTB	set	3969
   153   000000                     _PORTA	set	3968
   154   000000                     _LATA	set	3977
   155   000000                     _TRISA	set	3986
   156   000000                     _TRISE	set	3990
   157   000000                     _TRISD	set	3989
   158   000000                     _TRISC	set	3988
   159   000000                     _TRISB	set	3987
   160   000000                     _LATE	set	3981
   161   000000                     _LATD	set	3980
   162   000000                     _LATC	set	3979
   163   000000                     _LATB	set	3978
   164   001011  00                 	db	0	; dummy byte at the end
   165   000000                     
   166                           ; #config settings
   167                           
   168                           	psect	cinit
   169   0016CC                     __pcinit:
   170                           	callstack 0
   171   0016CC                     start_initialization:
   172                           	callstack 0
   173   0016CC                     __initialization:
   174                           	callstack 0
   175                           
   176                           ; Initialize objects allocated to COMRAM (46 bytes)
   177                           ; load TBLPTR registers with __pidataCOMRAM
   178   0016CC  0E36               	movlw	low __pidataCOMRAM
   179   0016CE  6EF6               	movwf	tblptrl,c
   180   0016D0  0E17               	movlw	high __pidataCOMRAM
   181   0016D2  6EF7               	movwf	tblptrh,c
   182   0016D4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   183   0016D6  6EF8               	movwf	tblptru,c
   184   0016D8  EE00  F001         	lfsr	0,__pdataCOMRAM
   185   0016DC  EE10 F02E          	lfsr	1,46
   186   0016E0                     copy_data0:
   187   0016E0  0009               	tblrd		*+
   188   0016E2  CFF5 FFEE          	movff	tablat,postinc0
   189   0016E6  50E5               	movf	postdec1,w,c
   190   0016E8  50E1               	movf	fsr1l,w,c
   191   0016EA  E1FA               	bnz	copy_data0
   192                           
   193                           ; Clear objects allocated to COMRAM (7 bytes)
   194   0016EC  EE00  F048         	lfsr	0,__pbssCOMRAM
   195   0016F0  0E07               	movlw	7
   196   0016F2                     clear_0:
   197   0016F2  6AEE               	clrf	postinc0,c
   198   0016F4  06E8               	decf	wreg,f,c
   199   0016F6  E1FD               	bnz	clear_0
   200   0016F8                     end_of_initialization:
   201                           	callstack 0
   202   0016F8                     __end_of__initialization:
   203                           	callstack 0
   204   0016F8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   205   0016FA  6EF8               	movwf	tblptru,c
   206   0016FC  0100               	movlb	0
   207   0016FE  EF81  F00B         	goto	_main	;jump to C main() function
   208                           
   209                           	psect	bssCOMRAM
   210   000048                     __pbssCOMRAM:
   211                           	callstack 0
   212   000048                     relay_turn_off@F2895:
   213                           	callstack 0
   214   000048                     	ds	1
   215   000049                     relay_turn_on@F2890:
   216                           	callstack 0
   217   000049                     	ds	1
   218   00004A                     relay_initialize@F2885:
   219                           	callstack 0
   220   00004A                     	ds	1
   221   00004B                     led_turn_toggle@F2906:
   222                           	callstack 0
   223   00004B                     	ds	1
   224   00004C                     led_turn_off@F2901:
   225                           	callstack 0
   226   00004C                     	ds	1
   227   00004D                     led_turn_on@F2896:
   228                           	callstack 0
   229   00004D                     	ds	1
   230   00004E                     led_initialize@F2891:
   231                           	callstack 0
   232   00004E                     	ds	1
   233                           
   234                           	psect	dataCOMRAM
   235   000001                     __pdataCOMRAM:
   236                           	callstack 0
   237   000001                     _port_registers:
   238                           	callstack 0
   239   000001                     	ds	10
   240   00000B                     _lat_registers:
   241                           	callstack 0
   242   00000B                     	ds	10
   243   000015                     _tris_registers:
   244                           	callstack 0
   245   000015                     	ds	10
   246   00001F                     _lcd_2:
   247                           	callstack 0
   248   00001F                     	ds	10
   249   000029                     _lcd_1:
   250                           	callstack 0
   251   000029                     	ds	6
   252                           
   253                           	psect	cstackCOMRAM
   254   00002F                     __pcstackCOMRAM:
   255                           	callstack 0
   256   00002F                     gpio_pin_direction_intialize@_pin_config:
   257                           	callstack 0
   258   00002F                     gpio_pin_write_logic@_pin_config:
   259                           	callstack 0
   260                           
   261                           ; 1 bytes @ 0x0
   262   00002F                     	ds	1
   263   000030                     ??_gpio_pin_direction_intialize:
   264   000030                     gpio_pin_write_logic@logic:
   265                           	callstack 0
   266                           
   267                           ; 1 bytes @ 0x1
   268   000030                     	ds	1
   269   000031                     ??_gpio_pin_write_logic:
   270                           
   271                           ; 1 bytes @ 0x2
   272   000031                     	ds	4
   273   000035                     gpio_pin_direction_intialize@ret:
   274                           	callstack 0
   275                           
   276                           ; 1 bytes @ 0x6
   277   000035                     	ds	1
   278   000036                     gpio_pin_write_logic@ret:
   279                           	callstack 0
   280                           
   281                           ; 1 bytes @ 0x7
   282   000036                     	ds	1
   283   000037                     gpio_pin_intialize@_pin_config:
   284                           	callstack 0
   285   000037                     lcd_send_4bits@_lcd_:
   286                           	callstack 0
   287   000037                     lcd_4bit_send_enable_signal@_lcd_:
   288                           	callstack 0
   289   000037                     lcd_8bit_send_enable_signal@_lcd_:
   290                           	callstack 0
   291                           
   292                           ; 1 bytes @ 0x8
   293   000037                     	ds	1
   294   000038                     ??_gpio_pin_intialize:
   295   000038                     lcd_send_4bits@_data_command:
   296                           	callstack 0
   297   000038                     lcd_4bit_send_enable_signal@ret:
   298                           	callstack 0
   299   000038                     lcd_8bit_send_enable_signal@ret:
   300                           	callstack 0
   301                           
   302                           ; 1 bytes @ 0x9
   303   000038                     	ds	1
   304   000039                     gpio_pin_intialize@ret:
   305                           	callstack 0
   306   000039                     lcd_8bit_send_command@_lcd_:
   307                           	callstack 0
   308   000039                     lcd_send_4bits@ret:
   309                           	callstack 0
   310                           
   311                           ; 1 bytes @ 0xA
   312   000039                     	ds	1
   313   00003A                     lcd_4bit_send_command@_lcd_:
   314                           	callstack 0
   315   00003A                     lcd_4bit_send_char_data@_lcd_:
   316                           	callstack 0
   317   00003A                     lcd_8bit_send_command@command:
   318                           	callstack 0
   319                           
   320                           ; 1 bytes @ 0xB
   321   00003A                     	ds	1
   322   00003B                     ??_lcd_8bit_send_command:
   323   00003B                     lcd_4bit_send_command@command:
   324                           	callstack 0
   325   00003B                     lcd_4bit_send_char_data@data:
   326                           	callstack 0
   327                           
   328                           ; 1 bytes @ 0xC
   329   00003B                     	ds	1
   330   00003C                     lcd_4bit_send_command@ret:
   331                           	callstack 0
   332   00003C                     lcd_4bit_send_char_data@ret:
   333                           	callstack 0
   334                           
   335                           ; 1 bytes @ 0xD
   336   00003C                     	ds	1
   337   00003D                     lcd_4bit_initialize@_lcd_:
   338                           	callstack 0
   339   00003D                     lcd_8bit_send_command@ret:
   340                           	callstack 0
   341   00003D                     lcd_4bit_set_cursor@_lcd_:
   342                           	callstack 0
   343                           
   344                           ; 1 bytes @ 0xE
   345   00003D                     	ds	1
   346   00003E                     ??_lcd_4bit_initialize:
   347   00003E                     lcd_8bit_send_command@l_pin_counter:
   348                           	callstack 0
   349   00003E                     lcd_4bit_set_cursor@row:
   350                           	callstack 0
   351                           
   352                           ; 1 bytes @ 0xF
   353   00003E                     	ds	1
   354   00003F                     lcd_4bit_initialize@l_data_pins_counter:
   355                           	callstack 0
   356   00003F                     lcd_8bit_initialize@_lcd_:
   357                           	callstack 0
   358   00003F                     lcd_4bit_set_cursor@coulmn:
   359                           	callstack 0
   360                           
   361                           ; 1 bytes @ 0x10
   362   00003F                     	ds	1
   363   000040                     ??_lcd_8bit_initialize:
   364   000040                     ??_lcd_4bit_set_cursor:
   365   000040                     lcd_4bit_initialize@ret:
   366                           	callstack 0
   367                           
   368                           ; 1 bytes @ 0x11
   369   000040                     	ds	1
   370   000041                     lcd_8bit_initialize@l_data_pins_counter:
   371                           	callstack 0
   372                           
   373                           ; 1 bytes @ 0x12
   374   000041                     	ds	1
   375   000042                     lcd_8bit_initialize@ret:
   376                           	callstack 0
   377   000042                     lcd_4bit_set_cursor@ret:
   378                           	callstack 0
   379                           
   380                           ; 1 bytes @ 0x13
   381   000042                     	ds	1
   382   000043                     lcd_4bit_send_char_data_position@_lcd_:
   383                           	callstack 0
   384                           
   385                           ; 1 bytes @ 0x14
   386   000043                     	ds	1
   387   000044                     lcd_4bit_send_char_data_position@row:
   388                           	callstack 0
   389                           
   390                           ; 1 bytes @ 0x15
   391   000044                     	ds	1
   392   000045                     lcd_4bit_send_char_data_position@column:
   393                           	callstack 0
   394                           
   395                           ; 1 bytes @ 0x16
   396   000045                     	ds	1
   397   000046                     lcd_4bit_send_char_data_position@data:
   398                           	callstack 0
   399                           
   400                           ; 1 bytes @ 0x17
   401   000046                     	ds	1
   402   000047                     lcd_4bit_send_char_data_position@ret:
   403                           	callstack 0
   404                           
   405                           ; 1 bytes @ 0x18
   406   000047                     	ds	1
   407   000048                     
   408                           ; 1 bytes @ 0x19
   409 ;;
   410 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   411 ;;
   412 ;; *************** function _main *****************
   413 ;; Defined at:
   414 ;;		line 98 in file "application.c"
   415 ;; Parameters:    Size  Location     Type
   416 ;;		None
   417 ;; Auto vars:     Size  Location     Type
   418 ;;  ret             1    0        unsigned char 
   419 ;; Return value:  Size  Location     Type
   420 ;;                  2  284[None  ] int 
   421 ;; Registers used:
   422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   423 ;; Tracked objects:
   424 ;;		On entry : 0/0
   425 ;;		On exit  : 0/0
   426 ;;		Unchanged: 0/0
   427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   432 ;;Total ram usage:        0 bytes
   433 ;; Hardware stack levels required when called: 5
   434 ;; This function calls:
   435 ;;		_application_intialize
   436 ;;		_lcd_4bit_send_char_data_position
   437 ;; This function is called by:
   438 ;;		Startup code after reset
   439 ;; This function uses a non-reentrant model
   440 ;;
   441                           
   442                           	psect	text0
   443   001702                     __ptext0:
   444                           	callstack 0
   445   001702                     _main:
   446                           	callstack 26
   447   001702                     
   448                           ;application.c: 100:     application_intialize();
   449   001702  ECD6  F00B         	call	_application_intialize	;wreg free
   450   001706                     l2421:
   451   001706  0E29               	movlw	low _lcd_1
   452   001708  6E43               	movwf	lcd_4bit_send_char_data_position@_lcd_^0,c
   453   00170A  0E01               	movlw	1
   454   00170C  6E44               	movwf	lcd_4bit_send_char_data_position@row^0,c
   455   00170E  0E01               	movlw	1
   456   001710  6E45               	movwf	lcd_4bit_send_char_data_position@column^0,c
   457   001712  0E64               	movlw	100
   458   001714  6E46               	movwf	lcd_4bit_send_char_data_position@data^0,c
   459   001716  EC48  F00B         	call	_lcd_4bit_send_char_data_position	;wreg free
   460   00171A  0E29               	movlw	low _lcd_1
   461   00171C  6E43               	movwf	lcd_4bit_send_char_data_position@_lcd_^0,c
   462   00171E  0E02               	movlw	2
   463   001720  6E44               	movwf	lcd_4bit_send_char_data_position@row^0,c
   464   001722  0E01               	movlw	1
   465   001724  6E45               	movwf	lcd_4bit_send_char_data_position@column^0,c
   466   001726  0E61               	movlw	97
   467   001728  6E46               	movwf	lcd_4bit_send_char_data_position@data^0,c
   468   00172A  EC48  F00B         	call	_lcd_4bit_send_char_data_position	;wreg free
   469   00172E  EF83  F00B         	goto	l2421
   470   001732  EF00  F000         	goto	start
   471   001736                     __end_of_main:
   472                           	callstack 0
   473                           
   474 ;; *************** function _lcd_4bit_send_char_data_position *****************
   475 ;; Defined at:
   476 ;;		line 121 in file "ECU_Layer/LCD/ecu_lcd.c"
   477 ;; Parameters:    Size  Location     Type
   478 ;;  _lcd_           1   20[COMRAM] PTR const struct .
   479 ;;		 -> lcd_1(6), 
   480 ;;  row             1   21[COMRAM] unsigned char 
   481 ;;  column          1   22[COMRAM] unsigned char 
   482 ;;  data            1   23[COMRAM] unsigned char 
   483 ;; Auto vars:     Size  Location     Type
   484 ;;  ret             1   24[COMRAM] unsigned char 
   485 ;; Return value:  Size  Location     Type
   486 ;;                  1    wreg      unsigned char 
   487 ;; Registers used:
   488 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   489 ;; Tracked objects:
   490 ;;		On entry : 0/0
   491 ;;		On exit  : 0/0
   492 ;;		Unchanged: 0/0
   493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   494 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   495 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   497 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   498 ;;Total ram usage:        5 bytes
   499 ;; Hardware stack levels used: 1
   500 ;; Hardware stack levels required when called: 4
   501 ;; This function calls:
   502 ;;		_lcd_4bit_send_char_data
   503 ;;		_lcd_4bit_set_cursor
   504 ;; This function is called by:
   505 ;;		_main
   506 ;; This function uses a non-reentrant model
   507 ;;
   508                           
   509                           	psect	text1
   510   001690                     __ptext1:
   511                           	callstack 0
   512   001690                     _lcd_4bit_send_char_data_position:
   513                           	callstack 26
   514   001690                     
   515                           ;ECU_Layer/LCD/ecu_lcd.c: 123:     if(((void*)0) == _lcd_){
   516   001690  5043               	movf	lcd_4bit_send_char_data_position@_lcd_^0,w,c
   517   001692  A4D8               	btfss	status,2,c
   518   001694  EF4E  F00B         	goto	u1111
   519   001698  EF50  F00B         	goto	u1110
   520   00169C                     u1111:
   521   00169C  EF54  F00B         	goto	l2137
   522   0016A0                     u1110:
   523   0016A0                     
   524                           ;ECU_Layer/LCD/ecu_lcd.c: 124:         ret = (Std_ReturnType)0x00;
   525   0016A0  0E00               	movlw	0
   526   0016A2  6E47               	movwf	lcd_4bit_send_char_data_position@ret^0,c
   527                           
   528                           ;ECU_Layer/LCD/ecu_lcd.c: 125:     }
   529   0016A4  EF64  F00B         	goto	l2139
   530   0016A8                     l2137:
   531                           
   532                           ;ECU_Layer/LCD/ecu_lcd.c: 127:         ret = lcd_4bit_set_cursor(_lcd_, row , column);
   533   0016A8  C043  F03D         	movff	lcd_4bit_send_char_data_position@_lcd_,lcd_4bit_set_cursor@_lcd_
   534   0016AC  C044  F03E         	movff	lcd_4bit_send_char_data_position@row,lcd_4bit_set_cursor@row
   535   0016B0  C045  F03F         	movff	lcd_4bit_send_char_data_position@column,lcd_4bit_set_cursor@coulmn
   536   0016B4  EC0E  F00A         	call	_lcd_4bit_set_cursor	;wreg free
   537   0016B8  6E47               	movwf	lcd_4bit_send_char_data_position@ret^0,c
   538                           
   539                           ;ECU_Layer/LCD/ecu_lcd.c: 128:         ret = lcd_4bit_send_char_data (_lcd_ , data);
   540   0016BA  C043  F03A         	movff	lcd_4bit_send_char_data_position@_lcd_,lcd_4bit_send_char_data@_lcd_
   541   0016BE  C046  F03B         	movff	lcd_4bit_send_char_data_position@data,lcd_4bit_send_char_data@data
   542   0016C2  ECC4  F00A         	call	_lcd_4bit_send_char_data	;wreg free
   543   0016C6  6E47               	movwf	lcd_4bit_send_char_data_position@ret^0,c
   544   0016C8                     l2139:
   545                           
   546                           ;ECU_Layer/LCD/ecu_lcd.c: 132:     return ret;
   547   0016C8  5047               	movf	lcd_4bit_send_char_data_position@ret^0,w,c
   548   0016CA  0012               	return		;funcret
   549   0016CC                     __end_of_lcd_4bit_send_char_data_position:
   550                           	callstack 0
   551                           
   552 ;; *************** function _lcd_4bit_set_cursor *****************
   553 ;; Defined at:
   554 ;;		line 448 in file "ECU_Layer/LCD/ecu_lcd.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;  _lcd_           1   14[COMRAM] PTR const struct .
   557 ;;		 -> lcd_1(6), 
   558 ;;  row             1   15[COMRAM] unsigned char 
   559 ;;  coulmn          1   16[COMRAM] unsigned char 
   560 ;; Auto vars:     Size  Location     Type
   561 ;;  ret             1   19[COMRAM] unsigned char 
   562 ;; Return value:  Size  Location     Type
   563 ;;                  1    wreg      unsigned char 
   564 ;; Registers used:
   565 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   566 ;; Tracked objects:
   567 ;;		On entry : 0/0
   568 ;;		On exit  : 0/0
   569 ;;		Unchanged: 0/0
   570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   571 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   572 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   573 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   574 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   575 ;;Total ram usage:        6 bytes
   576 ;; Hardware stack levels used: 1
   577 ;; Hardware stack levels required when called: 3
   578 ;; This function calls:
   579 ;;		_lcd_4bit_send_command
   580 ;; This function is called by:
   581 ;;		_lcd_4bit_send_char_data_position
   582 ;; This function uses a non-reentrant model
   583 ;;
   584                           
   585                           	psect	text2
   586   00141C                     __ptext2:
   587                           	callstack 0
   588   00141C                     _lcd_4bit_set_cursor:
   589                           	callstack 26
   590   00141C                     
   591                           ;ECU_Layer/LCD/ecu_lcd.c: 449:     Std_ReturnType ret = (Std_ReturnType)0x01;
   592   00141C  0E01               	movlw	1
   593   00141E  6E42               	movwf	lcd_4bit_set_cursor@ret^0,c
   594   001420                     
   595                           ;ECU_Layer/LCD/ecu_lcd.c: 450:     coulmn--;
   596   001420  063F               	decf	lcd_4bit_set_cursor@coulmn^0,f,c
   597                           
   598                           ;ECU_Layer/LCD/ecu_lcd.c: 451:     switch (row){
   599   001422  EF3B  F00A         	goto	l2117
   600   001426                     l2109:
   601   001426  C03D  F03A         	movff	lcd_4bit_set_cursor@_lcd_,lcd_4bit_send_command@_lcd_
   602   00142A  503F               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
   603   00142C  0F80               	addlw	128
   604   00142E  6E3B               	movwf	lcd_4bit_send_command@command^0,c
   605   001430  ECF2  F00A         	call	_lcd_4bit_send_command	;wreg free
   606   001434  6E42               	movwf	lcd_4bit_set_cursor@ret^0,c
   607                           
   608                           ;ECU_Layer/LCD/ecu_lcd.c: 453:         break;
   609   001436  EF58  F00A         	goto	l2119
   610   00143A                     l2111:
   611   00143A  C03D  F03A         	movff	lcd_4bit_set_cursor@_lcd_,lcd_4bit_send_command@_lcd_
   612   00143E  503F               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
   613   001440  0FC0               	addlw	192
   614   001442  6E3B               	movwf	lcd_4bit_send_command@command^0,c
   615   001444  ECF2  F00A         	call	_lcd_4bit_send_command	;wreg free
   616   001448  6E42               	movwf	lcd_4bit_set_cursor@ret^0,c
   617                           
   618                           ;ECU_Layer/LCD/ecu_lcd.c: 455:         break;
   619   00144A  EF58  F00A         	goto	l2119
   620   00144E                     l2113:
   621   00144E  C03D  F03A         	movff	lcd_4bit_set_cursor@_lcd_,lcd_4bit_send_command@_lcd_
   622   001452  503F               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
   623   001454  0F94               	addlw	148
   624   001456  6E3B               	movwf	lcd_4bit_send_command@command^0,c
   625   001458  ECF2  F00A         	call	_lcd_4bit_send_command	;wreg free
   626   00145C  6E42               	movwf	lcd_4bit_set_cursor@ret^0,c
   627                           
   628                           ;ECU_Layer/LCD/ecu_lcd.c: 457:         break;
   629   00145E  EF58  F00A         	goto	l2119
   630   001462                     l2115:
   631   001462  C03D  F03A         	movff	lcd_4bit_set_cursor@_lcd_,lcd_4bit_send_command@_lcd_
   632   001466  503F               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
   633   001468  0FD4               	addlw	212
   634   00146A  6E3B               	movwf	lcd_4bit_send_command@command^0,c
   635   00146C  ECF2  F00A         	call	_lcd_4bit_send_command	;wreg free
   636   001470  6E42               	movwf	lcd_4bit_set_cursor@ret^0,c
   637                           
   638                           ;ECU_Layer/LCD/ecu_lcd.c: 459:         break;
   639   001472  EF58  F00A         	goto	l2119
   640   001476                     l2117:
   641   001476  503E               	movf	lcd_4bit_set_cursor@row^0,w,c
   642   001478  6E40               	movwf	??_lcd_4bit_set_cursor^0,c
   643   00147A  6A41               	clrf	(??_lcd_4bit_set_cursor+1)^0,c
   644                           
   645                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   646                           ; Switch size 1, requested type "simple"
   647                           ; Number of cases is 1, Range of values is 0 to 0
   648                           ; switch strategies available:
   649                           ; Name         Instructions Cycles
   650                           ; simple_byte            4     3 (average)
   651                           ;	Chosen strategy is simple_byte
   652   00147C  5041               	movf	(??_lcd_4bit_set_cursor+1)^0,w,c
   653   00147E  0A00               	xorlw	0	; case 0
   654   001480  B4D8               	btfsc	status,2,c
   655   001482  EF45  F00A         	goto	l2495
   656   001486  EF58  F00A         	goto	l2119
   657   00148A                     l2495:
   658                           
   659                           ; Switch size 1, requested type "simple"
   660                           ; Number of cases is 4, Range of values is 1 to 4
   661                           ; switch strategies available:
   662                           ; Name         Instructions Cycles
   663                           ; simple_byte           13     7 (average)
   664                           ;	Chosen strategy is simple_byte
   665   00148A  5040               	movf	??_lcd_4bit_set_cursor^0,w,c
   666   00148C  0A01               	xorlw	1	; case 1
   667   00148E  B4D8               	btfsc	status,2,c
   668   001490  EF13  F00A         	goto	l2109
   669   001494  0A03               	xorlw	3	; case 2
   670   001496  B4D8               	btfsc	status,2,c
   671   001498  EF1D  F00A         	goto	l2111
   672   00149C  0A01               	xorlw	1	; case 3
   673   00149E  B4D8               	btfsc	status,2,c
   674   0014A0  EF27  F00A         	goto	l2113
   675   0014A4  0A07               	xorlw	7	; case 4
   676   0014A6  B4D8               	btfsc	status,2,c
   677   0014A8  EF31  F00A         	goto	l2115
   678   0014AC  EF58  F00A         	goto	l2119
   679   0014B0                     l2119:
   680                           
   681                           ;ECU_Layer/LCD/ecu_lcd.c: 462:     return ret;
   682   0014B0  5042               	movf	lcd_4bit_set_cursor@ret^0,w,c
   683   0014B2  0012               	return		;funcret
   684   0014B4                     __end_of_lcd_4bit_set_cursor:
   685                           	callstack 0
   686                           
   687 ;; *************** function _lcd_4bit_send_char_data *****************
   688 ;; Defined at:
   689 ;;		line 94 in file "ECU_Layer/LCD/ecu_lcd.c"
   690 ;; Parameters:    Size  Location     Type
   691 ;;  _lcd_           1   11[COMRAM] PTR const struct .
   692 ;;		 -> lcd_1(6), 
   693 ;;  data            1   12[COMRAM] unsigned char 
   694 ;; Auto vars:     Size  Location     Type
   695 ;;  ret             1   13[COMRAM] unsigned char 
   696 ;; Return value:  Size  Location     Type
   697 ;;                  1    wreg      unsigned char 
   698 ;; Registers used:
   699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   700 ;; Tracked objects:
   701 ;;		On entry : 0/0
   702 ;;		On exit  : 0/0
   703 ;;		Unchanged: 0/0
   704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   705 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   706 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   708 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   709 ;;Total ram usage:        3 bytes
   710 ;; Hardware stack levels used: 1
   711 ;; Hardware stack levels required when called: 2
   712 ;; This function calls:
   713 ;;		_gpio_pin_write_logic
   714 ;;		_lcd_4bit_send_enable_signal
   715 ;;		_lcd_send_4bits
   716 ;; This function is called by:
   717 ;;		_lcd_4bit_send_char_data_position
   718 ;; This function uses a non-reentrant model
   719 ;;
   720                           
   721                           	psect	text3
   722   001588                     __ptext3:
   723                           	callstack 0
   724   001588                     _lcd_4bit_send_char_data:
   725                           	callstack 27
   726   001588                     
   727                           ;ECU_Layer/LCD/ecu_lcd.c: 96:     if(((void*)0) == _lcd_){
   728   001588  503A               	movf	lcd_4bit_send_char_data@_lcd_^0,w,c
   729   00158A  A4D8               	btfss	status,2,c
   730   00158C  EFCA  F00A         	goto	u1101
   731   001590  EFCC  F00A         	goto	u1100
   732   001594                     u1101:
   733   001594  EFD0  F00A         	goto	l2099
   734   001598                     u1100:
   735   001598                     
   736                           ;ECU_Layer/LCD/ecu_lcd.c: 97:         ret = (Std_ReturnType)0x00;
   737   001598  0E00               	movlw	0
   738   00159A  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
   739                           
   740                           ;ECU_Layer/LCD/ecu_lcd.c: 98:     }
   741   00159C  EFF0  F00A         	goto	l2101
   742   0015A0                     l2099:
   743                           
   744                           ;ECU_Layer/LCD/ecu_lcd.c: 100:         ret = gpio_pin_write_logic(&(_lcd_->lcd_rs), GPIO
      +                          _HIGH);
   745   0015A0  C03A  F02F         	movff	lcd_4bit_send_char_data@_lcd_,gpio_pin_write_logic@_pin_config
   746   0015A4  0E01               	movlw	1
   747   0015A6  6E30               	movwf	gpio_pin_write_logic@logic^0,c
   748   0015A8  EC9C  F008         	call	_gpio_pin_write_logic	;wreg free
   749   0015AC  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
   750                           
   751                           ;ECU_Layer/LCD/ecu_lcd.c: 101:         ret = lcd_send_4bits(_lcd_ , data>>4);
   752   0015AE  C03A  F037         	movff	lcd_4bit_send_char_data@_lcd_,lcd_send_4bits@_lcd_
   753   0015B2  383B               	swapf	lcd_4bit_send_char_data@data^0,w,c
   754   0015B4  0B0F               	andlw	15
   755   0015B6  6E38               	movwf	lcd_send_4bits@_data_command^0,c
   756   0015B8  EC20  F00B         	call	_lcd_send_4bits	;wreg free
   757   0015BC  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
   758                           
   759                           ;ECU_Layer/LCD/ecu_lcd.c: 102:         ret = lcd_4bit_send_enable_signal(_lcd_);
   760   0015BE  C03A  F037         	movff	lcd_4bit_send_char_data@_lcd_,lcd_4bit_send_enable_signal@_lcd_
   761   0015C2  ECC4  F00B         	call	_lcd_4bit_send_enable_signal	;wreg free
   762   0015C6  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
   763                           
   764                           ;ECU_Layer/LCD/ecu_lcd.c: 103:         ret = lcd_send_4bits(_lcd_ , data);
   765   0015C8  C03A  F037         	movff	lcd_4bit_send_char_data@_lcd_,lcd_send_4bits@_lcd_
   766   0015CC  C03B  F038         	movff	lcd_4bit_send_char_data@data,lcd_send_4bits@_data_command
   767   0015D0  EC20  F00B         	call	_lcd_send_4bits	;wreg free
   768   0015D4  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
   769                           
   770                           ;ECU_Layer/LCD/ecu_lcd.c: 104:         ret = lcd_4bit_send_enable_signal(_lcd_);
   771   0015D6  C03A  F037         	movff	lcd_4bit_send_char_data@_lcd_,lcd_4bit_send_enable_signal@_lcd_
   772   0015DA  ECC4  F00B         	call	_lcd_4bit_send_enable_signal	;wreg free
   773   0015DE  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
   774   0015E0                     l2101:
   775                           
   776                           ;ECU_Layer/LCD/ecu_lcd.c: 108:     return ret;
   777   0015E0  503C               	movf	lcd_4bit_send_char_data@ret^0,w,c
   778   0015E2  0012               	return		;funcret
   779   0015E4                     __end_of_lcd_4bit_send_char_data:
   780                           	callstack 0
   781                           
   782 ;; *************** function _application_intialize *****************
   783 ;; Defined at:
   784 ;;		line 112 in file "application.c"
   785 ;; Parameters:    Size  Location     Type
   786 ;;		None
   787 ;; Auto vars:     Size  Location     Type
   788 ;;  ret             1    0        unsigned char 
   789 ;; Return value:  Size  Location     Type
   790 ;;                  1    wreg      void 
   791 ;; Registers used:
   792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   793 ;; Tracked objects:
   794 ;;		On entry : 0/0
   795 ;;		On exit  : 0/0
   796 ;;		Unchanged: 0/0
   797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   802 ;;Total ram usage:        0 bytes
   803 ;; Hardware stack levels used: 1
   804 ;; Hardware stack levels required when called: 4
   805 ;; This function calls:
   806 ;;		_lcd_4bit_initialize
   807 ;;		_lcd_8bit_initialize
   808 ;; This function is called by:
   809 ;;		_main
   810 ;; This function uses a non-reentrant model
   811 ;;
   812                           
   813                           	psect	text4
   814   0017AC                     __ptext4:
   815                           	callstack 0
   816   0017AC                     _application_intialize:
   817                           	callstack 26
   818   0017AC  0E29               	movlw	low _lcd_1
   819   0017AE  6E3D               	movwf	lcd_4bit_initialize@_lcd_^0,c
   820   0017B0  EC99  F009         	call	_lcd_4bit_initialize	;wreg free
   821   0017B4  0E1F               	movlw	low _lcd_2
   822   0017B6  6E3F               	movwf	lcd_8bit_initialize@_lcd_^0,c
   823   0017B8  EC24  F009         	call	_lcd_8bit_initialize	;wreg free
   824   0017BC  0012               	return		;funcret
   825   0017BE                     __end_of_application_intialize:
   826                           	callstack 0
   827                           
   828 ;; *************** function _lcd_8bit_initialize *****************
   829 ;; Defined at:
   830 ;;		line 212 in file "ECU_Layer/LCD/ecu_lcd.c"
   831 ;; Parameters:    Size  Location     Type
   832 ;;  _lcd_           1   16[COMRAM] PTR const struct .
   833 ;;		 -> lcd_2(10), 
   834 ;; Auto vars:     Size  Location     Type
   835 ;;  ret             1   19[COMRAM] unsigned char 
   836 ;;  l_data_pins_    1   18[COMRAM] unsigned char 
   837 ;; Return value:  Size  Location     Type
   838 ;;                  1    wreg      unsigned char 
   839 ;; Registers used:
   840 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   841 ;; Tracked objects:
   842 ;;		On entry : 0/0
   843 ;;		On exit  : 0/0
   844 ;;		Unchanged: 0/0
   845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   846 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   847 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   848 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   849 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   850 ;;Total ram usage:        4 bytes
   851 ;; Hardware stack levels used: 1
   852 ;; Hardware stack levels required when called: 3
   853 ;; This function calls:
   854 ;;		_gpio_pin_intialize
   855 ;;		_lcd_8bit_send_command
   856 ;; This function is called by:
   857 ;;		_application_intialize
   858 ;; This function uses a non-reentrant model
   859 ;;
   860                           
   861                           	psect	text5
   862   001248                     __ptext5:
   863                           	callstack 0
   864   001248                     _lcd_8bit_initialize:
   865                           	callstack 26
   866   001248                     
   867                           ;ECU_Layer/LCD/ecu_lcd.c: 214:     uint8 l_data_pins_counter = 0;
   868   001248  0E00               	movlw	0
   869   00124A  6E41               	movwf	lcd_8bit_initialize@l_data_pins_counter^0,c
   870                           
   871                           ;ECU_Layer/LCD/ecu_lcd.c: 215:     if(((void*)0) == _lcd_){
   872   00124C  503F               	movf	lcd_8bit_initialize@_lcd_^0,w,c
   873   00124E  A4D8               	btfss	status,2,c
   874   001250  EF2C  F009         	goto	u1081
   875   001254  EF2E  F009         	goto	u1080
   876   001258                     u1081:
   877   001258  EF32  F009         	goto	l2055
   878   00125C                     u1080:
   879   00125C                     
   880                           ;ECU_Layer/LCD/ecu_lcd.c: 216:         ret = (Std_ReturnType)0x00;
   881   00125C  0E00               	movlw	0
   882   00125E  6E42               	movwf	lcd_8bit_initialize@ret^0,c
   883                           
   884                           ;ECU_Layer/LCD/ecu_lcd.c: 217:     }
   885   001260  EF97  F009         	goto	l2091
   886   001264                     l2055:
   887                           
   888                           ;ECU_Layer/LCD/ecu_lcd.c: 219:         ret = gpio_pin_intialize(&(_lcd_->lcd_rs));
   889   001264  C03F  F037         	movff	lcd_8bit_initialize@_lcd_,gpio_pin_intialize@_pin_config
   890   001268  EC95  F00A         	call	_gpio_pin_intialize	;wreg free
   891   00126C  6E42               	movwf	lcd_8bit_initialize@ret^0,c
   892                           
   893                           ;ECU_Layer/LCD/ecu_lcd.c: 220:         ret = gpio_pin_intialize(&(_lcd_->lcd_en));
   894   00126E  283F               	incf	lcd_8bit_initialize@_lcd_^0,w,c
   895   001270  6E37               	movwf	gpio_pin_intialize@_pin_config^0,c
   896   001272  EC95  F00A         	call	_gpio_pin_intialize	;wreg free
   897   001276  6E42               	movwf	lcd_8bit_initialize@ret^0,c
   898   001278                     
   899                           ;ECU_Layer/LCD/ecu_lcd.c: 221:         for(l_data_pins_counter = 0 ; l_data_pins_counter
      +                          <8 ; l_data_pins_counter++){
   900   001278  0E00               	movlw	0
   901   00127A  6E41               	movwf	lcd_8bit_initialize@l_data_pins_counter^0,c
   902   00127C                     l2063:
   903   00127C  503F               	movf	lcd_8bit_initialize@_lcd_^0,w,c
   904   00127E  2441               	addwf	lcd_8bit_initialize@l_data_pins_counter^0,w,c
   905   001280  0F02               	addlw	2
   906   001282  6E37               	movwf	gpio_pin_intialize@_pin_config^0,c
   907   001284  EC95  F00A         	call	_gpio_pin_intialize	;wreg free
   908   001288                     
   909                           ;ECU_Layer/LCD/ecu_lcd.c: 223:         }
   910   001288  2A41               	incf	lcd_8bit_initialize@l_data_pins_counter^0,f,c
   911   00128A  0E07               	movlw	7
   912   00128C  6441               	cpfsgt	lcd_8bit_initialize@l_data_pins_counter^0,c
   913   00128E  EF4B  F009         	goto	u1091
   914   001292  EF4D  F009         	goto	u1090
   915   001296                     u1091:
   916   001296  EF3E  F009         	goto	l2063
   917   00129A                     u1090:
   918   00129A                     
   919                           ;ECU_Layer/LCD/ecu_lcd.c: 224:         _delay((unsigned long)((20)*(4000000UL/4000.0)));
   920   00129A  0E1A               	movlw	26
   921   00129C  6E40               	movwf	??_lcd_8bit_initialize^0,c
   922   00129E  0EF8               	movlw	248
   923   0012A0                     u1497:
   924   0012A0  2EE8               	decfsz	wreg,f,c
   925   0012A2  D7FE               	bra	u1497
   926   0012A4  2E40               	decfsz	??_lcd_8bit_initialize^0,f,c
   927   0012A6  D7FC               	bra	u1497
   928   0012A8  D000               	nop2	
   929   0012AA  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
   930   0012AE  0E38               	movlw	56
   931   0012B0  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   932   0012B2  EC5A  F00A         	call	_lcd_8bit_send_command	;wreg free
   933   0012B6                     
   934                           ;ECU_Layer/LCD/ecu_lcd.c: 226:         _delay((unsigned long)((5)*(4000000UL/4000.0)));
   935   0012B6  0E07               	movlw	7
   936   0012B8  6E40               	movwf	??_lcd_8bit_initialize^0,c
   937   0012BA  0E7D               	movlw	125
   938   0012BC                     u1507:
   939   0012BC  2EE8               	decfsz	wreg,f,c
   940   0012BE  D7FE               	bra	u1507
   941   0012C0  2E40               	decfsz	??_lcd_8bit_initialize^0,f,c
   942   0012C2  D7FC               	bra	u1507
   943   0012C4  0000               	nop	
   944   0012C6  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
   945   0012CA  0E38               	movlw	56
   946   0012CC  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   947   0012CE  EC5A  F00A         	call	_lcd_8bit_send_command	;wreg free
   948   0012D2                     
   949                           ;ECU_Layer/LCD/ecu_lcd.c: 228:         _delay((unsigned long)((150)*(4000000UL/4000000.0
      +                          )));
   950   0012D2  0E32               	movlw	50
   951   0012D4                     u1517:
   952   0012D4  2EE8               	decfsz	wreg,f,c
   953   0012D6  D7FE               	bra	u1517
   954   0012D8  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
   955   0012DC  0E38               	movlw	56
   956   0012DE  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   957   0012E0  EC5A  F00A         	call	_lcd_8bit_send_command	;wreg free
   958   0012E4  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
   959   0012E8  0E01               	movlw	1
   960   0012EA  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   961   0012EC  EC5A  F00A         	call	_lcd_8bit_send_command	;wreg free
   962   0012F0  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
   963   0012F4  0E02               	movlw	2
   964   0012F6  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   965   0012F8  EC5A  F00A         	call	_lcd_8bit_send_command	;wreg free
   966   0012FC  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
   967   001300  0E06               	movlw	6
   968   001302  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   969   001304  EC5A  F00A         	call	_lcd_8bit_send_command	;wreg free
   970   001308  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
   971   00130C  0E0C               	movlw	12
   972   00130E  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   973   001310  EC5A  F00A         	call	_lcd_8bit_send_command	;wreg free
   974   001314  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
   975   001318  0E38               	movlw	56
   976   00131A  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   977   00131C  EC5A  F00A         	call	_lcd_8bit_send_command	;wreg free
   978   001320                     
   979                           ;ECU_Layer/LCD/ecu_lcd.c: 236:         ret = lcd_8bit_send_command(_lcd_, 0x80);
   980   001320  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
   981   001324  0E80               	movlw	128
   982   001326  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   983   001328  EC5A  F00A         	call	_lcd_8bit_send_command	;wreg free
   984   00132C  6E42               	movwf	lcd_8bit_initialize@ret^0,c
   985   00132E                     l2091:
   986                           
   987                           ;ECU_Layer/LCD/ecu_lcd.c: 240:     return ret;
   988   00132E  5042               	movf	lcd_8bit_initialize@ret^0,w,c
   989   001330  0012               	return		;funcret
   990   001332                     __end_of_lcd_8bit_initialize:
   991                           	callstack 0
   992                           
   993 ;; *************** function _lcd_8bit_send_command *****************
   994 ;; Defined at:
   995 ;;		line 251 in file "ECU_Layer/LCD/ecu_lcd.c"
   996 ;; Parameters:    Size  Location     Type
   997 ;;  _lcd_           1   10[COMRAM] PTR const struct .
   998 ;;		 -> lcd_2(10), 
   999 ;;  command         1   11[COMRAM] unsigned char 
  1000 ;; Auto vars:     Size  Location     Type
  1001 ;;  l_pin_counte    1   15[COMRAM] unsigned char 
  1002 ;;  ret             1   14[COMRAM] unsigned char 
  1003 ;; Return value:  Size  Location     Type
  1004 ;;                  1    wreg      unsigned char 
  1005 ;; Registers used:
  1006 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1007 ;; Tracked objects:
  1008 ;;		On entry : 0/0
  1009 ;;		On exit  : 0/0
  1010 ;;		Unchanged: 0/0
  1011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1012 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1013 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1014 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1015 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1016 ;;Total ram usage:        6 bytes
  1017 ;; Hardware stack levels used: 1
  1018 ;; Hardware stack levels required when called: 2
  1019 ;; This function calls:
  1020 ;;		_gpio_pin_write_logic
  1021 ;;		_lcd_8bit_send_enable_signal
  1022 ;; This function is called by:
  1023 ;;		_lcd_8bit_initialize
  1024 ;;		_lcd_8bit_set_cursor
  1025 ;; This function uses a non-reentrant model
  1026 ;;
  1027                           
  1028                           	psect	text6
  1029   0014B4                     __ptext6:
  1030                           	callstack 0
  1031   0014B4                     _lcd_8bit_send_command:
  1032                           	callstack 26
  1033   0014B4                     
  1034                           ;ECU_Layer/LCD/ecu_lcd.c: 253:     uint8 l_pin_counter = 0;
  1035   0014B4  0E00               	movlw	0
  1036   0014B6  6E3E               	movwf	lcd_8bit_send_command@l_pin_counter^0,c
  1037                           
  1038                           ;ECU_Layer/LCD/ecu_lcd.c: 254:     if(((void*)0) == _lcd_){
  1039   0014B8  5039               	movf	lcd_8bit_send_command@_lcd_^0,w,c
  1040   0014BA  A4D8               	btfss	status,2,c
  1041   0014BC  EF62  F00A         	goto	u1031
  1042   0014C0  EF64  F00A         	goto	u1030
  1043   0014C4                     u1031:
  1044   0014C4  EF68  F00A         	goto	l1987
  1045   0014C8                     u1030:
  1046   0014C8                     
  1047                           ;ECU_Layer/LCD/ecu_lcd.c: 255:         ret = (Std_ReturnType)0x00;
  1048   0014C8  0E00               	movlw	0
  1049   0014CA  6E3D               	movwf	lcd_8bit_send_command@ret^0,c
  1050                           
  1051                           ;ECU_Layer/LCD/ecu_lcd.c: 256:     }
  1052   0014CC  EF93  F00A         	goto	l2003
  1053   0014D0                     l1987:
  1054   0014D0  C039  F02F         	movff	lcd_8bit_send_command@_lcd_,gpio_pin_write_logic@_pin_config
  1055   0014D4  0E00               	movlw	0
  1056   0014D6  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1057   0014D8  EC9C  F008         	call	_gpio_pin_write_logic	;wreg free
  1058   0014DC                     
  1059                           ;ECU_Layer/LCD/ecu_lcd.c: 259:         for(l_pin_counter = 0 ; l_pin_counter < 8 ; l_pin
      +                          _counter++){
  1060   0014DC  0E00               	movlw	0
  1061   0014DE  6E3E               	movwf	lcd_8bit_send_command@l_pin_counter^0,c
  1062   0014E0                     l1995:
  1063   0014E0  5039               	movf	lcd_8bit_send_command@_lcd_^0,w,c
  1064   0014E2  243E               	addwf	lcd_8bit_send_command@l_pin_counter^0,w,c
  1065   0014E4  0F02               	addlw	2
  1066   0014E6  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1067   0014E8  C03E  F03B         	movff	lcd_8bit_send_command@l_pin_counter,??_lcd_8bit_send_command
  1068   0014EC  C03A  F03C         	movff	lcd_8bit_send_command@command,??_lcd_8bit_send_command+1
  1069   0014F0  2A3B               	incf	??_lcd_8bit_send_command^0,f,c
  1070   0014F2  EF7D  F00A         	goto	u1044
  1071   0014F6                     u1045:
  1072   0014F6  90D8               	bcf	status,0,c
  1073   0014F8  323C               	rrcf	(??_lcd_8bit_send_command+1)^0,f,c
  1074   0014FA                     u1044:
  1075   0014FA  2E3B               	decfsz	??_lcd_8bit_send_command^0,f,c
  1076   0014FC  EF7B  F00A         	goto	u1045
  1077   001500  503C               	movf	(??_lcd_8bit_send_command+1)^0,w,c
  1078   001502  0B01               	andlw	1
  1079   001504  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1080   001506  EC9C  F008         	call	_gpio_pin_write_logic	;wreg free
  1081   00150A                     
  1082                           ;ECU_Layer/LCD/ecu_lcd.c: 261:         }
  1083   00150A  2A3E               	incf	lcd_8bit_send_command@l_pin_counter^0,f,c
  1084   00150C  0E07               	movlw	7
  1085   00150E  643E               	cpfsgt	lcd_8bit_send_command@l_pin_counter^0,c
  1086   001510  EF8C  F00A         	goto	u1051
  1087   001514  EF8E  F00A         	goto	u1050
  1088   001518                     u1051:
  1089   001518  EF70  F00A         	goto	l1995
  1090   00151C                     u1050:
  1091   00151C                     
  1092                           ;ECU_Layer/LCD/ecu_lcd.c: 262:         ret = lcd_8bit_send_enable_signal(_lcd_);
  1093   00151C  C039  F037         	movff	lcd_8bit_send_command@_lcd_,lcd_8bit_send_enable_signal@_lcd_
  1094   001520  ECB2  F00B         	call	_lcd_8bit_send_enable_signal	;wreg free
  1095   001524  6E3D               	movwf	lcd_8bit_send_command@ret^0,c
  1096   001526                     l2003:
  1097                           
  1098                           ;ECU_Layer/LCD/ecu_lcd.c: 266:     return ret;
  1099   001526  503D               	movf	lcd_8bit_send_command@ret^0,w,c
  1100   001528  0012               	return		;funcret
  1101   00152A                     __end_of_lcd_8bit_send_command:
  1102                           	callstack 0
  1103                           
  1104 ;; *************** function _lcd_8bit_send_enable_signal *****************
  1105 ;; Defined at:
  1106 ;;		line 423 in file "ECU_Layer/LCD/ecu_lcd.c"
  1107 ;; Parameters:    Size  Location     Type
  1108 ;;  _lcd_           1    8[COMRAM] PTR const struct .
  1109 ;;		 -> lcd_2(10), 
  1110 ;; Auto vars:     Size  Location     Type
  1111 ;;  ret             1    9[COMRAM] unsigned char 
  1112 ;; Return value:  Size  Location     Type
  1113 ;;                  1    wreg      unsigned char 
  1114 ;; Registers used:
  1115 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1116 ;; Tracked objects:
  1117 ;;		On entry : 0/0
  1118 ;;		On exit  : 0/0
  1119 ;;		Unchanged: 0/0
  1120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1121 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1122 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1124 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1125 ;;Total ram usage:        2 bytes
  1126 ;; Hardware stack levels used: 1
  1127 ;; Hardware stack levels required when called: 1
  1128 ;; This function calls:
  1129 ;;		_gpio_pin_write_logic
  1130 ;; This function is called by:
  1131 ;;		_lcd_8bit_send_command
  1132 ;;		_lcd_8bit_send_char_data
  1133 ;; This function uses a non-reentrant model
  1134 ;;
  1135                           
  1136                           	psect	text7
  1137   001764                     __ptext7:
  1138                           	callstack 0
  1139   001764                     _lcd_8bit_send_enable_signal:
  1140                           	callstack 26
  1141   001764  2837               	incf	lcd_8bit_send_enable_signal@_lcd_^0,w,c
  1142   001766  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1143   001768  0E01               	movlw	1
  1144   00176A  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1145   00176C  EC9C  F008         	call	_gpio_pin_write_logic	;wreg free
  1146   001770                     
  1147                           ;ECU_Layer/LCD/ecu_lcd.c: 426:     _delay((unsigned long)((5)*(4000000UL/4000000.0)));
  1148   001770  D000               	nop2		;2 cycle nop
  1149   001772  D000               	nop2		;2 cycle nop
  1150   001774  0000               	nop	
  1151   001776                     
  1152                           ;ECU_Layer/LCD/ecu_lcd.c: 427:     ret = gpio_pin_write_logic(&(_lcd_->lcd_en), GPIO_LOW
      +                          );
  1153   001776  2837               	incf	lcd_8bit_send_enable_signal@_lcd_^0,w,c
  1154   001778  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1155   00177A  0E00               	movlw	0
  1156   00177C  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1157   00177E  EC9C  F008         	call	_gpio_pin_write_logic	;wreg free
  1158   001782  6E38               	movwf	lcd_8bit_send_enable_signal@ret^0,c
  1159                           
  1160                           ;ECU_Layer/LCD/ecu_lcd.c: 428:     return ret;
  1161   001784  5038               	movf	lcd_8bit_send_enable_signal@ret^0,w,c
  1162   001786  0012               	return		;funcret
  1163   001788                     __end_of_lcd_8bit_send_enable_signal:
  1164                           	callstack 0
  1165                           
  1166 ;; *************** function _lcd_4bit_initialize *****************
  1167 ;; Defined at:
  1168 ;;		line 28 in file "ECU_Layer/LCD/ecu_lcd.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;  _lcd_           1   14[COMRAM] PTR const struct .
  1171 ;;		 -> lcd_1(6), 
  1172 ;; Auto vars:     Size  Location     Type
  1173 ;;  ret             1   17[COMRAM] unsigned char 
  1174 ;;  l_data_pins_    1   16[COMRAM] unsigned char 
  1175 ;; Return value:  Size  Location     Type
  1176 ;;                  1    wreg      unsigned char 
  1177 ;; Registers used:
  1178 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1179 ;; Tracked objects:
  1180 ;;		On entry : 0/0
  1181 ;;		On exit  : 0/0
  1182 ;;		Unchanged: 0/0
  1183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1184 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1185 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1186 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1187 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1188 ;;Total ram usage:        4 bytes
  1189 ;; Hardware stack levels used: 1
  1190 ;; Hardware stack levels required when called: 3
  1191 ;; This function calls:
  1192 ;;		_gpio_pin_intialize
  1193 ;;		_lcd_4bit_send_command
  1194 ;; This function is called by:
  1195 ;;		_application_intialize
  1196 ;; This function uses a non-reentrant model
  1197 ;;
  1198                           
  1199                           	psect	text8
  1200   001332                     __ptext8:
  1201                           	callstack 0
  1202   001332                     _lcd_4bit_initialize:
  1203                           	callstack 26
  1204   001332                     
  1205                           ;ECU_Layer/LCD/ecu_lcd.c: 30:     uint8 l_data_pins_counter = 0;
  1206   001332  0E00               	movlw	0
  1207   001334  6E3F               	movwf	lcd_4bit_initialize@l_data_pins_counter^0,c
  1208                           
  1209                           ;ECU_Layer/LCD/ecu_lcd.c: 31:     if(((void*)0) == _lcd_){
  1210   001336  503D               	movf	lcd_4bit_initialize@_lcd_^0,w,c
  1211   001338  A4D8               	btfss	status,2,c
  1212   00133A  EFA1  F009         	goto	u1061
  1213   00133E  EFA3  F009         	goto	u1060
  1214   001342                     u1061:
  1215   001342  EFA7  F009         	goto	l2011
  1216   001346                     u1060:
  1217   001346                     
  1218                           ;ECU_Layer/LCD/ecu_lcd.c: 32:         ret = (Std_ReturnType)0x00;
  1219   001346  0E00               	movlw	0
  1220   001348  6E40               	movwf	lcd_4bit_initialize@ret^0,c
  1221                           
  1222                           ;ECU_Layer/LCD/ecu_lcd.c: 33:     }
  1223   00134A  EF0C  F00A         	goto	l2047
  1224   00134E                     l2011:
  1225                           
  1226                           ;ECU_Layer/LCD/ecu_lcd.c: 35:         ret = gpio_pin_intialize(&(_lcd_->lcd_rs));
  1227   00134E  C03D  F037         	movff	lcd_4bit_initialize@_lcd_,gpio_pin_intialize@_pin_config
  1228   001352  EC95  F00A         	call	_gpio_pin_intialize	;wreg free
  1229   001356  6E40               	movwf	lcd_4bit_initialize@ret^0,c
  1230                           
  1231                           ;ECU_Layer/LCD/ecu_lcd.c: 36:         ret = gpio_pin_intialize(&(_lcd_->lcd_en));
  1232   001358  283D               	incf	lcd_4bit_initialize@_lcd_^0,w,c
  1233   00135A  6E37               	movwf	gpio_pin_intialize@_pin_config^0,c
  1234   00135C  EC95  F00A         	call	_gpio_pin_intialize	;wreg free
  1235   001360  6E40               	movwf	lcd_4bit_initialize@ret^0,c
  1236   001362                     
  1237                           ;ECU_Layer/LCD/ecu_lcd.c: 37:         for(l_data_pins_counter = 0 ; l_data_pins_counter<
      +                          4 ; l_data_pins_counter++){
  1238   001362  0E00               	movlw	0
  1239   001364  6E3F               	movwf	lcd_4bit_initialize@l_data_pins_counter^0,c
  1240   001366                     l2019:
  1241   001366  503D               	movf	lcd_4bit_initialize@_lcd_^0,w,c
  1242   001368  243F               	addwf	lcd_4bit_initialize@l_data_pins_counter^0,w,c
  1243   00136A  0F02               	addlw	2
  1244   00136C  6E37               	movwf	gpio_pin_intialize@_pin_config^0,c
  1245   00136E  EC95  F00A         	call	_gpio_pin_intialize	;wreg free
  1246   001372                     
  1247                           ;ECU_Layer/LCD/ecu_lcd.c: 39:         }
  1248   001372  2A3F               	incf	lcd_4bit_initialize@l_data_pins_counter^0,f,c
  1249   001374  0E03               	movlw	3
  1250   001376  643F               	cpfsgt	lcd_4bit_initialize@l_data_pins_counter^0,c
  1251   001378  EFC0  F009         	goto	u1071
  1252   00137C  EFC2  F009         	goto	u1070
  1253   001380                     u1071:
  1254   001380  EFB3  F009         	goto	l2019
  1255   001384                     u1070:
  1256   001384                     
  1257                           ;ECU_Layer/LCD/ecu_lcd.c: 41:         _delay((unsigned long)((20)*(4000000UL/4000.0)));
  1258   001384  0E1A               	movlw	26
  1259   001386  6E3E               	movwf	??_lcd_4bit_initialize^0,c
  1260   001388  0EF8               	movlw	248
  1261   00138A                     u1527:
  1262   00138A  2EE8               	decfsz	wreg,f,c
  1263   00138C  D7FE               	bra	u1527
  1264   00138E  2E3E               	decfsz	??_lcd_4bit_initialize^0,f,c
  1265   001390  D7FC               	bra	u1527
  1266   001392  D000               	nop2	
  1267   001394  C03D  F03A         	movff	lcd_4bit_initialize@_lcd_,lcd_4bit_send_command@_lcd_
  1268   001398  0E38               	movlw	56
  1269   00139A  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1270   00139C  ECF2  F00A         	call	_lcd_4bit_send_command	;wreg free
  1271   0013A0                     
  1272                           ;ECU_Layer/LCD/ecu_lcd.c: 43:         _delay((unsigned long)((5)*(4000000UL/4000.0)));
  1273   0013A0  0E07               	movlw	7
  1274   0013A2  6E3E               	movwf	??_lcd_4bit_initialize^0,c
  1275   0013A4  0E7D               	movlw	125
  1276   0013A6                     u1537:
  1277   0013A6  2EE8               	decfsz	wreg,f,c
  1278   0013A8  D7FE               	bra	u1537
  1279   0013AA  2E3E               	decfsz	??_lcd_4bit_initialize^0,f,c
  1280   0013AC  D7FC               	bra	u1537
  1281   0013AE  0000               	nop	
  1282   0013B0  C03D  F03A         	movff	lcd_4bit_initialize@_lcd_,lcd_4bit_send_command@_lcd_
  1283   0013B4  0E38               	movlw	56
  1284   0013B6  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1285   0013B8  ECF2  F00A         	call	_lcd_4bit_send_command	;wreg free
  1286   0013BC                     
  1287                           ;ECU_Layer/LCD/ecu_lcd.c: 45:         _delay((unsigned long)((150)*(4000000UL/4000000.0)
      +                          ));
  1288   0013BC  0E32               	movlw	50
  1289   0013BE                     u1547:
  1290   0013BE  2EE8               	decfsz	wreg,f,c
  1291   0013C0  D7FE               	bra	u1547
  1292   0013C2  C03D  F03A         	movff	lcd_4bit_initialize@_lcd_,lcd_4bit_send_command@_lcd_
  1293   0013C6  0E38               	movlw	56
  1294   0013C8  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1295   0013CA  ECF2  F00A         	call	_lcd_4bit_send_command	;wreg free
  1296   0013CE  C03D  F03A         	movff	lcd_4bit_initialize@_lcd_,lcd_4bit_send_command@_lcd_
  1297   0013D2  0E01               	movlw	1
  1298   0013D4  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1299   0013D6  ECF2  F00A         	call	_lcd_4bit_send_command	;wreg free
  1300   0013DA  C03D  F03A         	movff	lcd_4bit_initialize@_lcd_,lcd_4bit_send_command@_lcd_
  1301   0013DE  0E02               	movlw	2
  1302   0013E0  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1303   0013E2  ECF2  F00A         	call	_lcd_4bit_send_command	;wreg free
  1304   0013E6  C03D  F03A         	movff	lcd_4bit_initialize@_lcd_,lcd_4bit_send_command@_lcd_
  1305   0013EA  0E06               	movlw	6
  1306   0013EC  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1307   0013EE  ECF2  F00A         	call	_lcd_4bit_send_command	;wreg free
  1308   0013F2  C03D  F03A         	movff	lcd_4bit_initialize@_lcd_,lcd_4bit_send_command@_lcd_
  1309   0013F6  0E0C               	movlw	12
  1310   0013F8  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1311   0013FA  ECF2  F00A         	call	_lcd_4bit_send_command	;wreg free
  1312   0013FE  C03D  F03A         	movff	lcd_4bit_initialize@_lcd_,lcd_4bit_send_command@_lcd_
  1313   001402  0E28               	movlw	40
  1314   001404  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1315   001406  ECF2  F00A         	call	_lcd_4bit_send_command	;wreg free
  1316   00140A                     
  1317                           ;ECU_Layer/LCD/ecu_lcd.c: 53:         ret = lcd_4bit_send_command(_lcd_, 0x80);
  1318   00140A  C03D  F03A         	movff	lcd_4bit_initialize@_lcd_,lcd_4bit_send_command@_lcd_
  1319   00140E  0E80               	movlw	128
  1320   001410  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1321   001412  ECF2  F00A         	call	_lcd_4bit_send_command	;wreg free
  1322   001416  6E40               	movwf	lcd_4bit_initialize@ret^0,c
  1323   001418                     l2047:
  1324                           
  1325                           ;ECU_Layer/LCD/ecu_lcd.c: 58:     return ret;
  1326   001418  5040               	movf	lcd_4bit_initialize@ret^0,w,c
  1327   00141A  0012               	return		;funcret
  1328   00141C                     __end_of_lcd_4bit_initialize:
  1329                           	callstack 0
  1330                           
  1331 ;; *************** function _lcd_4bit_send_command *****************
  1332 ;; Defined at:
  1333 ;;		line 69 in file "ECU_Layer/LCD/ecu_lcd.c"
  1334 ;; Parameters:    Size  Location     Type
  1335 ;;  _lcd_           1   11[COMRAM] PTR const struct .
  1336 ;;		 -> lcd_1(6), 
  1337 ;;  command         1   12[COMRAM] unsigned char 
  1338 ;; Auto vars:     Size  Location     Type
  1339 ;;  ret             1   13[COMRAM] unsigned char 
  1340 ;; Return value:  Size  Location     Type
  1341 ;;                  1    wreg      unsigned char 
  1342 ;; Registers used:
  1343 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1344 ;; Tracked objects:
  1345 ;;		On entry : 0/0
  1346 ;;		On exit  : 0/0
  1347 ;;		Unchanged: 0/0
  1348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1349 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1350 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1352 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1353 ;;Total ram usage:        3 bytes
  1354 ;; Hardware stack levels used: 1
  1355 ;; Hardware stack levels required when called: 2
  1356 ;; This function calls:
  1357 ;;		_gpio_pin_write_logic
  1358 ;;		_lcd_4bit_send_enable_signal
  1359 ;;		_lcd_send_4bits
  1360 ;; This function is called by:
  1361 ;;		_lcd_4bit_initialize
  1362 ;;		_lcd_4bit_set_cursor
  1363 ;; This function uses a non-reentrant model
  1364 ;;
  1365                           
  1366                           	psect	text9
  1367   0015E4                     __ptext9:
  1368                           	callstack 0
  1369   0015E4                     _lcd_4bit_send_command:
  1370                           	callstack 26
  1371   0015E4                     
  1372                           ;ECU_Layer/LCD/ecu_lcd.c: 71:     if(((void*)0) == _lcd_){
  1373   0015E4  503A               	movf	lcd_4bit_send_command@_lcd_^0,w,c
  1374   0015E6  A4D8               	btfss	status,2,c
  1375   0015E8  EFF8  F00A         	goto	u1021
  1376   0015EC  EFFA  F00A         	goto	u1020
  1377   0015F0                     u1021:
  1378   0015F0  EFFE  F00A         	goto	l1977
  1379   0015F4                     u1020:
  1380   0015F4                     
  1381                           ;ECU_Layer/LCD/ecu_lcd.c: 72:         ret = (Std_ReturnType)0x00;
  1382   0015F4  0E00               	movlw	0
  1383   0015F6  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  1384                           
  1385                           ;ECU_Layer/LCD/ecu_lcd.c: 73:     }
  1386   0015F8  EF1E  F00B         	goto	l1979
  1387   0015FC                     l1977:
  1388                           
  1389                           ;ECU_Layer/LCD/ecu_lcd.c: 75:         ret = gpio_pin_write_logic(&(_lcd_->lcd_rs), GPIO_
      +                          LOW);
  1390   0015FC  C03A  F02F         	movff	lcd_4bit_send_command@_lcd_,gpio_pin_write_logic@_pin_config
  1391   001600  0E00               	movlw	0
  1392   001602  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1393   001604  EC9C  F008         	call	_gpio_pin_write_logic	;wreg free
  1394   001608  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  1395                           
  1396                           ;ECU_Layer/LCD/ecu_lcd.c: 76:         ret = lcd_send_4bits(_lcd_ , command>>4);
  1397   00160A  C03A  F037         	movff	lcd_4bit_send_command@_lcd_,lcd_send_4bits@_lcd_
  1398   00160E  383B               	swapf	lcd_4bit_send_command@command^0,w,c
  1399   001610  0B0F               	andlw	15
  1400   001612  6E38               	movwf	lcd_send_4bits@_data_command^0,c
  1401   001614  EC20  F00B         	call	_lcd_send_4bits	;wreg free
  1402   001618  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  1403                           
  1404                           ;ECU_Layer/LCD/ecu_lcd.c: 77:         ret = lcd_4bit_send_enable_signal(_lcd_);
  1405   00161A  C03A  F037         	movff	lcd_4bit_send_command@_lcd_,lcd_4bit_send_enable_signal@_lcd_
  1406   00161E  ECC4  F00B         	call	_lcd_4bit_send_enable_signal	;wreg free
  1407   001622  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  1408                           
  1409                           ;ECU_Layer/LCD/ecu_lcd.c: 78:         ret = lcd_send_4bits(_lcd_ , command);
  1410   001624  C03A  F037         	movff	lcd_4bit_send_command@_lcd_,lcd_send_4bits@_lcd_
  1411   001628  C03B  F038         	movff	lcd_4bit_send_command@command,lcd_send_4bits@_data_command
  1412   00162C  EC20  F00B         	call	_lcd_send_4bits	;wreg free
  1413   001630  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  1414                           
  1415                           ;ECU_Layer/LCD/ecu_lcd.c: 79:         ret = lcd_4bit_send_enable_signal(_lcd_);
  1416   001632  C03A  F037         	movff	lcd_4bit_send_command@_lcd_,lcd_4bit_send_enable_signal@_lcd_
  1417   001636  ECC4  F00B         	call	_lcd_4bit_send_enable_signal	;wreg free
  1418   00163A  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  1419   00163C                     l1979:
  1420                           
  1421                           ;ECU_Layer/LCD/ecu_lcd.c: 83:     return ret;
  1422   00163C  503C               	movf	lcd_4bit_send_command@ret^0,w,c
  1423   00163E  0012               	return		;funcret
  1424   001640                     __end_of_lcd_4bit_send_command:
  1425                           	callstack 0
  1426                           
  1427 ;; *************** function _lcd_send_4bits *****************
  1428 ;; Defined at:
  1429 ;;		line 404 in file "ECU_Layer/LCD/ecu_lcd.c"
  1430 ;; Parameters:    Size  Location     Type
  1431 ;;  _lcd_           1    8[COMRAM] PTR const struct .
  1432 ;;		 -> lcd_1(6), 
  1433 ;;  _data_comman    1    9[COMRAM] unsigned char 
  1434 ;; Auto vars:     Size  Location     Type
  1435 ;;  ret             1   10[COMRAM] unsigned char 
  1436 ;; Return value:  Size  Location     Type
  1437 ;;                  1    wreg      unsigned char 
  1438 ;; Registers used:
  1439 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1440 ;; Tracked objects:
  1441 ;;		On entry : 0/0
  1442 ;;		On exit  : 0/0
  1443 ;;		Unchanged: 0/0
  1444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1445 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1446 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1448 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1449 ;;Total ram usage:        3 bytes
  1450 ;; Hardware stack levels used: 1
  1451 ;; Hardware stack levels required when called: 1
  1452 ;; This function calls:
  1453 ;;		_gpio_pin_write_logic
  1454 ;; This function is called by:
  1455 ;;		_lcd_4bit_send_command
  1456 ;;		_lcd_4bit_send_char_data
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           	psect	text10
  1461   001640                     __ptext10:
  1462                           	callstack 0
  1463   001640                     _lcd_send_4bits:
  1464                           	callstack 26
  1465   001640  5037               	movf	lcd_send_4bits@_lcd_^0,w,c
  1466   001642  0F02               	addlw	2
  1467   001644  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1468   001646  5038               	movf	lcd_send_4bits@_data_command^0,w,c
  1469   001648  0B01               	andlw	1
  1470   00164A  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1471   00164C  EC9C  F008         	call	_gpio_pin_write_logic	;wreg free
  1472   001650  5037               	movf	lcd_send_4bits@_lcd_^0,w,c
  1473   001652  0F03               	addlw	3
  1474   001654  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1475   001656  90D8               	bcf	status,0,c
  1476   001658  3038               	rrcf	lcd_send_4bits@_data_command^0,w,c
  1477   00165A  0B01               	andlw	1
  1478   00165C  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1479   00165E  EC9C  F008         	call	_gpio_pin_write_logic	;wreg free
  1480   001662  5037               	movf	lcd_send_4bits@_lcd_^0,w,c
  1481   001664  0F04               	addlw	4
  1482   001666  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1483   001668  4038               	rrncf	lcd_send_4bits@_data_command^0,w,c
  1484   00166A  42E8               	rrncf	wreg,f,c
  1485   00166C  0B3F               	andlw	63
  1486   00166E  0B01               	andlw	1
  1487   001670  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1488   001672  EC9C  F008         	call	_gpio_pin_write_logic	;wreg free
  1489   001676                     
  1490                           ;ECU_Layer/LCD/ecu_lcd.c: 409:     ret = gpio_pin_write_logic(&(_lcd_->lcd_data[3]), (_d
      +                          ata_command >> 3) & (uint8)0x01);
  1491   001676  5037               	movf	lcd_send_4bits@_lcd_^0,w,c
  1492   001678  0F05               	addlw	5
  1493   00167A  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1494   00167C  3838               	swapf	lcd_send_4bits@_data_command^0,w,c
  1495   00167E  46E8               	rlncf	wreg,f,c
  1496   001680  0B1F               	andlw	31
  1497   001682  0B01               	andlw	1
  1498   001684  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1499   001686  EC9C  F008         	call	_gpio_pin_write_logic	;wreg free
  1500   00168A  6E39               	movwf	lcd_send_4bits@ret^0,c
  1501                           
  1502                           ;ECU_Layer/LCD/ecu_lcd.c: 411:     return ret;
  1503   00168C  5039               	movf	lcd_send_4bits@ret^0,w,c
  1504   00168E  0012               	return		;funcret
  1505   001690                     __end_of_lcd_send_4bits:
  1506                           	callstack 0
  1507                           
  1508 ;; *************** function _lcd_4bit_send_enable_signal *****************
  1509 ;; Defined at:
  1510 ;;		line 415 in file "ECU_Layer/LCD/ecu_lcd.c"
  1511 ;; Parameters:    Size  Location     Type
  1512 ;;  _lcd_           1    8[COMRAM] PTR const struct .
  1513 ;;		 -> lcd_1(6), 
  1514 ;; Auto vars:     Size  Location     Type
  1515 ;;  ret             1    9[COMRAM] unsigned char 
  1516 ;; Return value:  Size  Location     Type
  1517 ;;                  1    wreg      unsigned char 
  1518 ;; Registers used:
  1519 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1520 ;; Tracked objects:
  1521 ;;		On entry : 0/0
  1522 ;;		On exit  : 0/0
  1523 ;;		Unchanged: 0/0
  1524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1525 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1526 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1528 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1529 ;;Total ram usage:        2 bytes
  1530 ;; Hardware stack levels used: 1
  1531 ;; Hardware stack levels required when called: 1
  1532 ;; This function calls:
  1533 ;;		_gpio_pin_write_logic
  1534 ;; This function is called by:
  1535 ;;		_lcd_4bit_send_command
  1536 ;;		_lcd_4bit_send_char_data
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           	psect	text11
  1541   001788                     __ptext11:
  1542                           	callstack 0
  1543   001788                     _lcd_4bit_send_enable_signal:
  1544                           	callstack 26
  1545   001788  2837               	incf	lcd_4bit_send_enable_signal@_lcd_^0,w,c
  1546   00178A  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1547   00178C  0E01               	movlw	1
  1548   00178E  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1549   001790  EC9C  F008         	call	_gpio_pin_write_logic	;wreg free
  1550   001794                     
  1551                           ;ECU_Layer/LCD/ecu_lcd.c: 418:     _delay((unsigned long)((5)*(4000000UL/4000000.0)));
  1552   001794  D000               	nop2		;2 cycle nop
  1553   001796  D000               	nop2		;2 cycle nop
  1554   001798  0000               	nop	
  1555   00179A                     
  1556                           ;ECU_Layer/LCD/ecu_lcd.c: 419:     ret = gpio_pin_write_logic(&(_lcd_->lcd_en), GPIO_LOW
      +                          );
  1557   00179A  2837               	incf	lcd_4bit_send_enable_signal@_lcd_^0,w,c
  1558   00179C  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1559   00179E  0E00               	movlw	0
  1560   0017A0  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1561   0017A2  EC9C  F008         	call	_gpio_pin_write_logic	;wreg free
  1562   0017A6  6E38               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  1563                           
  1564                           ;ECU_Layer/LCD/ecu_lcd.c: 420:     return ret;
  1565   0017A8  5038               	movf	lcd_4bit_send_enable_signal@ret^0,w,c
  1566   0017AA  0012               	return		;funcret
  1567   0017AC                     __end_of_lcd_4bit_send_enable_signal:
  1568                           	callstack 0
  1569                           
  1570 ;; *************** function _gpio_pin_intialize *****************
  1571 ;; Defined at:
  1572 ;;		line 54 in file "MCAL_Layer/GPIO/hel_gpio.c"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;  _pin_config     1    8[COMRAM] PTR const struct .
  1575 ;;		 -> lcd_2$lcd_data(8), lcd_2(10), lcd_1$lcd_data(4), lcd_1(6), 
  1576 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;  ret             1   10[COMRAM] unsigned char 
  1579 ;; Return value:  Size  Location     Type
  1580 ;;                  1    wreg      unsigned char 
  1581 ;; Registers used:
  1582 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1583 ;; Tracked objects:
  1584 ;;		On entry : 0/0
  1585 ;;		On exit  : 0/0
  1586 ;;		Unchanged: 0/0
  1587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1588 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1589 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1590 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1591 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1592 ;;Total ram usage:        3 bytes
  1593 ;; Hardware stack levels used: 1
  1594 ;; Hardware stack levels required when called: 1
  1595 ;; This function calls:
  1596 ;;		_gpio_pin_direction_intialize
  1597 ;;		_gpio_pin_write_logic
  1598 ;; This function is called by:
  1599 ;;		_lcd_4bit_initialize
  1600 ;;		_lcd_8bit_initialize
  1601 ;;		_seven_segment_intialize
  1602 ;;		_dc_motor_initialize
  1603 ;;		_keypad_initialize
  1604 ;;		_led_initialize
  1605 ;;		_relay_initialize
  1606 ;; This function uses a non-reentrant model
  1607 ;;
  1608                           
  1609                           	psect	text12
  1610   00152A                     __ptext12:
  1611                           	callstack 0
  1612   00152A                     _gpio_pin_intialize:
  1613                           	callstack 27
  1614   00152A                     
  1615                           ;MCAL_Layer/GPIO/hel_gpio.c: 56:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1){
  1616   00152A  5037               	movf	gpio_pin_intialize@_pin_config^0,w,c
  1617   00152C  B4D8               	btfsc	status,2,c
  1618   00152E  EF9B  F00A         	goto	u1001
  1619   001532  EF9D  F00A         	goto	u1000
  1620   001536                     u1001:
  1621   001536  EFAD  F00A         	goto	l1965
  1622   00153A                     u1000:
  1623   00153A  5037               	movf	gpio_pin_intialize@_pin_config^0,w,c
  1624   00153C  6ED9               	movwf	fsr2l,c
  1625   00153E  6ADA               	clrf	fsr2h,c
  1626   001540  30DF               	rrcf	223,w,c
  1627   001542  32E8               	rrcf	wreg,f,c
  1628   001544  32E8               	rrcf	wreg,f,c
  1629   001546  0B07               	andlw	7
  1630   001548  6E38               	movwf	??_gpio_pin_intialize^0,c
  1631   00154A  0E07               	movlw	7
  1632   00154C  6438               	cpfsgt	??_gpio_pin_intialize^0,c
  1633   00154E  EFAB  F00A         	goto	u1011
  1634   001552  EFAD  F00A         	goto	u1010
  1635   001556                     u1011:
  1636   001556  EFB1  F00A         	goto	l1967
  1637   00155A                     u1010:
  1638   00155A                     l1965:
  1639                           
  1640                           ;MCAL_Layer/GPIO/hel_gpio.c: 57:         ret = (Std_ReturnType)0x00;
  1641   00155A  0E00               	movlw	0
  1642   00155C  6E39               	movwf	gpio_pin_intialize@ret^0,c
  1643                           
  1644                           ;MCAL_Layer/GPIO/hel_gpio.c: 58:     }
  1645   00155E  EFC2  F00A         	goto	l1969
  1646   001562                     l1967:
  1647                           
  1648                           ;MCAL_Layer/GPIO/hel_gpio.c: 60:         ret = gpio_pin_direction_intialize(_pin_config)
      +                          ;
  1649   001562  C037  F02F         	movff	gpio_pin_intialize@_pin_config,gpio_pin_direction_intialize@_pin_config
  1650   001566  EC09  F008         	call	_gpio_pin_direction_intialize	;wreg free
  1651   00156A  6E39               	movwf	gpio_pin_intialize@ret^0,c
  1652                           
  1653                           ;MCAL_Layer/GPIO/hel_gpio.c: 61:         ret = gpio_pin_write_logic(_pin_config, _pin_co
      +                          nfig->logic);
  1654   00156C  C037  F02F         	movff	gpio_pin_intialize@_pin_config,gpio_pin_write_logic@_pin_config
  1655   001570  5037               	movf	gpio_pin_intialize@_pin_config^0,w,c
  1656   001572  6ED9               	movwf	fsr2l,c
  1657   001574  6ADA               	clrf	fsr2h,c
  1658   001576  0E00               	movlw	0
  1659   001578  BEDF               	btfsc	indf2,7,c
  1660   00157A  0E01               	movlw	1
  1661   00157C  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1662   00157E  EC9C  F008         	call	_gpio_pin_write_logic	;wreg free
  1663   001582  6E39               	movwf	gpio_pin_intialize@ret^0,c
  1664   001584                     l1969:
  1665                           
  1666                           ;MCAL_Layer/GPIO/hel_gpio.c: 63:     return ret;
  1667   001584  5039               	movf	gpio_pin_intialize@ret^0,w,c
  1668   001586  0012               	return		;funcret
  1669   001588                     __end_of_gpio_pin_intialize:
  1670                           	callstack 0
  1671                           
  1672 ;; *************** function _gpio_pin_write_logic *****************
  1673 ;; Defined at:
  1674 ;;		line 97 in file "MCAL_Layer/GPIO/hel_gpio.c"
  1675 ;; Parameters:    Size  Location     Type
  1676 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  1677 ;;		 -> lcd_2$lcd_data(8), lcd_2(10), lcd_1$lcd_data(4), lcd_1(6), 
  1678 ;;		 -> relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), relay_initialize@pin_obj(1), led_turn_off@pin_obj(1), 
  1679 ;;		 -> led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
  1680 ;;  logic           1    1[COMRAM] enum E2811
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;  ret             1    7[COMRAM] unsigned char 
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  1    wreg      unsigned char 
  1685 ;; Registers used:
  1686 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1692 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1693 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1694 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1695 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1696 ;;Total ram usage:        8 bytes
  1697 ;; Hardware stack levels used: 1
  1698 ;; This function calls:
  1699 ;;		Nothing
  1700 ;; This function is called by:
  1701 ;;		_gpio_pin_intialize
  1702 ;;		_lcd_4bit_send_command
  1703 ;;		_lcd_4bit_send_char_data
  1704 ;;		_lcd_8bit_send_command
  1705 ;;		_lcd_send_4bits
  1706 ;;		_lcd_4bit_send_enable_signal
  1707 ;;		_lcd_8bit_send_enable_signal
  1708 ;;		_seven_segment_write_number
  1709 ;;		_dc_motor_move_right
  1710 ;;		_dc_motor_move_left
  1711 ;;		_dc_motor_stop
  1712 ;;		_keypad_get_value
  1713 ;;		_led_turn_on
  1714 ;;		_led_turn_off
  1715 ;;		_relay_turn_on
  1716 ;;		_relay_turn_off
  1717 ;;		_lcd_8bit_send_char_data
  1718 ;; This function uses a non-reentrant model
  1719 ;;
  1720                           
  1721                           	psect	text13
  1722   001138                     __ptext13:
  1723                           	callstack 0
  1724   001138                     _gpio_pin_write_logic:
  1725                           	callstack 26
  1726   001138                     
  1727                           ;MCAL_Layer/GPIO/hel_gpio.c: 98:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1728   001138  0E01               	movlw	1
  1729   00113A  6E36               	movwf	gpio_pin_write_logic@ret^0,c
  1730                           
  1731                           ;MCAL_Layer/GPIO/hel_gpio.c: 99:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1){
  1732   00113C  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1733   00113E  B4D8               	btfsc	status,2,c
  1734   001140  EFA4  F008         	goto	u901
  1735   001144  EFA6  F008         	goto	u900
  1736   001148                     u901:
  1737   001148  EFB6  F008         	goto	l1889
  1738   00114C                     u900:
  1739   00114C  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1740   00114E  6ED9               	movwf	fsr2l,c
  1741   001150  6ADA               	clrf	fsr2h,c
  1742   001152  30DF               	rrcf	223,w,c
  1743   001154  32E8               	rrcf	wreg,f,c
  1744   001156  32E8               	rrcf	wreg,f,c
  1745   001158  0B07               	andlw	7
  1746   00115A  6E31               	movwf	??_gpio_pin_write_logic^0,c
  1747   00115C  0E07               	movlw	7
  1748   00115E  6431               	cpfsgt	??_gpio_pin_write_logic^0,c
  1749   001160  EFB4  F008         	goto	u911
  1750   001164  EFB6  F008         	goto	u910
  1751   001168                     u911:
  1752   001168  EF0D  F009         	goto	l1897
  1753   00116C                     u910:
  1754   00116C                     l1889:
  1755                           
  1756                           ;MCAL_Layer/GPIO/hel_gpio.c: 100:         ret = (Std_ReturnType)0x00;
  1757   00116C  0E00               	movlw	0
  1758   00116E  6E36               	movwf	gpio_pin_write_logic@ret^0,c
  1759                           
  1760                           ;MCAL_Layer/GPIO/hel_gpio.c: 101:     }
  1761   001170  EF22  F009         	goto	l1899
  1762   001174                     l1891:
  1763                           
  1764                           ;MCAL_Layer/GPIO/hel_gpio.c: 105:                 (*lat_registers[_pin_config->port] &= 
      +                          ~((uint8) 1 << _pin_config->pin));
  1765   001174  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1766   001176  6ED9               	movwf	fsr2l,c
  1767   001178  6ADA               	clrf	fsr2h,c
  1768   00117A  30DF               	rrcf	223,w,c
  1769   00117C  32E8               	rrcf	wreg,f,c
  1770   00117E  32E8               	rrcf	wreg,f,c
  1771   001180  0B07               	andlw	7
  1772   001182  6E31               	movwf	??_gpio_pin_write_logic^0,c
  1773   001184  0E01               	movlw	1
  1774   001186  6E32               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1775   001188  2A31               	incf	??_gpio_pin_write_logic^0,f,c
  1776   00118A  EFC9  F008         	goto	u924
  1777   00118E                     u925:
  1778   00118E  90D8               	bcf	status,0,c
  1779   001190  3632               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1780   001192                     u924:
  1781   001192  2E31               	decfsz	??_gpio_pin_write_logic^0,f,c
  1782   001194  EFC7  F008         	goto	u925
  1783   001198  5032               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1784   00119A  0AFF               	xorlw	255
  1785   00119C  6E33               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1786   00119E  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1787   0011A0  6ED9               	movwf	fsr2l,c
  1788   0011A2  6ADA               	clrf	fsr2h,c
  1789   0011A4  50DF               	movf	223,w,c
  1790   0011A6  0B07               	andlw	7
  1791   0011A8  0D02               	mullw	2
  1792   0011AA  50F3               	movf	243,w,c
  1793   0011AC  0F0B               	addlw	low _lat_registers
  1794   0011AE  6ED9               	movwf	fsr2l,c
  1795   0011B0  6ADA               	clrf	fsr2h,c
  1796   0011B2  CFDE F034          	movff	postinc2,??_gpio_pin_write_logic+3
  1797   0011B6  CFDD F035          	movff	postdec2,??_gpio_pin_write_logic+4
  1798   0011BA  C034  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1799   0011BE  C035  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1800   0011C2  5033               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1801   0011C4  16DF               	andwf	indf2,f,c
  1802                           
  1803                           ;MCAL_Layer/GPIO/hel_gpio.c: 106:                 break;
  1804   0011C6  EF22  F009         	goto	l1899
  1805   0011CA                     l1893:
  1806                           
  1807                           ;MCAL_Layer/GPIO/hel_gpio.c: 108:                 (*lat_registers[_pin_config->port] |= 
      +                          ((uint8) 1 << _pin_config->pin));
  1808   0011CA  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1809   0011CC  6ED9               	movwf	fsr2l,c
  1810   0011CE  6ADA               	clrf	fsr2h,c
  1811   0011D0  30DF               	rrcf	223,w,c
  1812   0011D2  32E8               	rrcf	wreg,f,c
  1813   0011D4  32E8               	rrcf	wreg,f,c
  1814   0011D6  0B07               	andlw	7
  1815   0011D8  6E31               	movwf	??_gpio_pin_write_logic^0,c
  1816   0011DA  0E01               	movlw	1
  1817   0011DC  6E32               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1818   0011DE  2A31               	incf	??_gpio_pin_write_logic^0,f,c
  1819   0011E0  EFF4  F008         	goto	u934
  1820   0011E4                     u935:
  1821   0011E4  90D8               	bcf	status,0,c
  1822   0011E6  3632               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1823   0011E8                     u934:
  1824   0011E8  2E31               	decfsz	??_gpio_pin_write_logic^0,f,c
  1825   0011EA  EFF2  F008         	goto	u935
  1826   0011EE  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1827   0011F0  6ED9               	movwf	fsr2l,c
  1828   0011F2  6ADA               	clrf	fsr2h,c
  1829   0011F4  50DF               	movf	223,w,c
  1830   0011F6  0B07               	andlw	7
  1831   0011F8  0D02               	mullw	2
  1832   0011FA  50F3               	movf	243,w,c
  1833   0011FC  0F0B               	addlw	low _lat_registers
  1834   0011FE  6ED9               	movwf	fsr2l,c
  1835   001200  6ADA               	clrf	fsr2h,c
  1836   001202  CFDE F033          	movff	postinc2,??_gpio_pin_write_logic+2
  1837   001206  CFDD F034          	movff	postdec2,??_gpio_pin_write_logic+3
  1838   00120A  C033  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  1839   00120E  C034  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  1840   001212  5032               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1841   001214  12DF               	iorwf	indf2,f,c
  1842                           
  1843                           ;MCAL_Layer/GPIO/hel_gpio.c: 109:                 break;
  1844   001216  EF22  F009         	goto	l1899
  1845   00121A                     l1897:
  1846   00121A  5030               	movf	gpio_pin_write_logic@logic^0,w,c
  1847   00121C  6E31               	movwf	??_gpio_pin_write_logic^0,c
  1848   00121E  6A32               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1849                           
  1850                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1851                           ; Switch size 1, requested type "simple"
  1852                           ; Number of cases is 1, Range of values is 0 to 0
  1853                           ; switch strategies available:
  1854                           ; Name         Instructions Cycles
  1855                           ; simple_byte            4     3 (average)
  1856                           ;	Chosen strategy is simple_byte
  1857   001220  5032               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1858   001222  0A00               	xorlw	0	; case 0
  1859   001224  B4D8               	btfsc	status,2,c
  1860   001226  EF17  F009         	goto	l2497
  1861   00122A  EFB6  F008         	goto	l1889
  1862   00122E                     l2497:
  1863                           
  1864                           ; Switch size 1, requested type "simple"
  1865                           ; Number of cases is 2, Range of values is 0 to 1
  1866                           ; switch strategies available:
  1867                           ; Name         Instructions Cycles
  1868                           ; simple_byte            7     4 (average)
  1869                           ;	Chosen strategy is simple_byte
  1870   00122E  5031               	movf	??_gpio_pin_write_logic^0,w,c
  1871   001230  0A00               	xorlw	0	; case 0
  1872   001232  B4D8               	btfsc	status,2,c
  1873   001234  EFBA  F008         	goto	l1891
  1874   001238  0A01               	xorlw	1	; case 1
  1875   00123A  B4D8               	btfsc	status,2,c
  1876   00123C  EFE5  F008         	goto	l1893
  1877   001240  EFB6  F008         	goto	l1889
  1878   001244                     l1899:
  1879                           
  1880                           ;MCAL_Layer/GPIO/hel_gpio.c: 113:     return ret;
  1881   001244  5036               	movf	gpio_pin_write_logic@ret^0,w,c
  1882   001246  0012               	return		;funcret
  1883   001248                     __end_of_gpio_pin_write_logic:
  1884                           	callstack 0
  1885                           
  1886 ;; *************** function _gpio_pin_direction_intialize *****************
  1887 ;; Defined at:
  1888 ;;		line 26 in file "MCAL_Layer/GPIO/hel_gpio.c"
  1889 ;; Parameters:    Size  Location     Type
  1890 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  1891 ;;		 -> lcd_2$lcd_data(8), lcd_2(10), lcd_1$lcd_data(4), lcd_1(6), 
  1892 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  1893 ;; Auto vars:     Size  Location     Type
  1894 ;;  ret             1    6[COMRAM] unsigned char 
  1895 ;; Return value:  Size  Location     Type
  1896 ;;                  1    wreg      unsigned char 
  1897 ;; Registers used:
  1898 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1899 ;; Tracked objects:
  1900 ;;		On entry : 0/0
  1901 ;;		On exit  : 0/0
  1902 ;;		Unchanged: 0/0
  1903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1904 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1905 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1906 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1907 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1908 ;;Total ram usage:        7 bytes
  1909 ;; Hardware stack levels used: 1
  1910 ;; This function calls:
  1911 ;;		Nothing
  1912 ;; This function is called by:
  1913 ;;		_gpio_pin_intialize
  1914 ;;		_keypad_initialize
  1915 ;;		_push_button_initialize
  1916 ;; This function uses a non-reentrant model
  1917 ;;
  1918                           
  1919                           	psect	text14
  1920   001012                     __ptext14:
  1921                           	callstack 0
  1922   001012                     _gpio_pin_direction_intialize:
  1923                           	callstack 27
  1924   001012                     
  1925                           ;MCAL_Layer/GPIO/hel_gpio.c: 27:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1926   001012  0E01               	movlw	1
  1927   001014  6E35               	movwf	gpio_pin_direction_intialize@ret^0,c
  1928                           
  1929                           ;MCAL_Layer/GPIO/hel_gpio.c: 28:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1){
  1930   001016  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1931   001018  B4D8               	btfsc	status,2,c
  1932   00101A  EF11  F008         	goto	u941
  1933   00101E  EF13  F008         	goto	u940
  1934   001022                     u941:
  1935   001022  EF23  F008         	goto	l1911
  1936   001026                     u940:
  1937   001026  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1938   001028  6ED9               	movwf	fsr2l,c
  1939   00102A  6ADA               	clrf	fsr2h,c
  1940   00102C  30DF               	rrcf	223,w,c
  1941   00102E  32E8               	rrcf	wreg,f,c
  1942   001030  32E8               	rrcf	wreg,f,c
  1943   001032  0B07               	andlw	7
  1944   001034  6E30               	movwf	??_gpio_pin_direction_intialize^0,c
  1945   001036  0E07               	movlw	7
  1946   001038  6430               	cpfsgt	??_gpio_pin_direction_intialize^0,c
  1947   00103A  EF21  F008         	goto	u951
  1948   00103E  EF23  F008         	goto	u950
  1949   001042                     u951:
  1950   001042  EF7A  F008         	goto	l1919
  1951   001046                     u950:
  1952   001046                     l1911:
  1953                           
  1954                           ;MCAL_Layer/GPIO/hel_gpio.c: 29:         ret = (Std_ReturnType)0x00;
  1955   001046  0E00               	movlw	0
  1956   001048  6E35               	movwf	gpio_pin_direction_intialize@ret^0,c
  1957                           
  1958                           ;MCAL_Layer/GPIO/hel_gpio.c: 30:     }
  1959   00104A  EF9A  F008         	goto	l1921
  1960   00104E                     l1913:
  1961                           
  1962                           ;MCAL_Layer/GPIO/hel_gpio.c: 34:                 (*tris_registers[_pin_config->port] &= 
      +                          ~((uint8) 1 << _pin_config->pin));
  1963   00104E  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1964   001050  6ED9               	movwf	fsr2l,c
  1965   001052  6ADA               	clrf	fsr2h,c
  1966   001054  30DF               	rrcf	223,w,c
  1967   001056  32E8               	rrcf	wreg,f,c
  1968   001058  32E8               	rrcf	wreg,f,c
  1969   00105A  0B07               	andlw	7
  1970   00105C  6E30               	movwf	??_gpio_pin_direction_intialize^0,c
  1971   00105E  0E01               	movlw	1
  1972   001060  6E31               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  1973   001062  2A30               	incf	??_gpio_pin_direction_intialize^0,f,c
  1974   001064  EF36  F008         	goto	u964
  1975   001068                     u965:
  1976   001068  90D8               	bcf	status,0,c
  1977   00106A  3631               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  1978   00106C                     u964:
  1979   00106C  2E30               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  1980   00106E  EF34  F008         	goto	u965
  1981   001072  5031               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1982   001074  0AFF               	xorlw	255
  1983   001076  6E32               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  1984   001078  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1985   00107A  6ED9               	movwf	fsr2l,c
  1986   00107C  6ADA               	clrf	fsr2h,c
  1987   00107E  50DF               	movf	223,w,c
  1988   001080  0B07               	andlw	7
  1989   001082  0D02               	mullw	2
  1990   001084  50F3               	movf	243,w,c
  1991   001086  0F15               	addlw	low _tris_registers
  1992   001088  6ED9               	movwf	fsr2l,c
  1993   00108A  6ADA               	clrf	fsr2h,c
  1994   00108C  CFDE F033          	movff	postinc2,??_gpio_pin_direction_intialize+3
  1995   001090  CFDD F034          	movff	postdec2,??_gpio_pin_direction_intialize+4
  1996   001094  C033  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  1997   001098  C034  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  1998   00109C  5032               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  1999   00109E  16DF               	andwf	indf2,f,c
  2000                           
  2001                           ;MCAL_Layer/GPIO/hel_gpio.c: 35:                 break;
  2002   0010A0  EF9A  F008         	goto	l1921
  2003   0010A4                     l1915:
  2004                           
  2005                           ;MCAL_Layer/GPIO/hel_gpio.c: 37:                 (*tris_registers[_pin_config->port] |= 
      +                          ((uint8) 1 << _pin_config->pin));
  2006   0010A4  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2007   0010A6  6ED9               	movwf	fsr2l,c
  2008   0010A8  6ADA               	clrf	fsr2h,c
  2009   0010AA  30DF               	rrcf	223,w,c
  2010   0010AC  32E8               	rrcf	wreg,f,c
  2011   0010AE  32E8               	rrcf	wreg,f,c
  2012   0010B0  0B07               	andlw	7
  2013   0010B2  6E30               	movwf	??_gpio_pin_direction_intialize^0,c
  2014   0010B4  0E01               	movlw	1
  2015   0010B6  6E31               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  2016   0010B8  2A30               	incf	??_gpio_pin_direction_intialize^0,f,c
  2017   0010BA  EF61  F008         	goto	u974
  2018   0010BE                     u975:
  2019   0010BE  90D8               	bcf	status,0,c
  2020   0010C0  3631               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  2021   0010C2                     u974:
  2022   0010C2  2E30               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  2023   0010C4  EF5F  F008         	goto	u975
  2024   0010C8  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2025   0010CA  6ED9               	movwf	fsr2l,c
  2026   0010CC  6ADA               	clrf	fsr2h,c
  2027   0010CE  50DF               	movf	223,w,c
  2028   0010D0  0B07               	andlw	7
  2029   0010D2  0D02               	mullw	2
  2030   0010D4  50F3               	movf	243,w,c
  2031   0010D6  0F15               	addlw	low _tris_registers
  2032   0010D8  6ED9               	movwf	fsr2l,c
  2033   0010DA  6ADA               	clrf	fsr2h,c
  2034   0010DC  CFDE F032          	movff	postinc2,??_gpio_pin_direction_intialize+2
  2035   0010E0  CFDD F033          	movff	postdec2,??_gpio_pin_direction_intialize+3
  2036   0010E4  C032  FFD9         	movff	??_gpio_pin_direction_intialize+2,fsr2l
  2037   0010E8  C033  FFDA         	movff	??_gpio_pin_direction_intialize+3,fsr2h
  2038   0010EC  5031               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  2039   0010EE  12DF               	iorwf	indf2,f,c
  2040                           
  2041                           ;MCAL_Layer/GPIO/hel_gpio.c: 38:                 break;
  2042   0010F0  EF9A  F008         	goto	l1921
  2043   0010F4                     l1919:
  2044   0010F4  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2045   0010F6  6ED9               	movwf	fsr2l,c
  2046   0010F8  6ADA               	clrf	fsr2h,c
  2047   0010FA  BCDF               	btfsc	indf2,6,c
  2048   0010FC  EF82  F008         	goto	u981
  2049   001100  EF85  F008         	goto	u980
  2050   001104                     u981:
  2051   001104  0E01               	movlw	1
  2052   001106  EF86  F008         	goto	u990
  2053   00110A                     u980:
  2054   00110A  0E00               	movlw	0
  2055   00110C                     u990:
  2056   00110C  6E30               	movwf	??_gpio_pin_direction_intialize^0,c
  2057   00110E  6A31               	clrf	(??_gpio_pin_direction_intialize+1)^0,c
  2058                           
  2059                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2060                           ; Switch size 1, requested type "simple"
  2061                           ; Number of cases is 1, Range of values is 0 to 0
  2062                           ; switch strategies available:
  2063                           ; Name         Instructions Cycles
  2064                           ; simple_byte            4     3 (average)
  2065                           ;	Chosen strategy is simple_byte
  2066   001110  5031               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  2067   001112  0A00               	xorlw	0	; case 0
  2068   001114  B4D8               	btfsc	status,2,c
  2069   001116  EF8F  F008         	goto	l2499
  2070   00111A  EF23  F008         	goto	l1911
  2071   00111E                     l2499:
  2072                           
  2073                           ; Switch size 1, requested type "simple"
  2074                           ; Number of cases is 2, Range of values is 0 to 1
  2075                           ; switch strategies available:
  2076                           ; Name         Instructions Cycles
  2077                           ; simple_byte            7     4 (average)
  2078                           ;	Chosen strategy is simple_byte
  2079   00111E  5030               	movf	??_gpio_pin_direction_intialize^0,w,c
  2080   001120  0A00               	xorlw	0	; case 0
  2081   001122  B4D8               	btfsc	status,2,c
  2082   001124  EF27  F008         	goto	l1913
  2083   001128  0A01               	xorlw	1	; case 1
  2084   00112A  B4D8               	btfsc	status,2,c
  2085   00112C  EF52  F008         	goto	l1915
  2086   001130  EF23  F008         	goto	l1911
  2087   001134                     l1921:
  2088                           
  2089                           ;MCAL_Layer/GPIO/hel_gpio.c: 42:     return ret;
  2090   001134  5035               	movf	gpio_pin_direction_intialize@ret^0,w,c
  2091   001136  0012               	return		;funcret
  2092   001138                     __end_of_gpio_pin_direction_intialize:
  2093                           	callstack 0
  2094                           
  2095                           	psect	rparam
  2096   000000                     
  2097                           	psect	config
  2098                           
  2099                           ; Padding undefined space
  2100   300000                     	org	3145728
  2101   300000  FF                 	db	255
  2102                           
  2103                           ;Config register CONFIG1H @ 0x300001
  2104                           ;	Oscillator Selection bits
  2105                           ;	OSC = HS, HS oscillator
  2106                           ;	Fail-Safe Clock Monitor Enable bit
  2107                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2108                           ;	Internal/External Oscillator Switchover bit
  2109                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2110   300001                     	org	3145729
  2111   300001  02                 	db	2
  2112                           
  2113                           ;Config register CONFIG2L @ 0x300002
  2114                           ;	Power-up Timer Enable bit
  2115                           ;	PWRT = OFF, PWRT disabled
  2116                           ;	Brown-out Reset Enable bits
  2117                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2118                           ;	Brown Out Reset Voltage bits
  2119                           ;	BORV = 1, 
  2120   300002                     	org	3145730
  2121   300002  09                 	db	9
  2122                           
  2123                           ;Config register CONFIG2H @ 0x300003
  2124                           ;	Watchdog Timer Enable bit
  2125                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2126                           ;	Watchdog Timer Postscale Select bits
  2127                           ;	WDTPS = 32768, 1:32768
  2128   300003                     	org	3145731
  2129   300003  1E                 	db	30
  2130                           
  2131                           ; Padding undefined space
  2132   300004                     	org	3145732
  2133   300004  FF                 	db	255
  2134                           
  2135                           ;Config register CONFIG3H @ 0x300005
  2136                           ;	CCP2 MUX bit
  2137                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2138                           ;	PORTB A/D Enable bit
  2139                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2140                           ;	Low-Power Timer1 Oscillator Enable bit
  2141                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2142                           ;	MCLR Pin Enable bit
  2143                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2144   300005                     	org	3145733
  2145   300005  81                 	db	129
  2146                           
  2147                           ;Config register CONFIG4L @ 0x300006
  2148                           ;	Stack Full/Underflow Reset Enable bit
  2149                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2150                           ;	Single-Supply ICSP Enable bit
  2151                           ;	LVP = OFF, Single-Supply ICSP disabled
  2152                           ;	Extended Instruction Set Enable bit
  2153                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2154                           ;	Background Debugger Enable bit
  2155                           ;	DEBUG = 0x1, unprogrammed default
  2156   300006                     	org	3145734
  2157   300006  81                 	db	129
  2158                           
  2159                           ; Padding undefined space
  2160   300007                     	org	3145735
  2161   300007  FF                 	db	255
  2162                           
  2163                           ;Config register CONFIG5L @ 0x300008
  2164                           ;	Code Protection bit
  2165                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2166                           ;	Code Protection bit
  2167                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2168                           ;	Code Protection bit
  2169                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2170                           ;	Code Protection bit
  2171                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2172   300008                     	org	3145736
  2173   300008  0F                 	db	15
  2174                           
  2175                           ;Config register CONFIG5H @ 0x300009
  2176                           ;	Boot Block Code Protection bit
  2177                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2178                           ;	Data EEPROM Code Protection bit
  2179                           ;	CPD = OFF, Data EEPROM not code-protected
  2180   300009                     	org	3145737
  2181   300009  C0                 	db	192
  2182                           
  2183                           ;Config register CONFIG6L @ 0x30000A
  2184                           ;	Write Protection bit
  2185                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2186                           ;	Write Protection bit
  2187                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2188                           ;	Write Protection bit
  2189                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2190                           ;	Write Protection bit
  2191                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2192   30000A                     	org	3145738
  2193   30000A  0F                 	db	15
  2194                           
  2195                           ;Config register CONFIG6H @ 0x30000B
  2196                           ;	Configuration Register Write Protection bit
  2197                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2198                           ;	Boot Block Write Protection bit
  2199                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2200                           ;	Data EEPROM Write Protection bit
  2201                           ;	WRTD = OFF, Data EEPROM not write-protected
  2202   30000B                     	org	3145739
  2203   30000B  E0                 	db	224
  2204                           
  2205                           ;Config register CONFIG7L @ 0x30000C
  2206                           ;	Table Read Protection bit
  2207                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2208                           ;	Table Read Protection bit
  2209                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2210                           ;	Table Read Protection bit
  2211                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2212                           ;	Table Read Protection bit
  2213                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2214   30000C                     	org	3145740
  2215   30000C  0F                 	db	15
  2216                           
  2217                           ;Config register CONFIG7H @ 0x30000D
  2218                           ;	Boot Block Table Read Protection bit
  2219                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2220   30000D                     	org	3145741
  2221   30000D  40                 	db	64
  2222                           tosu	equ	0xFFF
  2223                           tosh	equ	0xFFE
  2224                           tosl	equ	0xFFD
  2225                           stkptr	equ	0xFFC
  2226                           pclatu	equ	0xFFB
  2227                           pclath	equ	0xFFA
  2228                           pcl	equ	0xFF9
  2229                           tblptru	equ	0xFF8
  2230                           tblptrh	equ	0xFF7
  2231                           tblptrl	equ	0xFF6
  2232                           tablat	equ	0xFF5
  2233                           prodh	equ	0xFF4
  2234                           prodl	equ	0xFF3
  2235                           indf0	equ	0xFEF
  2236                           postinc0	equ	0xFEE
  2237                           postdec0	equ	0xFED
  2238                           preinc0	equ	0xFEC
  2239                           plusw0	equ	0xFEB
  2240                           fsr0h	equ	0xFEA
  2241                           fsr0l	equ	0xFE9
  2242                           wreg	equ	0xFE8
  2243                           indf1	equ	0xFE7
  2244                           postinc1	equ	0xFE6
  2245                           postdec1	equ	0xFE5
  2246                           preinc1	equ	0xFE4
  2247                           plusw1	equ	0xFE3
  2248                           fsr1h	equ	0xFE2
  2249                           fsr1l	equ	0xFE1
  2250                           bsr	equ	0xFE0
  2251                           indf2	equ	0xFDF
  2252                           postinc2	equ	0xFDE
  2253                           postdec2	equ	0xFDD
  2254                           preinc2	equ	0xFDC
  2255                           plusw2	equ	0xFDB
  2256                           fsr2h	equ	0xFDA
  2257                           fsr2l	equ	0xFD9
  2258                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    16
    Data        46
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     25      78
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    gpio_pin_direction_intialize@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), lcd_2(COMRAM[10]), lcd_2$lcd_data(COMRAM[8]), 
		 -> led_initialize@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_intialize@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), lcd_2(COMRAM[10]), lcd_2$lcd_data(COMRAM[8]), 
		 -> led_initialize@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), lcd_2(COMRAM[10]), lcd_2$lcd_data(COMRAM[8]), 
		 -> led_initialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 
		 -> relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    lcd_4bit_initialize@_lcd_	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_char_data@_lcd_	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_char_data_position@_lcd_	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_command@_lcd_	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_enable_signal@_lcd_	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_set_cursor@_lcd_	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_8bit_initialize@_lcd_	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_command@_lcd_	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_enable_signal@_lcd_	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_send_4bits@_lcd_	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 


Critical Paths under _main in COMRAM

    _main->_lcd_4bit_send_char_data_position
    _lcd_4bit_send_char_data_position->_lcd_4bit_set_cursor
    _lcd_4bit_set_cursor->_lcd_4bit_send_command
    _lcd_4bit_send_char_data->_lcd_send_4bits
    _application_intialize->_lcd_8bit_initialize
    _lcd_8bit_initialize->_lcd_8bit_send_command
    _lcd_8bit_send_command->_lcd_8bit_send_enable_signal
    _lcd_8bit_send_enable_signal->_gpio_pin_write_logic
    _lcd_4bit_initialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_4bit_send_enable_signal->_gpio_pin_write_logic
    _gpio_pin_intialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   79805
              _application_intialize
   _lcd_4bit_send_char_data_position
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_char_data_position                     5     1      4   35472
                                             20 COMRAM     5     1      4
            _lcd_4bit_send_char_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_set_cursor                                  6     3      3   18492
                                             14 COMRAM     6     3      3
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_char_data                              3     1      2   16214
                                             11 COMRAM     3     1      2
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                1     1      0   44330
                _lcd_4bit_initialize
                _lcd_8bit_initialize
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_initialize                                  4     3      1   19248
                                             16 COMRAM     4     3      1
                 _gpio_pin_intialize
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_command                                6     4      2   12207
                                             10 COMRAM     6     4      2
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (4) _lcd_8bit_send_enable_signal                          2     1      1    5112
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_initialize                                  4     3      1   25079
                                             14 COMRAM     4     3      1
                 _gpio_pin_intialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                3     1      2   18038
                                             11 COMRAM     3     1      2
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       3     1      2    5702
                                              8 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_enable_signal                          2     1      1    5264
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_intialize                                   3     2      1    6574
                                              8 COMRAM     3     2      1
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                 8     6      2    4891
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_intialize                         7     6      1     407
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_intialize
     _lcd_4bit_initialize
       _gpio_pin_intialize
         _gpio_pin_direction_intialize
         _gpio_pin_write_logic
       _lcd_4bit_send_command
         _gpio_pin_write_logic
         _lcd_4bit_send_enable_signal
           _gpio_pin_write_logic
         _lcd_send_4bits
           _gpio_pin_write_logic
     _lcd_8bit_initialize
       _gpio_pin_intialize
       _lcd_8bit_send_command
         _gpio_pin_write_logic
         _lcd_8bit_send_enable_signal
           _gpio_pin_write_logic
   _lcd_4bit_send_char_data_position
     _lcd_4bit_send_char_data
       _gpio_pin_write_logic
       _lcd_4bit_send_enable_signal
       _lcd_send_4bits
     _lcd_4bit_set_cursor
       _lcd_4bit_send_command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     19      4E       1       61.4%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4E      39        0.0%
DATA                 0      0      4E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Nov 14 21:57:35 2023

                         ?_lcd_send_4bits 0037                                       l210 1586  
                                     l203 1136                                       l410 17AA  
                                     l323 163E                                       l229 1246  
                                     l413 1786                                       l333 16CA  
                                     l318 141A                                       l407 168E  
                                     l328 15E2                                       l433 14B2  
                                     l362 1528                                       l355 1330  
                                     l291 17BC                                       u900 114C  
                                     u901 1148                                       u910 116C  
                                     u911 1168                                       u940 1026  
                                     u924 1192                                       u941 1022  
                                     u925 118E                                       u950 1046  
                                     u934 11E8                                       u951 1042  
                                     u935 11E4                                       u980 110A  
                                     u964 106C                                       u981 1104  
                                     u965 1068                                       u990 110C  
                                     u974 10C2                                       u975 10BE  
     __end_of_lcd_4bit_send_enable_signal 17AC               _lcd_4bit_send_enable_signal 1788  
                     led_initialize@F2891 004E                                       wreg 0FE8  
                   relay_initialize@F2885 004A               lcd_send_4bits@_data_command 0038  
                                    l2001 151C                                      l2011 134E  
                                    l2003 1526                                      l2021 1372  
                                    l2013 1362                                      l2101 15E0  
                                    l2031 13BC                                      l2023 1374  
                                    l2007 1332                                      l2111 143A  
                                    l2041 13F2                                      l2033 13C2  
                                    l2025 1384                                      l2009 1346  
                                    l2113 144E                                      l2105 141C  
                                    l2043 13FE                                      l2035 13CE  
                                    l2027 1394                                      l2019 1366  
                                    l2051 1248                                      l2131 17B4  
                                    l2115 1462                                      l2107 1420  
                                    l2045 140A                                      l2037 13DA  
                                    l2029 13A0                                      l2053 125C  
                                    l2109 1426                                      l2117 1476  
                                    l2133 1690                                      l2039 13E6  
                                    l2047 1418                                      l2071 12AA  
                                    l2063 127C                                      l2055 1264  
                                    l2127 17AC                                      l2119 14B0  
                                    l2135 16A0                                      l2081 12F0  
                                    l2073 12B6                                      l2065 1288  
                                    l2057 1278                                      l2129 17AC  
                                    l2137 16A8                                      l2083 12FC  
                                    l2075 12D2                                      l2067 128A  
                                    l2091 132E                                      l2139 16C8  
                                    l2085 1308                                      l2077 12D8  
                                    l2069 129A                                      l2421 1706  
                                    l2087 1314                                      l2079 12E4  
                                    l2095 1588                                      l2423 171A  
                                    l2089 1320                                      l2097 1598  
                                    l2417 1702                                      l2099 15A0  
                                    l2419 1702                                      l1911 1046  
                                    l1913 104E                                      l1921 1134  
                                    l1915 10A4                                      l1907 1012  
                                    l1931 1640                                      l1909 1026  
                                    l1941 1788                                      l1933 1650  
                                    l1919 10F4                                      l1943 1788  
                                    l1935 1662                                      l1951 1764  
                                    l2495 148A                                      l2497 122E  
                                    l1961 152A                                      l1945 1794  
                                    l1937 1676                                      l1929 1640  
                                    l1953 1764                                      l2499 111E  
                                    l1891 1174                                      l1963 153A  
                                    l1947 179A                                      l1955 1770  
                                    l1893 11CA                                      l1885 1138  
                                    l1965 155A                                      l1973 15E4  
                                    l1957 1776                                      l1887 114C  
                                    l1967 1562                                      l1975 15F4  
                                    l1983 14B4                                      l1897 121A  
                                    l1889 116C                                      l1969 1584  
                                    l1977 15FC                                      l1985 14C8  
                                    l1899 1244                                      l1979 163C  
                                    l1995 14E0                                      l1987 14D0  
                                    l1997 150A                                      l1989 14DC  
                                    l1999 150C                                      u1000 153A  
                                    u1001 1536                                      u1010 155A  
                                    u1011 1556                                      u1020 15F4  
                                    u1100 1598                                      u1021 15F0  
                                    u1101 1594                                      u1030 14C8  
                                    u1110 16A0                                      u1031 14C4  
                                    u1111 169C                                      u1050 151C  
                                    u1051 1518                                      u1060 1346  
                                    u1044 14FA                                      u1061 1342  
                                    u1045 14F6                                      u1070 1384  
                                    u1071 1380                                      u1080 125C  
      lcd_8bit_send_command@l_pin_counter 003E                                      u1081 1258  
                                    u1090 129A                                      u1091 1296  
                                    _LATA 0F89                                      _LATB 0F8A  
                                    _LATC 0F8B                                      _LATD 0F8C  
                                    _LATE 0F8D                                      u1507 12BC  
                                    u1517 12D4                                      u1527 138A  
                                    u1537 13A6                                      u1547 13BE  
                                    u1497 12A0                   ??_application_intialize 0043  
           ??_lcd_4bit_send_enable_signal 0038                                      _main 1702  
                                    fsr2h 0FDA                                      indf2 0FDF  
                                    fsr1l 0FE1                                      fsr2l 0FD9  
                                    prodl 0FF3                                      start 0000  
           __end_of_lcd_8bit_send_command 152A                              ___param_bank 0000  
                   _lcd_4bit_send_command 15E4                      _gpio_pin_write_logic 1138  
                                   ?_main 002F                       relay_turn_off@F2895 0048  
                                   _PORTA 0F80                                     _PORTB 0F81  
                                   _PORTC 0F82                                     _PORTD 0F83  
                                   _PORTE 0F84                                     _TRISA 0F92  
                                   _TRISB 0F93                                     _TRISC 0F94  
                                   _TRISD 0F95                                     _TRISE 0F96  
               lcd_4bit_set_cursor@coulmn 003F                                     _lcd_1 0029  
                                   _lcd_2 001F                                     tablat 0FF5  
                                   status 0FD8                           __initialization 16CC  
                            __end_of_main 1736                     ?_gpio_pin_write_logic 002F  
                           _lat_registers 000B                                    ??_main 0048  
                           __activetblptr 0002                          led_turn_on@F2896 004D  
                  ?_lcd_4bit_send_command 003A                                    clear_0 16F2  
                                  isa$std 0001   gpio_pin_direction_intialize@_pin_config 002F  
                            __pdataCOMRAM 0001                              __mediumconst 0000  
                                  tblptrh 0FF7                                    tblptrl 0FF6  
                                  tblptru 0FF8                lcd_8bit_send_command@_lcd_ 0039  
                lcd_4bit_set_cursor@_lcd_ 003D                                __accesstop 0080  
                 __end_of__initialization 16F8                             ___rparam_used 0001  
                        ??_lcd_send_4bits 0039                   _lcd_4bit_send_char_data 1588  
                  ??_gpio_pin_write_logic 0031                            __pcstackCOMRAM 002F  
                lcd_4bit_send_command@ret 003C                  lcd_8bit_initialize@_lcd_ 003F  
           __end_of_application_intialize 17BE                    lcd_8bit_initialize@ret 0042  
                       led_turn_off@F2901 004C                      led_turn_toggle@F2906 004B  
     __end_of_lcd_8bit_send_enable_signal 1788               _lcd_8bit_send_enable_signal 1764  
                              _btn_values 1001            lcd_8bit_send_enable_signal@ret 0038  
                          _tris_registers 0015                 ??_lcd_4bit_send_char_data 003C  
           ??_lcd_8bit_send_enable_signal 0038    lcd_8bit_initialize@l_data_pins_counter 0041  
  lcd_4bit_initialize@l_data_pins_counter 003F                                   __Hparam 0000  
                                 __Lparam 0000                     _lcd_8bit_send_command 14B4  
                            __psmallconst 1000                __end_of_gpio_pin_intialize 1588  
                                 __pcinit 16CC                                   __ramtop 1000  
                                 __ptext0 1702                                   __ptext1 1690  
                                 __ptext2 141C                                   __ptext3 1588  
                                 __ptext4 17AC                                   __ptext5 1248  
                                 __ptext6 14B4                                   __ptext7 1764  
                                 __ptext8 1332                                   __ptext9 15E4  
     lcd_4bit_send_char_data_position@ret 0047       lcd_4bit_send_char_data_position@row 0044  
                    end_of_initialization 16F8                         lcd_send_4bits@ret 0039  
                           __Lmediumconst 0000                   ??_lcd_4bit_send_command 003C  
                   gpio_pin_intialize@ret 0039                                   postdec1 0FE5  
                                 postdec2 0FDD                                   postinc0 0FEE  
                                 postinc2 0FDE                       _lcd_4bit_initialize 1332  
         __end_of_lcd_4bit_send_char_data 15E4             gpio_pin_intialize@_pin_config 0037  
              lcd_4bit_send_char_data@ret 003C      __end_of_gpio_pin_direction_intialize 1138  
            _gpio_pin_direction_intialize 1012                      ?_lcd_4bit_initialize 003D  
        lcd_8bit_send_enable_signal@_lcd_ 0037  __end_of_lcd_4bit_send_char_data_position 16CC  
      ??_lcd_4bit_send_char_data_position 0047         ?_lcd_4bit_send_char_data_position 0043  
        _lcd_4bit_send_char_data_position 1690                       _lcd_4bit_set_cursor 141C  
                  ?_lcd_8bit_send_command 0039                        relay_turn_on@F2890 0049  
                           __pidataCOMRAM 1736                       start_initialization 16CC  
            ?_lcd_4bit_send_enable_signal 0037                      ?_lcd_4bit_set_cursor 003D  
                     _lcd_8bit_initialize 1248             ?_gpio_pin_direction_intialize 002F  
                   ??_lcd_4bit_initialize 003E                      ?_lcd_8bit_initialize 003F  
            lcd_4bit_send_command@command 003B                  lcd_8bit_send_command@ret 003D  
                             __pbssCOMRAM 0048                     ??_lcd_4bit_set_cursor 0040  
         gpio_pin_direction_intialize@ret 0035                     ??_lcd_8bit_initialize 0040  
                   _application_intialize 17AC          lcd_4bit_send_enable_signal@_lcd_ 0037  
         gpio_pin_write_logic@_pin_config 002F                 gpio_pin_write_logic@logic 0030  
                             __smallconst 1000     lcd_4bit_send_char_data_position@_lcd_ 0043  
                      _gpio_pin_intialize 152A            ??_gpio_pin_direction_intialize 0030  
                     ?_gpio_pin_intialize 0037             __end_of_lcd_4bit_send_command 1640  
                    ??_gpio_pin_intialize 0038                       lcd_send_4bits@_lcd_ 0037  
                 gpio_pin_write_logic@ret 0036                  ?_lcd_4bit_send_char_data 003A  
                               copy_data0 16E0                   ??_lcd_8bit_send_command 003B  
                  ?_application_intialize 002F                                  __Hrparam 0000  
                                __Lrparam 0000                    lcd_4bit_set_cursor@ret 0042  
                  lcd_4bit_set_cursor@row 003E                        __end_of_btn_values 1011  
                                __ptext10 1640                                  __ptext11 1788  
                                __ptext12 152A                                  __ptext13 1138  
                                __ptext14 1012      lcd_4bit_send_char_data_position@data 0046  
                                isa$xinst 0000                            _lcd_send_4bits 1640  
             __end_of_lcd_4bit_initialize 141C                lcd_4bit_send_command@_lcd_ 003A  
            __end_of_gpio_pin_write_logic 1248              ?_lcd_8bit_send_enable_signal 0037  
          lcd_4bit_send_enable_signal@ret 0038                    __end_of_lcd_send_4bits 1690  
             __end_of_lcd_4bit_set_cursor 14B4                            _port_registers 0001  
            lcd_4bit_send_char_data@_lcd_ 003A               __end_of_lcd_8bit_initialize 1332  
                lcd_4bit_initialize@_lcd_ 003D              lcd_8bit_send_command@command 003A  
             lcd_4bit_send_char_data@data 003B    lcd_4bit_send_char_data_position@column 0045  
                  lcd_4bit_initialize@ret 0040  
