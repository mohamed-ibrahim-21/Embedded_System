

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Nov 15 14:46:39 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    40   000000                     
    41                           ; Generated 23/03/2023 GMT
    42                           ; 
    43                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F4620 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75   000000                     
    76                           	psect	idataCOMRAM
    77   001CE2                     __pidataCOMRAM:
    78                           	callstack 0
    79                           
    80                           ;initializer for _port_registers
    81   001CE2  80                 	db	128
    82   001CE3  0F                 	db	15
    83   001CE4  81                 	db	129
    84   001CE5  0F                 	db	15
    85   001CE6  82                 	db	130
    86   001CE7  0F                 	db	15
    87   001CE8  83                 	db	131
    88   001CE9  0F                 	db	15
    89   001CEA  84                 	db	132
    90   001CEB  0F                 	db	15
    91                           
    92                           ;initializer for _lat_registers
    93   001CEC  89                 	db	137
    94   001CED  0F                 	db	15
    95   001CEE  8A                 	db	138
    96   001CEF  0F                 	db	15
    97   001CF0  8B                 	db	139
    98   001CF1  0F                 	db	15
    99   001CF2  8C                 	db	140
   100   001CF3  0F                 	db	15
   101   001CF4  8D                 	db	141
   102   001CF5  0F                 	db	15
   103                           
   104                           ;initializer for _tris_registers
   105   001CF6  92                 	db	146
   106   001CF7  0F                 	db	15
   107   001CF8  93                 	db	147
   108   001CF9  0F                 	db	15
   109   001CFA  94                 	db	148
   110   001CFB  0F                 	db	15
   111   001CFC  95                 	db	149
   112   001CFD  0F                 	db	15
   113   001CFE  96                 	db	150
   114   001CFF  0F                 	db	15
   115                           
   116                           ;initializer for _lcd_2
   117   001D00  32                 	db	50
   118   001D01  3A                 	db	58
   119   001D02  03                 	db	3
   120   001D03  0B                 	db	11
   121   001D04  13                 	db	19
   122   001D05  1B                 	db	27
   123   001D06  23                 	db	35
   124   001D07  2B                 	db	43
   125   001D08  33                 	db	51
   126   001D09  3B                 	db	59
   127                           
   128                           ;initializer for _lcd_1
   129   001D0A  02                 	db	2
   130   001D0B  0A                 	db	10
   131   001D0C  12                 	db	18
   132   001D0D  1A                 	db	26
   133   001D0E  22                 	db	34
   134   001D0F  2A                 	db	42
   135                           
   136                           	psect	smallconst
   137   001000                     __psmallconst:
   138                           	callstack 0
   139   001000  00                 	db	0
   140   001001                     _btn_values:
   141                           	callstack 0
   142   001001  37                 	db	55
   143   001002  38                 	db	56
   144   001003  39                 	db	57
   145   001004  2F                 	db	47
   146   001005  34                 	db	52
   147   001006  35                 	db	53
   148   001007  36                 	db	54
   149   001008  2A                 	db	42
   150   001009  31                 	db	49
   151   00100A  32                 	db	50
   152   00100B  33                 	db	51
   153   00100C  2D                 	db	45
   154   00100D  23                 	db	35
   155   00100E  30                 	db	48
   156   00100F  3D                 	db	61
   157   001010  2B                 	db	43
   158   001011                     __end_of_btn_values:
   159                           	callstack 0
   160   000000                     _PORTE	set	3972
   161   000000                     _PORTD	set	3971
   162   000000                     _PORTC	set	3970
   163   000000                     _PORTB	set	3969
   164   000000                     _PORTA	set	3968
   165   000000                     _LATA	set	3977
   166   000000                     _TRISA	set	3986
   167   000000                     _TRISE	set	3990
   168   000000                     _TRISD	set	3989
   169   000000                     _TRISC	set	3988
   170   000000                     _TRISB	set	3987
   171   000000                     _LATE	set	3981
   172   000000                     _LATD	set	3980
   173   000000                     _LATC	set	3979
   174   000000                     _LATB	set	3978
   175   001011                     STR_4:
   176   001011  63                 	db	99	;'c'
   177   001012  6F                 	db	111	;'o'
   178   001013  75                 	db	117	;'u'
   179   001014  6E                 	db	110	;'n'
   180   001015  74                 	db	116	;'t'
   181   001016  65                 	db	101	;'e'
   182   001017  72                 	db	114	;'r'
   183   001018  3A                 	db	58	;':'
   184   001019  20                 	db	32
   185   00101A  00                 	db	0
   186   00101B                     STR_1:
   187   00101B  25                 	db	37
   188   00101C  69                 	db	105	;'i'
   189   00101D  00                 	db	0
   190   00101E  00                 	db	0	; dummy byte at the end
   191   000000                     
   192                           ; #config settings
   193                           
   194                           	psect	cinit
   195   001BCA                     __pcinit:
   196                           	callstack 0
   197   001BCA                     start_initialization:
   198                           	callstack 0
   199   001BCA                     __initialization:
   200                           	callstack 0
   201                           
   202                           ; Initialize objects allocated to COMRAM (46 bytes)
   203                           ; load TBLPTR registers with __pidataCOMRAM
   204   001BCA  0EE2               	movlw	low __pidataCOMRAM
   205   001BCC  6EF6               	movwf	tblptrl,c
   206   001BCE  0E1C               	movlw	high __pidataCOMRAM
   207   001BD0  6EF7               	movwf	tblptrh,c
   208   001BD2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   209   001BD4  6EF8               	movwf	tblptru,c
   210   001BD6  EE00  F031         	lfsr	0,__pdataCOMRAM
   211   001BDA  EE10 F02E          	lfsr	1,46
   212   001BDE                     copy_data0:
   213   001BDE  0009               	tblrd		*+
   214   001BE0  CFF5 FFEE          	movff	tablat,postinc0
   215   001BE4  50E5               	movf	postdec1,w,c
   216   001BE6  50E1               	movf	fsr1l,w,c
   217   001BE8  E1FA               	bnz	copy_data0
   218                           
   219                           ; Clear objects allocated to BANK0 (32 bytes)
   220   001BEA  EE00  F080         	lfsr	0,__pbssBANK0
   221   001BEE  0E20               	movlw	32
   222   001BF0                     clear_0:
   223   001BF0  6AEE               	clrf	postinc0,c
   224   001BF2  06E8               	decf	wreg,f,c
   225   001BF4  E1FD               	bnz	clear_0
   226                           
   227                           ; Clear objects allocated to COMRAM (17 bytes)
   228   001BF6  EE00  F05F         	lfsr	0,__pbssCOMRAM
   229   001BFA  0E11               	movlw	17
   230   001BFC                     clear_1:
   231   001BFC  6AEE               	clrf	postinc0,c
   232   001BFE  06E8               	decf	wreg,f,c
   233   001C00  E1FD               	bnz	clear_1
   234   001C02                     end_of_initialization:
   235                           	callstack 0
   236   001C02                     __end_of__initialization:
   237                           	callstack 0
   238   001C02  0E00               	movlw	low (__Lmediumconst shr (0+16))
   239   001C04  6EF8               	movwf	tblptru,c
   240   001C06  0100               	movlb	0
   241   001C08  EF6A  F00D         	goto	_main	;jump to C main() function
   242                           
   243                           	psect	bssCOMRAM
   244   00005F                     __pbssCOMRAM:
   245                           	callstack 0
   246   00005F                     _width:
   247                           	callstack 0
   248   00005F                     	ds	2
   249   000061                     _prec:
   250                           	callstack 0
   251   000061                     	ds	2
   252   000063                     _flags:
   253                           	callstack 0
   254   000063                     	ds	1
   255   000064                     _lcd_counter:
   256                           	callstack 0
   257   000064                     	ds	1
   258   000065                     relay_turn_off@F3062:
   259                           	callstack 0
   260   000065                     	ds	1
   261   000066                     relay_turn_on@F3057:
   262                           	callstack 0
   263   000066                     	ds	1
   264   000067                     relay_initialize@F3052:
   265                           	callstack 0
   266   000067                     	ds	1
   267   000068                     led_turn_toggle@F3073:
   268                           	callstack 0
   269   000068                     	ds	1
   270   000069                     led_turn_off@F3068:
   271                           	callstack 0
   272   000069                     	ds	1
   273   00006A                     led_turn_on@F3063:
   274                           	callstack 0
   275   00006A                     	ds	1
   276   00006B                     led_initialize@F3058:
   277                           	callstack 0
   278   00006B                     	ds	1
   279   00006C                     _lcd_counter_text:
   280                           	callstack 0
   281   00006C                     	ds	4
   282                           
   283                           	psect	dataCOMRAM
   284   000031                     __pdataCOMRAM:
   285                           	callstack 0
   286   000031                     _port_registers:
   287                           	callstack 0
   288   000031                     	ds	10
   289   00003B                     _lat_registers:
   290                           	callstack 0
   291   00003B                     	ds	10
   292   000045                     _tris_registers:
   293                           	callstack 0
   294   000045                     	ds	10
   295   00004F                     _lcd_2:
   296                           	callstack 0
   297   00004F                     	ds	10
   298   000059                     _lcd_1:
   299                           	callstack 0
   300   000059                     	ds	6
   301                           
   302                           	psect	bssBANK0
   303   000080                     __pbssBANK0:
   304                           	callstack 0
   305   000080                     _dbuf:
   306                           	callstack 0
   307   000080                     	ds	32
   308                           
   309                           	psect	cstackCOMRAM
   310   000001                     __pcstackCOMRAM:
   311                           	callstack 0
   312   000001                     ?___awdiv:
   313                           	callstack 0
   314   000001                     ?___awmod:
   315                           	callstack 0
   316   000001                     gpio_pin_direction_intialize@_pin_config:
   317                           	callstack 0
   318   000001                     gpio_pin_write_logic@_pin_config:
   319                           	callstack 0
   320   000001                     memset@dest:
   321                           	callstack 0
   322   000001                     ___awdiv@dividend:
   323                           	callstack 0
   324   000001                     ___awmod@dividend:
   325                           	callstack 0
   326   000001                     fputc@c:
   327                           	callstack 0
   328                           
   329                           ; 2 bytes @ 0x0
   330   000001                     	ds	1
   331   000002                     ??_gpio_pin_direction_intialize:
   332   000002                     gpio_pin_write_logic@logic:
   333                           	callstack 0
   334   000002                     memset@c:
   335                           	callstack 0
   336                           
   337                           ; 2 bytes @ 0x1
   338   000002                     	ds	1
   339   000003                     ??_gpio_pin_write_logic:
   340   000003                     fputc@fp:
   341                           	callstack 0
   342   000003                     ___awdiv@divisor:
   343                           	callstack 0
   344   000003                     ___awmod@divisor:
   345                           	callstack 0
   346                           
   347                           ; 2 bytes @ 0x2
   348   000003                     	ds	1
   349   000004                     ??_fputc:
   350   000004                     memset@n:
   351                           	callstack 0
   352                           
   353                           ; 2 bytes @ 0x3
   354   000004                     	ds	1
   355   000005                     ___awdiv@counter:
   356                           	callstack 0
   357   000005                     ___awmod@counter:
   358                           	callstack 0
   359                           
   360                           ; 1 bytes @ 0x4
   361   000005                     	ds	1
   362   000006                     ___awdiv@sign:
   363                           	callstack 0
   364   000006                     ___awmod@sign:
   365                           	callstack 0
   366   000006                     memset@p:
   367                           	callstack 0
   368                           
   369                           ; 1 bytes @ 0x5
   370   000006                     	ds	1
   371   000007                     ?_abs:
   372                           	callstack 0
   373   000007                     gpio_pin_direction_intialize@ret:
   374                           	callstack 0
   375   000007                     ___awdiv@quotient:
   376                           	callstack 0
   377   000007                     abs@a:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0x6
   381   000007                     	ds	1
   382   000008                     gpio_pin_write_logic@ret:
   383                           	callstack 0
   384                           
   385                           ; 1 bytes @ 0x7
   386   000008                     	ds	1
   387   000009                     ??_abs:
   388   000009                     lcd_send_4bits@_lcd_:
   389                           	callstack 0
   390   000009                     lcd_4bit_send_enable_signal@_lcd_:
   391                           	callstack 0
   392   000009                     lcd_8bit_send_enable_signal@_lcd_:
   393                           	callstack 0
   394   000009                     gpio_pin_intialize@_pin_config:
   395                           	callstack 0
   396                           
   397                           ; 1 bytes @ 0x8
   398   000009                     	ds	1
   399   00000A                     ??_gpio_pin_intialize:
   400   00000A                     lcd_send_4bits@_data_command:
   401                           	callstack 0
   402   00000A                     lcd_4bit_send_enable_signal@ret:
   403                           	callstack 0
   404   00000A                     lcd_8bit_send_enable_signal@ret:
   405                           	callstack 0
   406                           
   407                           ; 1 bytes @ 0x9
   408   00000A                     	ds	1
   409   00000B                     lcd_8bit_send_command@_lcd_:
   410                           	callstack 0
   411   00000B                     lcd_8bit_send_char_data@_lcd_:
   412                           	callstack 0
   413   00000B                     lcd_send_4bits@ret:
   414                           	callstack 0
   415   00000B                     gpio_pin_intialize@ret:
   416                           	callstack 0
   417   00000B                     vfpfcnvrt@fp:
   418                           	callstack 0
   419                           
   420                           ; 1 bytes @ 0xA
   421   00000B                     	ds	1
   422   00000C                     lcd_4bit_send_command@_lcd_:
   423                           	callstack 0
   424   00000C                     lcd_8bit_send_command@command:
   425                           	callstack 0
   426   00000C                     lcd_8bit_send_char_data@data:
   427                           	callstack 0
   428   00000C                     vfpfcnvrt@fmt:
   429                           	callstack 0
   430                           
   431                           ; 1 bytes @ 0xB
   432   00000C                     	ds	1
   433   00000D                     ??_lcd_8bit_send_command:
   434   00000D                     ??_lcd_8bit_send_char_data:
   435   00000D                     lcd_4bit_send_command@command:
   436                           	callstack 0
   437   00000D                     vfpfcnvrt@ap:
   438                           	callstack 0
   439                           
   440                           ; 1 bytes @ 0xC
   441   00000D                     	ds	1
   442   00000E                     ??_vfpfcnvrt:
   443   00000E                     lcd_4bit_send_command@ret:
   444                           	callstack 0
   445                           
   446                           ; 1 bytes @ 0xD
   447   00000E                     	ds	1
   448   00000F                     lcd_4bit_initialize@_lcd_:
   449                           	callstack 0
   450   00000F                     lcd_8bit_send_command@ret:
   451                           	callstack 0
   452   00000F                     lcd_8bit_send_char_data@ret:
   453                           	callstack 0
   454   00000F                     vfpfcnvrt@done:
   455                           	callstack 0
   456                           
   457                           ; 1 bytes @ 0xE
   458   00000F                     	ds	1
   459   000010                     ??_lcd_4bit_initialize:
   460   000010                     lcd_8bit_send_command@l_pin_counter:
   461                           	callstack 0
   462   000010                     lcd_8bit_send_char_data@l_pin_counter:
   463                           	callstack 0
   464   000010                     vfpfcnvrt@cp:
   465                           	callstack 0
   466                           
   467                           ; 1 bytes @ 0xF
   468   000010                     	ds	1
   469   000011                     lcd_4bit_initialize@l_data_pins_counter:
   470                           	callstack 0
   471   000011                     lcd_8bit_initialize@_lcd_:
   472                           	callstack 0
   473   000011                     lcd_8bit_set_cursor@_lcd_:
   474                           	callstack 0
   475   000011                     vfpfcnvrt@convarg:
   476                           	callstack 0
   477                           
   478                           ; 4 bytes @ 0x10
   479   000011                     	ds	1
   480   000012                     ??_lcd_8bit_initialize:
   481   000012                     lcd_4bit_initialize@ret:
   482                           	callstack 0
   483   000012                     lcd_8bit_set_cursor@row:
   484                           	callstack 0
   485                           
   486                           ; 1 bytes @ 0x11
   487   000012                     	ds	1
   488   000013                     lcd_8bit_initialize@l_data_pins_counter:
   489                           	callstack 0
   490   000013                     lcd_8bit_set_cursor@coulmn:
   491                           	callstack 0
   492                           
   493                           ; 1 bytes @ 0x12
   494   000013                     	ds	1
   495   000014                     ??_lcd_8bit_set_cursor:
   496   000014                     lcd_8bit_initialize@ret:
   497                           	callstack 0
   498                           
   499                           ; 1 bytes @ 0x13
   500   000014                     	ds	1
   501   000015                     vfpfcnvrt@c:
   502                           	callstack 0
   503                           
   504                           ; 1 bytes @ 0x14
   505   000015                     	ds	1
   506   000016                     ?_vfprintf:
   507                           	callstack 0
   508   000016                     lcd_8bit_set_cursor@ret:
   509                           	callstack 0
   510   000016                     vfprintf@fp:
   511                           	callstack 0
   512                           
   513                           ; 1 bytes @ 0x15
   514   000016                     	ds	1
   515   000017                     lcd_8bit_send_string_position@_lcd_:
   516                           	callstack 0
   517   000017                     vfprintf@fmt:
   518                           	callstack 0
   519                           
   520                           ; 1 bytes @ 0x16
   521   000017                     	ds	1
   522   000018                     lcd_8bit_send_string_position@row:
   523                           	callstack 0
   524   000018                     vfprintf@ap:
   525                           	callstack 0
   526                           
   527                           ; 1 bytes @ 0x17
   528   000018                     	ds	1
   529   000019                     lcd_8bit_send_string_position@column:
   530                           	callstack 0
   531   000019                     vfprintf@cfmt:
   532                           	callstack 0
   533                           
   534                           ; 1 bytes @ 0x18
   535   000019                     	ds	1
   536   00001A                     ?_sprintf:
   537                           	callstack 0
   538   00001A                     sprintf@s:
   539                           	callstack 0
   540   00001A                     lcd_8bit_send_string_position@str:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x19
   544   00001A                     	ds	1
   545   00001B                     sprintf@fmt:
   546                           	callstack 0
   547                           
   548                           ; 1 bytes @ 0x1A
   549   00001B                     	ds	1
   550   00001C                     lcd_8bit_send_string_position@ret:
   551                           	callstack 0
   552                           
   553                           ; 1 bytes @ 0x1B
   554   00001C                     	ds	4
   555   000020                     sprintf@ap:
   556                           	callstack 0
   557                           
   558                           ; 1 bytes @ 0x1F
   559   000020                     	ds	1
   560   000021                     sprintf@f:
   561                           	callstack 0
   562                           
   563                           ; 12 bytes @ 0x20
   564   000021                     	ds	12
   565   00002D                     convert_byte_to_string@str:
   566                           	callstack 0
   567                           
   568                           ; 1 bytes @ 0x2C
   569   00002D                     	ds	1
   570   00002E                     convert_byte_to_string@value:
   571                           	callstack 0
   572                           
   573                           ; 1 bytes @ 0x2D
   574   00002E                     	ds	1
   575   00002F                     convert_byte_to_string@ret:
   576                           	callstack 0
   577                           
   578                           ; 1 bytes @ 0x2E
   579   00002F                     	ds	1
   580   000030                     ??_main:
   581                           
   582                           ; 1 bytes @ 0x2F
   583   000030                     	ds	1
   584                           
   585 ;;
   586 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   587 ;;
   588 ;; *************** function _main *****************
   589 ;; Defined at:
   590 ;;		line 99 in file "application.c"
   591 ;; Parameters:    Size  Location     Type
   592 ;;		None
   593 ;; Auto vars:     Size  Location     Type
   594 ;;  ret             1    0        unsigned char 
   595 ;; Return value:  Size  Location     Type
   596 ;;                  2  450[None  ] int 
   597 ;; Registers used:
   598 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   599 ;; Tracked objects:
   600 ;;		On entry : 0/0
   601 ;;		On exit  : 0/0
   602 ;;		Unchanged: 0/0
   603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   606 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   607 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   608 ;;Total ram usage:        1 bytes
   609 ;; Hardware stack levels required when called: 6
   610 ;; This function calls:
   611 ;;		_application_intialize
   612 ;;		_convert_byte_to_string
   613 ;;		_lcd_8bit_send_string_position
   614 ;; This function is called by:
   615 ;;		Startup code after reset
   616 ;; This function uses a non-reentrant model
   617 ;;
   618                           
   619                           	psect	text0
   620   001AD4                     __ptext0:
   621                           	callstack 0
   622   001AD4                     _main:
   623                           	callstack 25
   624   001AD4                     
   625                           ;application.c: 101:     application_intialize();
   626   001AD4  ECAC  F00E         	call	_application_intialize	;wreg free
   627   001AD8  0E4F               	movlw	low _lcd_2
   628   001ADA  6E17               	movwf	lcd_8bit_send_string_position@_lcd_^0,c
   629   001ADC  0E01               	movlw	1
   630   001ADE  6E18               	movwf	lcd_8bit_send_string_position@row^0,c
   631   001AE0  0E01               	movlw	1
   632   001AE2  6E19               	movwf	lcd_8bit_send_string_position@column^0,c
   633   001AE4  0E11               	movlw	low STR_4
   634   001AE6  6E1A               	movwf	lcd_8bit_send_string_position@str^0,c
   635   001AE8  501A               	movf	lcd_8bit_send_string_position@str^0,w,c
   636   001AEA  A4D8               	btfss	status,2,c
   637   001AEC  0E10               	movlw	high __smallconst
   638   001AEE  6E1B               	movwf	(lcd_8bit_send_string_position@str+1)^0,c
   639   001AF0  EC4C  F00C         	call	_lcd_8bit_send_string_position	;wreg free
   640   001AF4                     l3074:
   641   001AF4  0E6C               	movlw	low _lcd_counter_text
   642   001AF6  6E2D               	movwf	convert_byte_to_string@str^0,c
   643   001AF8  5064               	movf	_lcd_counter^0,w,c
   644   001AFA  ECBF  F00D         	call	_convert_byte_to_string
   645   001AFE  0E4F               	movlw	low _lcd_2
   646   001B00  6E17               	movwf	lcd_8bit_send_string_position@_lcd_^0,c
   647   001B02  0E01               	movlw	1
   648   001B04  6E18               	movwf	lcd_8bit_send_string_position@row^0,c
   649   001B06  0E0A               	movlw	10
   650   001B08  6E19               	movwf	lcd_8bit_send_string_position@column^0,c
   651   001B0A  0E6C               	movlw	low _lcd_counter_text
   652   001B0C  6E1A               	movwf	lcd_8bit_send_string_position@str^0,c
   653   001B0E  6A1B               	clrf	(lcd_8bit_send_string_position@str+1)^0,c
   654   001B10  EC4C  F00C         	call	_lcd_8bit_send_string_position	;wreg free
   655   001B14                     
   656                           ;application.c: 107:         lcd_counter++;
   657   001B14  2A64               	incf	_lcd_counter^0,f,c
   658   001B16                     
   659                           ;application.c: 108:         _delay((unsigned long)((50)*(4000000UL/4000.0)));
   660   001B16  0E41               	movlw	65
   661   001B18  6E30               	movwf	??_main^0,c
   662   001B1A  0EEE               	movlw	238
   663   001B1C                     u2237:
   664   001B1C  2EE8               	decfsz	wreg,f,c
   665   001B1E  D7FE               	bra	u2237
   666   001B20  2E30               	decfsz	??_main^0,f,c
   667   001B22  D7FC               	bra	u2237
   668   001B24  D000               	nop2	
   669   001B26  EF7A  F00D         	goto	l3074
   670   001B2A  EF00  F000         	goto	start
   671   001B2E                     __end_of_main:
   672                           	callstack 0
   673                           
   674 ;; *************** function _lcd_8bit_send_string_position *****************
   675 ;; Defined at:
   676 ;;		line 357 in file "ECU_Layer/LCD/ecu_lcd.c"
   677 ;; Parameters:    Size  Location     Type
   678 ;;  _lcd_           1   22[COMRAM] PTR const struct .
   679 ;;		 -> lcd_2(10), 
   680 ;;  row             1   23[COMRAM] unsigned char 
   681 ;;  column          1   24[COMRAM] unsigned char 
   682 ;;  str             2   25[COMRAM] PTR unsigned char 
   683 ;;		 -> lcd_counter_text(4), STR_4(10), 
   684 ;; Auto vars:     Size  Location     Type
   685 ;;  ret             1   27[COMRAM] unsigned char 
   686 ;; Return value:  Size  Location     Type
   687 ;;                  1    wreg      unsigned char 
   688 ;; Registers used:
   689 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   690 ;; Tracked objects:
   691 ;;		On entry : 0/0
   692 ;;		On exit  : 0/0
   693 ;;		Unchanged: 0/0
   694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   695 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   696 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   698 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   699 ;;Total ram usage:        6 bytes
   700 ;; Hardware stack levels used: 1
   701 ;; Hardware stack levels required when called: 4
   702 ;; This function calls:
   703 ;;		_lcd_8bit_send_char_data
   704 ;;		_lcd_8bit_set_cursor
   705 ;; This function is called by:
   706 ;;		_main
   707 ;; This function uses a non-reentrant model
   708 ;;
   709                           
   710                           	psect	text1
   711   001898                     __ptext1:
   712                           	callstack 0
   713   001898                     _lcd_8bit_send_string_position:
   714                           	callstack 26
   715   001898                     
   716                           ;ECU_Layer/LCD/ecu_lcd.c: 359:     if(((void*)0) == _lcd_){
   717   001898  5017               	movf	lcd_8bit_send_string_position@_lcd_^0,w,c
   718   00189A  A4D8               	btfss	status,2,c
   719   00189C  EF52  F00C         	goto	u1791
   720   0018A0  EF54  F00C         	goto	u1790
   721   0018A4                     u1791:
   722   0018A4  EF58  F00C         	goto	l2684
   723   0018A8                     u1790:
   724   0018A8                     
   725                           ;ECU_Layer/LCD/ecu_lcd.c: 360:         ret = (Std_ReturnType)0x00;
   726   0018A8  0E00               	movlw	0
   727   0018AA  6E1C               	movwf	lcd_8bit_send_string_position@ret^0,c
   728                           
   729                           ;ECU_Layer/LCD/ecu_lcd.c: 361:     }
   730   0018AC  EF95  F00C         	goto	l2692
   731   0018B0                     l2684:
   732                           
   733                           ;ECU_Layer/LCD/ecu_lcd.c: 363:         ret = lcd_8bit_set_cursor(_lcd_, row, column);
   734   0018B0  C017  F011         	movff	lcd_8bit_send_string_position@_lcd_,lcd_8bit_set_cursor@_lcd_
   735   0018B4  C018  F012         	movff	lcd_8bit_send_string_position@row,lcd_8bit_set_cursor@row
   736   0018B8  C019  F013         	movff	lcd_8bit_send_string_position@column,lcd_8bit_set_cursor@coulmn
   737   0018BC  EC00  F00C         	call	_lcd_8bit_set_cursor	;wreg free
   738   0018C0  6E1C               	movwf	lcd_8bit_send_string_position@ret^0,c
   739                           
   740                           ;ECU_Layer/LCD/ecu_lcd.c: 364:         while(*str){
   741   0018C2  EF7C  F00C         	goto	l2690
   742   0018C6                     l2686:
   743                           
   744                           ;ECU_Layer/LCD/ecu_lcd.c: 365:             ret = lcd_8bit_send_char_data(_lcd_, *str++);
   745   0018C6  C017  F00B         	movff	lcd_8bit_send_string_position@_lcd_,lcd_8bit_send_char_data@_lcd_
   746   0018CA  C01A  FFF6         	movff	lcd_8bit_send_string_position@str,tblptrl
   747   0018CE  C01B  FFF7         	movff	lcd_8bit_send_string_position@str+1,tblptrh
   748   0018D2  0E00               	movlw	low (__smallconst shr (0+16))
   749   0018D4  6EF8               	movwf	tblptru,c
   750   0018D6  0E0F               	movlw	(high __ramtop+-1)
   751   0018D8  64F7               	cpfsgt	tblptrh,c
   752   0018DA  D003               	bra	u1807
   753   0018DC  0008               	tblrd		*
   754   0018DE  50F5               	movf	tablat,w,c
   755   0018E0  D005               	bra	u1800
   756   0018E2                     u1807:
   757   0018E2  CFF6 FFE9          	movff	tblptrl,fsr0l
   758   0018E6  CFF7 FFEA          	movff	tblptrh,fsr0h
   759   0018EA  50EF               	movf	indf0,w,c
   760   0018EC                     u1800:
   761   0018EC  6E0C               	movwf	lcd_8bit_send_char_data@data^0,c
   762   0018EE  EC97  F00C         	call	_lcd_8bit_send_char_data	;wreg free
   763   0018F2  6E1C               	movwf	lcd_8bit_send_string_position@ret^0,c
   764   0018F4  4A1A               	infsnz	lcd_8bit_send_string_position@str^0,f,c
   765   0018F6  2A1B               	incf	(lcd_8bit_send_string_position@str+1)^0,f,c
   766   0018F8                     l2690:
   767                           
   768                           ;ECU_Layer/LCD/ecu_lcd.c: 364:         while(*str){
   769   0018F8  C01A  FFF6         	movff	lcd_8bit_send_string_position@str,tblptrl
   770   0018FC  C01B  FFF7         	movff	lcd_8bit_send_string_position@str+1,tblptrh
   771   001900  0E00               	movlw	low (__smallconst shr (0+16))
   772   001902  6EF8               	movwf	tblptru,c
   773   001904  0E0F               	movlw	(high __ramtop+-1)
   774   001906  64F7               	cpfsgt	tblptrh,c
   775   001908  D003               	bra	u1817
   776   00190A  0008               	tblrd		*
   777   00190C  50F5               	movf	tablat,w,c
   778   00190E  D005               	bra	u1810
   779   001910                     u1817:
   780   001910  CFF6 FFE9          	movff	tblptrl,fsr0l
   781   001914  CFF7 FFEA          	movff	tblptrh,fsr0h
   782   001918  50EF               	movf	indf0,w,c
   783   00191A                     u1810:
   784   00191A  0900               	iorlw	0
   785   00191C  A4D8               	btfss	status,2,c
   786   00191E  EF93  F00C         	goto	u1821
   787   001922  EF95  F00C         	goto	u1820
   788   001926                     u1821:
   789   001926  EF63  F00C         	goto	l2686
   790   00192A                     u1820:
   791   00192A                     l2692:
   792                           
   793                           ;ECU_Layer/LCD/ecu_lcd.c: 368:     return ret;
   794   00192A  501C               	movf	lcd_8bit_send_string_position@ret^0,w,c
   795   00192C  0012               	return		;funcret
   796   00192E                     __end_of_lcd_8bit_send_string_position:
   797                           	callstack 0
   798                           
   799 ;; *************** function _lcd_8bit_set_cursor *****************
   800 ;; Defined at:
   801 ;;		line 458 in file "ECU_Layer/LCD/ecu_lcd.c"
   802 ;; Parameters:    Size  Location     Type
   803 ;;  _lcd_           1   16[COMRAM] PTR const struct .
   804 ;;		 -> lcd_2(10), 
   805 ;;  row             1   17[COMRAM] unsigned char 
   806 ;;  coulmn          1   18[COMRAM] unsigned char 
   807 ;; Auto vars:     Size  Location     Type
   808 ;;  ret             1   21[COMRAM] unsigned char 
   809 ;; Return value:  Size  Location     Type
   810 ;;                  1    wreg      unsigned char 
   811 ;; Registers used:
   812 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   813 ;; Tracked objects:
   814 ;;		On entry : 0/0
   815 ;;		On exit  : 0/0
   816 ;;		Unchanged: 0/0
   817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   818 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   819 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   820 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   821 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   822 ;;Total ram usage:        6 bytes
   823 ;; Hardware stack levels used: 1
   824 ;; Hardware stack levels required when called: 3
   825 ;; This function calls:
   826 ;;		_lcd_8bit_send_command
   827 ;; This function is called by:
   828 ;;		_lcd_8bit_send_string_position
   829 ;;		_lcd_8bit_send_char_data_position
   830 ;; This function uses a non-reentrant model
   831 ;;
   832                           
   833                           	psect	text2
   834   001800                     __ptext2:
   835                           	callstack 0
   836   001800                     _lcd_8bit_set_cursor:
   837                           	callstack 26
   838   001800                     
   839                           ;ECU_Layer/LCD/ecu_lcd.c: 459:     Std_ReturnType ret = (Std_ReturnType)0x01;
   840   001800  0E01               	movlw	1
   841   001802  6E16               	movwf	lcd_8bit_set_cursor@ret^0,c
   842   001804                     
   843                           ;ECU_Layer/LCD/ecu_lcd.c: 460:     coulmn--;
   844   001804  0613               	decf	lcd_8bit_set_cursor@coulmn^0,f,c
   845                           
   846                           ;ECU_Layer/LCD/ecu_lcd.c: 461:     switch (row){
   847   001806  EF2D  F00C         	goto	l2638
   848   00180A                     l2630:
   849   00180A  C011  F00B         	movff	lcd_8bit_set_cursor@_lcd_,lcd_8bit_send_command@_lcd_
   850   00180E  5013               	movf	lcd_8bit_set_cursor@coulmn^0,w,c
   851   001810  0F80               	addlw	128
   852   001812  6E0C               	movwf	lcd_8bit_send_command@command^0,c
   853   001814  ECD2  F00C         	call	_lcd_8bit_send_command	;wreg free
   854   001818  6E16               	movwf	lcd_8bit_set_cursor@ret^0,c
   855                           
   856                           ;ECU_Layer/LCD/ecu_lcd.c: 463:         break;
   857   00181A  EF4A  F00C         	goto	l2640
   858   00181E                     l2632:
   859   00181E  C011  F00B         	movff	lcd_8bit_set_cursor@_lcd_,lcd_8bit_send_command@_lcd_
   860   001822  5013               	movf	lcd_8bit_set_cursor@coulmn^0,w,c
   861   001824  0FC0               	addlw	192
   862   001826  6E0C               	movwf	lcd_8bit_send_command@command^0,c
   863   001828  ECD2  F00C         	call	_lcd_8bit_send_command	;wreg free
   864   00182C  6E16               	movwf	lcd_8bit_set_cursor@ret^0,c
   865                           
   866                           ;ECU_Layer/LCD/ecu_lcd.c: 465:         break;
   867   00182E  EF4A  F00C         	goto	l2640
   868   001832                     l2634:
   869   001832  C011  F00B         	movff	lcd_8bit_set_cursor@_lcd_,lcd_8bit_send_command@_lcd_
   870   001836  5013               	movf	lcd_8bit_set_cursor@coulmn^0,w,c
   871   001838  0F94               	addlw	148
   872   00183A  6E0C               	movwf	lcd_8bit_send_command@command^0,c
   873   00183C  ECD2  F00C         	call	_lcd_8bit_send_command	;wreg free
   874   001840  6E16               	movwf	lcd_8bit_set_cursor@ret^0,c
   875                           
   876                           ;ECU_Layer/LCD/ecu_lcd.c: 467:         break;
   877   001842  EF4A  F00C         	goto	l2640
   878   001846                     l2636:
   879   001846  C011  F00B         	movff	lcd_8bit_set_cursor@_lcd_,lcd_8bit_send_command@_lcd_
   880   00184A  5013               	movf	lcd_8bit_set_cursor@coulmn^0,w,c
   881   00184C  0FD4               	addlw	212
   882   00184E  6E0C               	movwf	lcd_8bit_send_command@command^0,c
   883   001850  ECD2  F00C         	call	_lcd_8bit_send_command	;wreg free
   884   001854  6E16               	movwf	lcd_8bit_set_cursor@ret^0,c
   885                           
   886                           ;ECU_Layer/LCD/ecu_lcd.c: 469:         break;
   887   001856  EF4A  F00C         	goto	l2640
   888   00185A                     l2638:
   889   00185A  5012               	movf	lcd_8bit_set_cursor@row^0,w,c
   890   00185C  6E14               	movwf	??_lcd_8bit_set_cursor^0,c
   891   00185E  6A15               	clrf	(??_lcd_8bit_set_cursor+1)^0,c
   892                           
   893                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   894                           ; Switch size 1, requested type "simple"
   895                           ; Number of cases is 1, Range of values is 0 to 0
   896                           ; switch strategies available:
   897                           ; Name         Instructions Cycles
   898                           ; simple_byte            4     3 (average)
   899                           ;	Chosen strategy is simple_byte
   900   001860  5015               	movf	(??_lcd_8bit_set_cursor+1)^0,w,c
   901   001862  0A00               	xorlw	0	; case 0
   902   001864  B4D8               	btfsc	status,2,c
   903   001866  EF37  F00C         	goto	l3094
   904   00186A  EF4A  F00C         	goto	l2640
   905   00186E                     l3094:
   906                           
   907                           ; Switch size 1, requested type "simple"
   908                           ; Number of cases is 4, Range of values is 1 to 4
   909                           ; switch strategies available:
   910                           ; Name         Instructions Cycles
   911                           ; simple_byte           13     7 (average)
   912                           ;	Chosen strategy is simple_byte
   913   00186E  5014               	movf	??_lcd_8bit_set_cursor^0,w,c
   914   001870  0A01               	xorlw	1	; case 1
   915   001872  B4D8               	btfsc	status,2,c
   916   001874  EF05  F00C         	goto	l2630
   917   001878  0A03               	xorlw	3	; case 2
   918   00187A  B4D8               	btfsc	status,2,c
   919   00187C  EF0F  F00C         	goto	l2632
   920   001880  0A01               	xorlw	1	; case 3
   921   001882  B4D8               	btfsc	status,2,c
   922   001884  EF19  F00C         	goto	l2634
   923   001888  0A07               	xorlw	7	; case 4
   924   00188A  B4D8               	btfsc	status,2,c
   925   00188C  EF23  F00C         	goto	l2636
   926   001890  EF4A  F00C         	goto	l2640
   927   001894                     l2640:
   928                           
   929                           ;ECU_Layer/LCD/ecu_lcd.c: 472:     return ret;
   930   001894  5016               	movf	lcd_8bit_set_cursor@ret^0,w,c
   931   001896  0012               	return		;funcret
   932   001898                     __end_of_lcd_8bit_set_cursor:
   933                           	callstack 0
   934                           
   935 ;; *************** function _lcd_8bit_send_char_data *****************
   936 ;; Defined at:
   937 ;;		line 282 in file "ECU_Layer/LCD/ecu_lcd.c"
   938 ;; Parameters:    Size  Location     Type
   939 ;;  _lcd_           1   10[COMRAM] PTR const struct .
   940 ;;		 -> lcd_2(10), 
   941 ;;  data            1   11[COMRAM] unsigned char 
   942 ;; Auto vars:     Size  Location     Type
   943 ;;  l_pin_counte    1   15[COMRAM] unsigned char 
   944 ;;  ret             1   14[COMRAM] unsigned char 
   945 ;; Return value:  Size  Location     Type
   946 ;;                  1    wreg      unsigned char 
   947 ;; Registers used:
   948 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   949 ;; Tracked objects:
   950 ;;		On entry : 0/0
   951 ;;		On exit  : 0/0
   952 ;;		Unchanged: 0/0
   953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   954 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   955 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   956 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   957 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   958 ;;Total ram usage:        6 bytes
   959 ;; Hardware stack levels used: 1
   960 ;; Hardware stack levels required when called: 2
   961 ;; This function calls:
   962 ;;		_gpio_pin_write_logic
   963 ;;		_lcd_8bit_send_enable_signal
   964 ;; This function is called by:
   965 ;;		_lcd_8bit_send_string_position
   966 ;;		_lcd_8bit_send_char_data_position
   967 ;;		_lcd_8bit_send_string
   968 ;; This function uses a non-reentrant model
   969 ;;
   970                           
   971                           	psect	text3
   972   00192E                     __ptext3:
   973                           	callstack 0
   974   00192E                     _lcd_8bit_send_char_data:
   975                           	callstack 27
   976   00192E                     
   977                           ;ECU_Layer/LCD/ecu_lcd.c: 284:     uint8 l_pin_counter = 0;
   978   00192E  0E00               	movlw	0
   979   001930  6E10               	movwf	lcd_8bit_send_char_data@l_pin_counter^0,c
   980                           
   981                           ;ECU_Layer/LCD/ecu_lcd.c: 285:     if(((void*)0) == _lcd_){
   982   001932  500B               	movf	lcd_8bit_send_char_data@_lcd_^0,w,c
   983   001934  A4D8               	btfss	status,2,c
   984   001936  EF9F  F00C         	goto	u1741
   985   00193A  EFA1  F00C         	goto	u1740
   986   00193E                     u1741:
   987   00193E  EFA5  F00C         	goto	l2606
   988   001942                     u1740:
   989   001942                     
   990                           ;ECU_Layer/LCD/ecu_lcd.c: 286:         ret = (Std_ReturnType)0x00;
   991   001942  0E00               	movlw	0
   992   001944  6E0F               	movwf	lcd_8bit_send_char_data@ret^0,c
   993                           
   994                           ;ECU_Layer/LCD/ecu_lcd.c: 287:     }
   995   001946  EFD0  F00C         	goto	l2622
   996   00194A                     l2606:
   997   00194A  C00B  F001         	movff	lcd_8bit_send_char_data@_lcd_,gpio_pin_write_logic@_pin_config
   998   00194E  0E01               	movlw	1
   999   001950  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  1000   001952  EC7F  F009         	call	_gpio_pin_write_logic	;wreg free
  1001   001956                     
  1002                           ;ECU_Layer/LCD/ecu_lcd.c: 290:         for(l_pin_counter = 0 ; l_pin_counter < 8 ; l_pin
      +                          _counter++){
  1003   001956  0E00               	movlw	0
  1004   001958  6E10               	movwf	lcd_8bit_send_char_data@l_pin_counter^0,c
  1005   00195A                     l2614:
  1006   00195A  500B               	movf	lcd_8bit_send_char_data@_lcd_^0,w,c
  1007   00195C  2410               	addwf	lcd_8bit_send_char_data@l_pin_counter^0,w,c
  1008   00195E  0F02               	addlw	2
  1009   001960  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1010   001962  C010  F00D         	movff	lcd_8bit_send_char_data@l_pin_counter,??_lcd_8bit_send_char_data
  1011   001966  C00C  F00E         	movff	lcd_8bit_send_char_data@data,??_lcd_8bit_send_char_data+1
  1012   00196A  2A0D               	incf	??_lcd_8bit_send_char_data^0,f,c
  1013   00196C  EFBA  F00C         	goto	u1754
  1014   001970                     u1755:
  1015   001970  90D8               	bcf	status,0,c
  1016   001972  320E               	rrcf	(??_lcd_8bit_send_char_data+1)^0,f,c
  1017   001974                     u1754:
  1018   001974  2E0D               	decfsz	??_lcd_8bit_send_char_data^0,f,c
  1019   001976  EFB8  F00C         	goto	u1755
  1020   00197A  500E               	movf	(??_lcd_8bit_send_char_data+1)^0,w,c
  1021   00197C  0B01               	andlw	1
  1022   00197E  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  1023   001980  EC7F  F009         	call	_gpio_pin_write_logic	;wreg free
  1024   001984                     
  1025                           ;ECU_Layer/LCD/ecu_lcd.c: 292:         }
  1026   001984  2A10               	incf	lcd_8bit_send_char_data@l_pin_counter^0,f,c
  1027   001986  0E07               	movlw	7
  1028   001988  6410               	cpfsgt	lcd_8bit_send_char_data@l_pin_counter^0,c
  1029   00198A  EFC9  F00C         	goto	u1761
  1030   00198E  EFCB  F00C         	goto	u1760
  1031   001992                     u1761:
  1032   001992  EFAD  F00C         	goto	l2614
  1033   001996                     u1760:
  1034   001996                     
  1035                           ;ECU_Layer/LCD/ecu_lcd.c: 293:         ret = lcd_8bit_send_enable_signal(_lcd_);
  1036   001996  C00B  F009         	movff	lcd_8bit_send_char_data@_lcd_,lcd_8bit_send_enable_signal@_lcd_
  1037   00199A  EC88  F00E         	call	_lcd_8bit_send_enable_signal	;wreg free
  1038   00199E  6E0F               	movwf	lcd_8bit_send_char_data@ret^0,c
  1039   0019A0                     l2622:
  1040                           
  1041                           ;ECU_Layer/LCD/ecu_lcd.c: 297:     return ret;
  1042   0019A0  500F               	movf	lcd_8bit_send_char_data@ret^0,w,c
  1043   0019A2  0012               	return		;funcret
  1044   0019A4                     __end_of_lcd_8bit_send_char_data:
  1045                           	callstack 0
  1046                           
  1047 ;; *************** function _convert_byte_to_string *****************
  1048 ;; Defined at:
  1049 ;;		line 395 in file "ECU_Layer/LCD/ecu_lcd.c"
  1050 ;; Parameters:    Size  Location     Type
  1051 ;;  value           1    wreg     unsigned char 
  1052 ;;  str             1   44[COMRAM] PTR unsigned char 
  1053 ;;		 -> lcd_counter_text(4), 
  1054 ;; Auto vars:     Size  Location     Type
  1055 ;;  value           1   45[COMRAM] unsigned char 
  1056 ;;  ret             1   46[COMRAM] unsigned char 
  1057 ;; Return value:  Size  Location     Type
  1058 ;;                  1    wreg      unsigned char 
  1059 ;; Registers used:
  1060 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1061 ;; Tracked objects:
  1062 ;;		On entry : 0/0
  1063 ;;		On exit  : 0/0
  1064 ;;		Unchanged: 0/0
  1065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1066 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1067 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1069 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1070 ;;Total ram usage:        3 bytes
  1071 ;; Hardware stack levels used: 1
  1072 ;; Hardware stack levels required when called: 5
  1073 ;; This function calls:
  1074 ;;		_memset
  1075 ;;		_sprintf
  1076 ;; This function is called by:
  1077 ;;		_main
  1078 ;; This function uses a non-reentrant model
  1079 ;;
  1080                           
  1081                           	psect	text4
  1082   001B7E                     __ptext4:
  1083                           	callstack 0
  1084   001B7E                     _convert_byte_to_string:
  1085                           	callstack 25
  1086                           
  1087                           ;incstack = 0
  1088                           ;convert_byte_to_string@value stored from wreg
  1089   001B7E  6E2E               	movwf	convert_byte_to_string@value^0,c
  1090   001B80                     
  1091                           ;ECU_Layer/LCD/ecu_lcd.c: 396:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1092   001B80  0E01               	movlw	1
  1093   001B82  6E2F               	movwf	convert_byte_to_string@ret^0,c
  1094   001B84                     
  1095                           ;ECU_Layer/LCD/ecu_lcd.c: 397:     if(((void*)0) == str){
  1096   001B84  502D               	movf	convert_byte_to_string@str^0,w,c
  1097   001B86  A4D8               	btfss	status,2,c
  1098   001B88  EFC8  F00D         	goto	u1831
  1099   001B8C  EFCA  F00D         	goto	u1830
  1100   001B90                     u1831:
  1101   001B90  EFCE  F00D         	goto	l2702
  1102   001B94                     u1830:
  1103   001B94                     
  1104                           ;ECU_Layer/LCD/ecu_lcd.c: 398:         ret = (Std_ReturnType)0x00;
  1105   001B94  0E00               	movlw	0
  1106   001B96  6E2F               	movwf	convert_byte_to_string@ret^0,c
  1107                           
  1108                           ;ECU_Layer/LCD/ecu_lcd.c: 399:     }
  1109   001B98  EFE3  F00D         	goto	l2706
  1110   001B9C                     l2702:
  1111                           
  1112                           ;ECU_Layer/LCD/ecu_lcd.c: 401:         memset(str, '\0', 4);
  1113   001B9C  C02D  F001         	movff	convert_byte_to_string@str,memset@dest
  1114   001BA0  0E00               	movlw	0
  1115   001BA2  6E03               	movwf	(memset@c+1)^0,c
  1116   001BA4  0E00               	movlw	0
  1117   001BA6  6E02               	movwf	memset@c^0,c
  1118   001BA8  0E00               	movlw	0
  1119   001BAA  6E05               	movwf	(memset@n+1)^0,c
  1120   001BAC  0E04               	movlw	4
  1121   001BAE  6E04               	movwf	memset@n^0,c
  1122   001BB0  EC59  F00E         	call	_memset	;wreg free
  1123   001BB4                     
  1124                           ;ECU_Layer/LCD/ecu_lcd.c: 402:         sprintf(str , "%i", value);
  1125   001BB4  C02D  F01A         	movff	convert_byte_to_string@str,sprintf@s
  1126   001BB8  0E1B               	movlw	low STR_1
  1127   001BBA  6E1B               	movwf	sprintf@fmt^0,c
  1128   001BBC  C02E  F01C         	movff	convert_byte_to_string@value,?_sprintf+2
  1129   001BC0  6A1D               	clrf	(?_sprintf+3)^0,c
  1130   001BC2  EC25  F00E         	call	_sprintf	;wreg free
  1131   001BC6                     l2706:
  1132                           
  1133                           ;ECU_Layer/LCD/ecu_lcd.c: 404:     return ret;
  1134   001BC6  502F               	movf	convert_byte_to_string@ret^0,w,c
  1135   001BC8  0012               	return		;funcret
  1136   001BCA                     __end_of_convert_byte_to_string:
  1137                           	callstack 0
  1138                           
  1139 ;; *************** function _sprintf *****************
  1140 ;; Defined at:
  1141 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  1142 ;; Parameters:    Size  Location     Type
  1143 ;;  s               1   25[COMRAM] PTR unsigned char 
  1144 ;;		 -> lcd_counter_text(4), 
  1145 ;;  fmt             1   26[COMRAM] PTR const unsigned char 
  1146 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1147 ;; Auto vars:     Size  Location     Type
  1148 ;;  f              12   32[COMRAM] struct _IO_FILE
  1149 ;;  ret             2    0        int 
  1150 ;;  ap              1   31[COMRAM] PTR void [1]
  1151 ;;		 -> ?_sprintf(2), 
  1152 ;; Return value:  Size  Location     Type
  1153 ;;                  2   25[COMRAM] int 
  1154 ;; Registers used:
  1155 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1156 ;; Tracked objects:
  1157 ;;		On entry : 0/0
  1158 ;;		On exit  : 0/0
  1159 ;;		Unchanged: 0/0
  1160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1161 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1162 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1164 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1165 ;;Total ram usage:       19 bytes
  1166 ;; Hardware stack levels used: 1
  1167 ;; Hardware stack levels required when called: 4
  1168 ;; This function calls:
  1169 ;;		_vfprintf
  1170 ;; This function is called by:
  1171 ;;		_convert_byte_to_string
  1172 ;;		_convert_short_to_string
  1173 ;;		_convert_int_to_string
  1174 ;; This function uses a non-reentrant model
  1175 ;;
  1176                           
  1177                           	psect	text5
  1178   001C4A                     __ptext5:
  1179                           	callstack 0
  1180   001C4A                     _sprintf:
  1181                           	callstack 25
  1182   001C4A  0E1C               	movlw	low (?_sprintf+2)
  1183   001C4C  6E20               	movwf	sprintf@ap^0,c
  1184   001C4E  C01A  F021         	movff	sprintf@s,sprintf@f
  1185   001C52  0E00               	movlw	0
  1186   001C54  6E25               	movwf	(sprintf@f+4)^0,c
  1187   001C56  0E00               	movlw	0
  1188   001C58  6E24               	movwf	(sprintf@f+3)^0,c
  1189   001C5A  0E00               	movlw	0
  1190   001C5C  6E2C               	movwf	(sprintf@f+11)^0,c
  1191   001C5E  0E00               	movlw	0
  1192   001C60  6E2B               	movwf	(sprintf@f+10)^0,c
  1193   001C62  0E21               	movlw	low sprintf@f
  1194   001C64  6E16               	movwf	vfprintf@fp^0,c
  1195   001C66  C01B  F017         	movff	sprintf@fmt,vfprintf@fmt
  1196   001C6A  0E20               	movlw	low sprintf@ap
  1197   001C6C  6E18               	movwf	vfprintf@ap^0,c
  1198   001C6E  EC06  F00E         	call	_vfprintf	;wreg free
  1199   001C72  501A               	movf	sprintf@s^0,w,c
  1200   001C74  2424               	addwf	(sprintf@f+3)^0,w,c
  1201   001C76  6ED9               	movwf	fsr2l,c
  1202   001C78  6ADA               	clrf	fsr2h,c
  1203   001C7A  6ADF               	clrf	indf2,c
  1204   001C7C  0012               	return		;funcret
  1205   001C7E                     __end_of_sprintf:
  1206                           	callstack 0
  1207                           
  1208 ;; *************** function _vfprintf *****************
  1209 ;; Defined at:
  1210 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1211 ;; Parameters:    Size  Location     Type
  1212 ;;  fp              1   21[COMRAM] PTR struct _IO_FILE
  1213 ;;		 -> sprintf@f(12), 
  1214 ;;  fmt             1   22[COMRAM] PTR const unsigned char 
  1215 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1216 ;;  ap              1   23[COMRAM] PTR PTR void 
  1217 ;;		 -> sprintf@ap(1), 
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;  cfmt            1   24[COMRAM] PTR unsigned char 
  1220 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1221 ;; Return value:  Size  Location     Type
  1222 ;;                  2   21[COMRAM] int 
  1223 ;; Registers used:
  1224 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1225 ;; Tracked objects:
  1226 ;;		On entry : 0/0
  1227 ;;		On exit  : 0/0
  1228 ;;		Unchanged: 0/0
  1229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1230 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1231 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1233 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1234 ;;Total ram usage:        4 bytes
  1235 ;; Hardware stack levels used: 1
  1236 ;; Hardware stack levels required when called: 3
  1237 ;; This function calls:
  1238 ;;		_vfpfcnvrt
  1239 ;; This function is called by:
  1240 ;;		_sprintf
  1241 ;; This function uses a non-reentrant model
  1242 ;;
  1243                           
  1244                           	psect	text6
  1245   001C0C                     __ptext6:
  1246                           	callstack 0
  1247   001C0C                     _vfprintf:
  1248                           	callstack 25
  1249   001C0C                     
  1250                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1251   001C0C  C017  F019         	movff	vfprintf@fmt,vfprintf@cfmt
  1252                           
  1253                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1254   001C10  EF12  F00E         	goto	l2508
  1255   001C14                     l2506:
  1256                           
  1257                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1258   001C14  C016  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
  1259   001C18  0E19               	movlw	low vfprintf@cfmt
  1260   001C1A  6E0C               	movwf	vfpfcnvrt@fmt^0,c
  1261   001C1C  C018  F00D         	movff	vfprintf@ap,vfpfcnvrt@ap
  1262   001C20  EC10  F008         	call	_vfpfcnvrt	;wreg free
  1263   001C24                     l2508:
  1264                           
  1265                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1266   001C24  C019  FFF6         	movff	vfprintf@cfmt,tblptrl
  1267   001C28                     	if	1	;There is more than 1 active tblptr byte
  1268   001C28  0E10               	movlw	high __smallconst
  1269   001C2A  6EF7               	movwf	tblptrh,c
  1270   001C2C                     	endif
  1271   001C2C                     	if	0	;tblptru may be non-zero
  1272   001C2C                     	endif
  1273   001C2C                     	if	0	;tblptru may be non-zero
  1274   001C2C                     	endif
  1275   001C2C  0008               	tblrd		*
  1276   001C2E  50F5               	movf	tablat,w,c
  1277   001C30  0900               	iorlw	0
  1278   001C32  A4D8               	btfss	status,2,c
  1279   001C34  EF1E  F00E         	goto	u1691
  1280   001C38  EF20  F00E         	goto	u1690
  1281   001C3C                     u1691:
  1282   001C3C  EF0A  F00E         	goto	l2506
  1283   001C40                     u1690:
  1284   001C40                     
  1285                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1286   001C40  0E00               	movlw	0
  1287   001C42  6E17               	movwf	(?_vfprintf+1)^0,c
  1288   001C44  0E00               	movlw	0
  1289   001C46  6E16               	movwf	?_vfprintf^0,c
  1290   001C48  0012               	return		;funcret
  1291   001C4A                     __end_of_vfprintf:
  1292                           	callstack 0
  1293                           
  1294 ;; *************** function _vfpfcnvrt *****************
  1295 ;; Defined at:
  1296 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1297 ;; Parameters:    Size  Location     Type
  1298 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  1299 ;;		 -> sprintf@f(12), 
  1300 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
  1301 ;;		 -> vfprintf@cfmt(1), 
  1302 ;;  ap              1   12[COMRAM] PTR PTR void 
  1303 ;;		 -> sprintf@ap(1), 
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;  convarg         4   16[COMRAM] struct .
  1306 ;;  c               1   20[COMRAM] unsigned char 
  1307 ;;  cp              1   15[COMRAM] PTR unsigned char 
  1308 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1309 ;;  done            1   14[COMRAM] _Bool 
  1310 ;; Return value:  Size  Location     Type
  1311 ;;                  1    wreg      void 
  1312 ;; Registers used:
  1313 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1314 ;; Tracked objects:
  1315 ;;		On entry : 0/0
  1316 ;;		On exit  : 0/0
  1317 ;;		Unchanged: 0/0
  1318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1319 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1320 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1321 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1322 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1323 ;;Total ram usage:       11 bytes
  1324 ;; Hardware stack levels used: 1
  1325 ;; Hardware stack levels required when called: 2
  1326 ;; This function calls:
  1327 ;;		___awdiv
  1328 ;;		___awmod
  1329 ;;		_abs
  1330 ;;		_fputc
  1331 ;; This function is called by:
  1332 ;;		_vfprintf
  1333 ;; This function uses a non-reentrant model
  1334 ;;
  1335                           
  1336                           	psect	text7
  1337   001020                     __ptext7:
  1338                           	callstack 0
  1339   001020                     _vfpfcnvrt:
  1340                           	callstack 25
  1341   001020                     
  1342                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1343   001020  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1344   001022  6ED9               	movwf	fsr2l,c
  1345   001024  6ADA               	clrf	fsr2h,c
  1346   001026  CFDF FFF6          	movff	indf2,tblptrl
  1347   00102A                     	if	1	;There is more than 1 active tblptr byte
  1348   00102A  0E10               	movlw	high __smallconst
  1349   00102C  6EF7               	movwf	tblptrh,c
  1350   00102E                     	endif
  1351   00102E                     	if	0	;tblptru may be non-zero
  1352   00102E                     	endif
  1353   00102E                     	if	0	;tblptru may be non-zero
  1354   00102E                     	endif
  1355   00102E  0008               	tblrd		*
  1356   001030  50F5               	movf	tablat,w,c
  1357   001032  0A25               	xorlw	37
  1358   001034  A4D8               	btfss	status,2,c
  1359   001036  EF1F  F008         	goto	u1531
  1360   00103A  EF21  F008         	goto	u1530
  1361   00103E                     u1531:
  1362   00103E  EFDA  F008         	goto	l2452
  1363   001042                     u1530:
  1364   001042                     
  1365                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1366   001042  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1367   001044  6ED9               	movwf	fsr2l,c
  1368   001046  6ADA               	clrf	fsr2h,c
  1369   001048  2ADF               	incf	indf2,f,c
  1370   00104A                     
  1371                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1372   00104A  0E00               	movlw	0
  1373   00104C  6E60               	movwf	(_width+1)^0,c
  1374   00104E  0E00               	movlw	0
  1375   001050  6E5F               	movwf	_width^0,c
  1376   001052  C05F  F063         	movff	_width,_flags
  1377   001056                     
  1378                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1379   001056  6861               	setf	_prec^0,c
  1380   001058  6862               	setf	(_prec+1)^0,c
  1381   00105A                     
  1382                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1383   00105A  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1384   00105C  6ED9               	movwf	fsr2l,c
  1385   00105E  6ADA               	clrf	fsr2h,c
  1386   001060  50DF               	movf	indf2,w,c
  1387   001062  6E10               	movwf	vfpfcnvrt@cp^0,c
  1388   001064                     
  1389                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1390   001064  C010  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1391   001068                     	if	1	;There is more than 1 active tblptr byte
  1392   001068  0E10               	movlw	high __smallconst
  1393   00106A  6EF7               	movwf	tblptrh,c
  1394   00106C                     	endif
  1395   00106C                     	if	0	;tblptru may be non-zero
  1396   00106C                     	endif
  1397   00106C                     	if	0	;tblptru may be non-zero
  1398   00106C                     	endif
  1399   00106C  0008               	tblrd		*
  1400   00106E  50F5               	movf	tablat,w,c
  1401   001070  0A64               	xorlw	100
  1402   001072  B4D8               	btfsc	status,2,c
  1403   001074  EF3E  F008         	goto	u1541
  1404   001078  EF40  F008         	goto	u1540
  1405   00107C                     u1541:
  1406   00107C  EF4E  F008         	goto	l2422
  1407   001080                     u1540:
  1408   001080  C010  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1409   001084                     	if	1	;There is more than 1 active tblptr byte
  1410   001084  0E10               	movlw	high __smallconst
  1411   001086  6EF7               	movwf	tblptrh,c
  1412   001088                     	endif
  1413   001088                     	if	0	;tblptru may be non-zero
  1414   001088                     	endif
  1415   001088                     	if	0	;tblptru may be non-zero
  1416   001088                     	endif
  1417   001088  0008               	tblrd		*
  1418   00108A  50F5               	movf	tablat,w,c
  1419   00108C  0A69               	xorlw	105
  1420   00108E  A4D8               	btfss	status,2,c
  1421   001090  EF4C  F008         	goto	u1551
  1422   001094  EF4E  F008         	goto	u1550
  1423   001098                     u1551:
  1424   001098  EFD4  F008         	goto	l2448
  1425   00109C                     u1550:
  1426   00109C                     l2422:
  1427                           
  1428                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1429   00109C  500D               	movf	vfpfcnvrt@ap^0,w,c
  1430   00109E  6ED9               	movwf	fsr2l,c
  1431   0010A0  6ADA               	clrf	fsr2h,c
  1432   0010A2  0E02               	movlw	2
  1433   0010A4  26DF               	addwf	indf2,f,c
  1434   0010A6  5CDF               	subwf	indf2,w,c
  1435   0010A8  6ED9               	movwf	fsr2l,c
  1436   0010AA  6ADA               	clrf	fsr2h,c
  1437   0010AC  CFDE F011          	movff	postinc2,vfpfcnvrt@convarg
  1438   0010B0  CFDE F012          	movff	postinc2,vfpfcnvrt@convarg+1
  1439   0010B4                     
  1440                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1441   0010B4  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1442   0010B6  6ED9               	movwf	fsr2l,c
  1443   0010B8  6ADA               	clrf	fsr2h,c
  1444   0010BA  2810               	incf	vfpfcnvrt@cp^0,w,c
  1445   0010BC  6EDF               	movwf	indf2,c
  1446   0010BE                     
  1447                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1448   0010BE  0E20               	movlw	32
  1449   0010C0  6E15               	movwf	vfpfcnvrt@c^0,c
  1450                           
  1451                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1452   0010C2  BE12               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1453   0010C4  EF66  F008         	goto	u1561
  1454   0010C8  EF69  F008         	goto	u1560
  1455   0010CC                     u1561:
  1456   0010CC  0E01               	movlw	1
  1457   0010CE  EF6A  F008         	goto	u1570
  1458   0010D2                     u1560:
  1459   0010D2  0E00               	movlw	0
  1460   0010D4                     u1570:
  1461   0010D4  6E0F               	movwf	vfpfcnvrt@done^0,c
  1462   0010D6                     l2428:
  1463                           
  1464                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1465   0010D6  0615               	decf	vfpfcnvrt@c^0,f,c
  1466   0010D8  5015               	movf	vfpfcnvrt@c^0,w,c
  1467   0010DA  0F80               	addlw	low _dbuf
  1468   0010DC  6ED9               	movwf	fsr2l,c
  1469   0010DE  6ADA               	clrf	fsr2h,c
  1470   0010E0  C011  F001         	movff	vfpfcnvrt@convarg,___awmod@dividend
  1471   0010E4  C012  F002         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  1472   0010E8  0E00               	movlw	0
  1473   0010EA  6E04               	movwf	(___awmod@divisor+1)^0,c
  1474   0010EC  0E0A               	movlw	10
  1475   0010EE  6E03               	movwf	___awmod@divisor^0,c
  1476   0010F0  EC53  F00B         	call	___awmod	;wreg free
  1477   0010F4  C001  F007         	movff	?___awmod,abs@a
  1478   0010F8  C002  F008         	movff	?___awmod+1,abs@a+1
  1479   0010FC  EC3F  F00E         	call	_abs	;wreg free
  1480   001100  5007               	movf	?_abs^0,w,c
  1481   001102  0F30               	addlw	48
  1482   001104  6EDF               	movwf	indf2,c
  1483   001106                     
  1484                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1485   001106  C011  F001         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  1486   00110A  C012  F002         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  1487   00110E  0E00               	movlw	0
  1488   001110  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1489   001112  0E0A               	movlw	10
  1490   001114  6E03               	movwf	___awdiv@divisor^0,c
  1491   001116  ECF1  F00A         	call	___awdiv	;wreg free
  1492   00111A  C001  F011         	movff	?___awdiv,vfpfcnvrt@convarg
  1493   00111E  C002  F012         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  1494   001122                     
  1495                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1496   001122  5011               	movf	vfpfcnvrt@convarg^0,w,c
  1497   001124  1012               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1498   001126  B4D8               	btfsc	status,2,c
  1499   001128  EF98  F008         	goto	u1581
  1500   00112C  EF9A  F008         	goto	u1580
  1501   001130                     u1581:
  1502   001130  EFA2  F008         	goto	l2436
  1503   001134                     u1580:
  1504   001134  5015               	movf	vfpfcnvrt@c^0,w,c
  1505   001136  A4D8               	btfss	status,2,c
  1506   001138  EFA0  F008         	goto	u1591
  1507   00113C  EFA2  F008         	goto	u1590
  1508   001140                     u1591:
  1509   001140  EF6B  F008         	goto	l2428
  1510   001144                     u1590:
  1511   001144                     l2436:
  1512                           
  1513                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1514   001144  5015               	movf	vfpfcnvrt@c^0,w,c
  1515   001146  B4D8               	btfsc	status,2,c
  1516   001148  EFA8  F008         	goto	u1601
  1517   00114C  EFAA  F008         	goto	u1600
  1518   001150                     u1601:
  1519   001150  EFC9  F008         	goto	l2446
  1520   001154                     u1600:
  1521   001154  500F               	movf	vfpfcnvrt@done^0,w,c
  1522   001156  B4D8               	btfsc	status,2,c
  1523   001158  EFB0  F008         	goto	u1611
  1524   00115C  EFB2  F008         	goto	u1610
  1525   001160                     u1611:
  1526   001160  EFC9  F008         	goto	l2446
  1527   001164                     u1610:
  1528   001164                     
  1529                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1530   001164  0615               	decf	vfpfcnvrt@c^0,f,c
  1531   001166  5015               	movf	vfpfcnvrt@c^0,w,c
  1532   001168  0F80               	addlw	low _dbuf
  1533   00116A  6ED9               	movwf	fsr2l,c
  1534   00116C  6ADA               	clrf	fsr2h,c
  1535   00116E  0E2D               	movlw	45
  1536   001170  6EDF               	movwf	indf2,c
  1537   001172  EFC9  F008         	goto	l2446
  1538   001176                     l2442:
  1539                           
  1540                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1541   001176  5015               	movf	vfpfcnvrt@c^0,w,c
  1542   001178  0F80               	addlw	low _dbuf
  1543   00117A  6ED9               	movwf	fsr2l,c
  1544   00117C  6ADA               	clrf	fsr2h,c
  1545   00117E  50DF               	movf	indf2,w,c
  1546   001180  6E0E               	movwf	??_vfpfcnvrt^0,c
  1547   001182  500E               	movf	??_vfpfcnvrt^0,w,c
  1548   001184  6E01               	movwf	fputc@c^0,c
  1549   001186  6A02               	clrf	(fputc@c+1)^0,c
  1550   001188  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1551   00118C  ECAB  F00B         	call	_fputc	;wreg free
  1552   001190  2A15               	incf	vfpfcnvrt@c^0,f,c
  1553   001192                     l2446:
  1554                           
  1555                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1556   001192  0E20               	movlw	32
  1557   001194  1815               	xorwf	vfpfcnvrt@c^0,w,c
  1558   001196  A4D8               	btfss	status,2,c
  1559   001198  EFD0  F008         	goto	u1621
  1560   00119C  EFD2  F008         	goto	u1620
  1561   0011A0                     u1621:
  1562   0011A0  EFBB  F008         	goto	l2442
  1563   0011A4                     u1620:
  1564   0011A4  EFEB  F008         	goto	l1182
  1565   0011A8                     l2448:
  1566                           
  1567                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1568   0011A8  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1569   0011AA  6ED9               	movwf	fsr2l,c
  1570   0011AC  6ADA               	clrf	fsr2h,c
  1571   0011AE  2ADF               	incf	indf2,f,c
  1572   0011B0  EFEB  F008         	goto	l1182
  1573   0011B4                     l2452:
  1574                           
  1575                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1576   0011B4  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1577   0011B6  6ED9               	movwf	fsr2l,c
  1578   0011B8  6ADA               	clrf	fsr2h,c
  1579   0011BA  CFDF FFF6          	movff	indf2,tblptrl
  1580   0011BE                     	if	1	;There is more than 1 active tblptr byte
  1581   0011BE  0E10               	movlw	high __smallconst
  1582   0011C0  6EF7               	movwf	tblptrh,c
  1583   0011C2                     	endif
  1584   0011C2                     	if	0	;tblptru may be non-zero
  1585   0011C2                     	endif
  1586   0011C2                     	if	0	;tblptru may be non-zero
  1587   0011C2                     	endif
  1588   0011C2  0008               	tblrd		*
  1589   0011C4  50F5               	movf	tablat,w,c
  1590   0011C6  6E01               	movwf	fputc@c^0,c
  1591   0011C8  6A02               	clrf	(fputc@c+1)^0,c
  1592   0011CA  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1593   0011CE  ECAB  F00B         	call	_fputc	;wreg free
  1594   0011D2  EFD4  F008         	goto	l2448
  1595   0011D6                     l1182:
  1596   0011D6  0012               	return		;funcret
  1597   0011D8                     __end_of_vfpfcnvrt:
  1598                           	callstack 0
  1599                           
  1600 ;; *************** function _fputc *****************
  1601 ;; Defined at:
  1602 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;  c               2    0[COMRAM] int 
  1605 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  1606 ;;		 -> sprintf@f(12), 
  1607 ;; Auto vars:     Size  Location     Type
  1608 ;;		None
  1609 ;; Return value:  Size  Location     Type
  1610 ;;                  2    0[COMRAM] int 
  1611 ;; Registers used:
  1612 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1613 ;; Tracked objects:
  1614 ;;		On entry : 0/0
  1615 ;;		On exit  : 0/0
  1616 ;;		Unchanged: 0/0
  1617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1618 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1620 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1621 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1622 ;;Total ram usage:        8 bytes
  1623 ;; Hardware stack levels used: 1
  1624 ;; Hardware stack levels required when called: 1
  1625 ;; This function calls:
  1626 ;;		_putch
  1627 ;; This function is called by:
  1628 ;;		_vfpfcnvrt
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632                           	psect	text8
  1633   001756                     __ptext8:
  1634                           	callstack 0
  1635   001756                     _fputc:
  1636                           	callstack 25
  1637   001756  5003               	movf	fputc@fp^0,w,c
  1638   001758  B4D8               	btfsc	status,2,c
  1639   00175A  EFB1  F00B         	goto	u1421
  1640   00175E  EFB3  F00B         	goto	u1420
  1641   001762                     u1421:
  1642   001762  EFBB  F00B         	goto	l2340
  1643   001766                     u1420:
  1644   001766  5003               	movf	fputc@fp^0,w,c
  1645   001768  A4D8               	btfss	status,2,c
  1646   00176A  EFB9  F00B         	goto	u1431
  1647   00176E  EFBB  F00B         	goto	u1430
  1648   001772                     u1431:
  1649   001772  EFC0  F00B         	goto	l2342
  1650   001776                     u1430:
  1651   001776                     l2340:
  1652   001776  5001               	movf	fputc@c^0,w,c
  1653   001778  ECB5  F00E         	call	_putch
  1654   00177C  EFFF  F00B         	goto	l1207
  1655   001780                     l2342:
  1656   001780  5003               	movf	fputc@fp^0,w,c
  1657   001782  6ED9               	movwf	fsr2l,c
  1658   001784  6ADA               	clrf	fsr2h,c
  1659   001786  0E0A               	movlw	10
  1660   001788  26D9               	addwf	fsr2l,f,c
  1661   00178A  50DE               	movf	postinc2,w,c
  1662   00178C  10DE               	iorwf	postinc2,w,c
  1663   00178E  B4D8               	btfsc	status,2,c
  1664   001790  EFCC  F00B         	goto	u1441
  1665   001794  EFCE  F00B         	goto	u1440
  1666   001798                     u1441:
  1667   001798  EFE7  F00B         	goto	l2346
  1668   00179C                     u1440:
  1669   00179C  5003               	movf	fputc@fp^0,w,c
  1670   00179E  6ED9               	movwf	fsr2l,c
  1671   0017A0  6ADA               	clrf	fsr2h,c
  1672   0017A2  0E0A               	movlw	10
  1673   0017A4  26D9               	addwf	fsr2l,f,c
  1674   0017A6  5003               	movf	fputc@fp^0,w,c
  1675   0017A8  6EE1               	movwf	fsr1l,c
  1676   0017AA  6AE2               	clrf	fsr1h,c
  1677   0017AC  0E03               	movlw	3
  1678   0017AE  26E1               	addwf	fsr1l,f,c
  1679   0017B0  50DE               	movf	postinc2,w,c
  1680   0017B2  5CE6               	subwf	postinc1,w,c
  1681   0017B4  50E6               	movf	postinc1,w,c
  1682   0017B6  0A80               	xorlw	128
  1683   0017B8  6E08               	movwf	(??_fputc+4)^0,c
  1684   0017BA  50DE               	movf	postinc2,w,c
  1685   0017BC  0A80               	xorlw	128
  1686   0017BE  5808               	subwfb	(??_fputc+4)^0,w,c
  1687   0017C0  B0D8               	btfsc	status,0,c
  1688   0017C2  EFE5  F00B         	goto	u1451
  1689   0017C6  EFE7  F00B         	goto	u1450
  1690   0017CA                     u1451:
  1691   0017CA  EFFF  F00B         	goto	l1207
  1692   0017CE                     u1450:
  1693   0017CE                     l2346:
  1694   0017CE  5003               	movf	fputc@fp^0,w,c
  1695   0017D0  6ED9               	movwf	fsr2l,c
  1696   0017D2  6ADA               	clrf	fsr2h,c
  1697   0017D4  0E03               	movlw	3
  1698   0017D6  26D9               	addwf	fsr2l,f,c
  1699   0017D8  50DF               	movf	indf2,w,c
  1700   0017DA  6E04               	movwf	??_fputc^0,c
  1701   0017DC  5003               	movf	fputc@fp^0,w,c
  1702   0017DE  6ED9               	movwf	fsr2l,c
  1703   0017E0  6ADA               	clrf	fsr2h,c
  1704   0017E2  50DF               	movf	indf2,w,c
  1705   0017E4  2404               	addwf	??_fputc^0,w,c
  1706   0017E6  6ED9               	movwf	fsr2l,c
  1707   0017E8  6ADA               	clrf	fsr2h,c
  1708   0017EA  C001  FFDF         	movff	fputc@c,indf2
  1709   0017EE  5003               	movf	fputc@fp^0,w,c
  1710   0017F0  6ED9               	movwf	fsr2l,c
  1711   0017F2  6ADA               	clrf	fsr2h,c
  1712   0017F4  0E03               	movlw	3
  1713   0017F6  26D9               	addwf	fsr2l,f,c
  1714   0017F8  2ADE               	incf	postinc2,f,c
  1715   0017FA  0E00               	movlw	0
  1716   0017FC  22DD               	addwfc	postdec2,f,c
  1717   0017FE                     l1207:
  1718   0017FE  0012               	return		;funcret
  1719   001800                     __end_of_fputc:
  1720                           	callstack 0
  1721                           
  1722 ;; *************** function _putch *****************
  1723 ;; Defined at:
  1724 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  1725 ;; Parameters:    Size  Location     Type
  1726 ;;  c               1    wreg     unsigned char 
  1727 ;; Auto vars:     Size  Location     Type
  1728 ;;  c               1    0[COMRAM] unsigned char 
  1729 ;; Return value:  Size  Location     Type
  1730 ;;                  1    wreg      void 
  1731 ;; Registers used:
  1732 ;;		wreg
  1733 ;; Tracked objects:
  1734 ;;		On entry : 0/0
  1735 ;;		On exit  : 0/0
  1736 ;;		Unchanged: 0/0
  1737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1742 ;;Total ram usage:        0 bytes
  1743 ;; Hardware stack levels used: 1
  1744 ;; This function calls:
  1745 ;;		Nothing
  1746 ;; This function is called by:
  1747 ;;		_fputc
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751                           	psect	text9
  1752   001D6A                     __ptext9:
  1753                           	callstack 0
  1754   001D6A                     _putch:
  1755                           	callstack 25
  1756   001D6A  0012               	return		;funcret
  1757   001D6C                     __end_of_putch:
  1758                           	callstack 0
  1759                           
  1760 ;; *************** function _abs *****************
  1761 ;; Defined at:
  1762 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  1763 ;; Parameters:    Size  Location     Type
  1764 ;;  a               2    6[COMRAM] int 
  1765 ;; Auto vars:     Size  Location     Type
  1766 ;;		None
  1767 ;; Return value:  Size  Location     Type
  1768 ;;                  2    6[COMRAM] int 
  1769 ;; Registers used:
  1770 ;;		wreg, status,2, status,0
  1771 ;; Tracked objects:
  1772 ;;		On entry : 0/0
  1773 ;;		On exit  : 0/0
  1774 ;;		Unchanged: 0/0
  1775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1776 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1778 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1779 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1780 ;;Total ram usage:        4 bytes
  1781 ;; Hardware stack levels used: 1
  1782 ;; This function calls:
  1783 ;;		Nothing
  1784 ;; This function is called by:
  1785 ;;		_vfpfcnvrt
  1786 ;; This function uses a non-reentrant model
  1787 ;;
  1788                           
  1789                           	psect	text10
  1790   001C7E                     __ptext10:
  1791                           	callstack 0
  1792   001C7E                     _abs:
  1793                           	callstack 26
  1794   001C7E  BE08               	btfsc	(abs@a+1)^0,7,c
  1795   001C80  EF44  F00E         	goto	u1461
  1796   001C84  EF46  F00E         	goto	u1460
  1797   001C88                     u1461:
  1798   001C88  EF4C  F00E         	goto	l1192
  1799   001C8C                     u1460:
  1800   001C8C  C007  F007         	movff	abs@a,?_abs
  1801   001C90  C008  F008         	movff	abs@a+1,?_abs+1
  1802   001C94  EF58  F00E         	goto	l1195
  1803   001C98                     l1192:
  1804   001C98  C007  F009         	movff	abs@a,??_abs
  1805   001C9C  C008  F00A         	movff	abs@a+1,??_abs+1
  1806   001CA0  1E09               	comf	??_abs^0,f,c
  1807   001CA2  1E0A               	comf	(??_abs+1)^0,f,c
  1808   001CA4  4A09               	infsnz	??_abs^0,f,c
  1809   001CA6  2A0A               	incf	(??_abs+1)^0,f,c
  1810   001CA8  C009  F007         	movff	??_abs,?_abs
  1811   001CAC  C00A  F008         	movff	??_abs+1,?_abs+1
  1812   001CB0                     l1195:
  1813   001CB0  0012               	return		;funcret
  1814   001CB2                     __end_of_abs:
  1815                           	callstack 0
  1816                           
  1817 ;; *************** function ___awmod *****************
  1818 ;; Defined at:
  1819 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  1820 ;; Parameters:    Size  Location     Type
  1821 ;;  dividend        2    0[COMRAM] int 
  1822 ;;  divisor         2    2[COMRAM] int 
  1823 ;; Auto vars:     Size  Location     Type
  1824 ;;  sign            1    5[COMRAM] unsigned char 
  1825 ;;  counter         1    4[COMRAM] unsigned char 
  1826 ;; Return value:  Size  Location     Type
  1827 ;;                  2    0[COMRAM] int 
  1828 ;; Registers used:
  1829 ;;		wreg, status,2, status,0
  1830 ;; Tracked objects:
  1831 ;;		On entry : 0/0
  1832 ;;		On exit  : 0/0
  1833 ;;		Unchanged: 0/0
  1834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1835 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1836 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1838 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1839 ;;Total ram usage:        6 bytes
  1840 ;; Hardware stack levels used: 1
  1841 ;; This function calls:
  1842 ;;		Nothing
  1843 ;; This function is called by:
  1844 ;;		_vfpfcnvrt
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848                           	psect	text11
  1849   0016A6                     __ptext11:
  1850                           	callstack 0
  1851   0016A6                     ___awmod:
  1852                           	callstack 26
  1853   0016A6  0E00               	movlw	0
  1854   0016A8  6E06               	movwf	___awmod@sign^0,c
  1855   0016AA  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  1856   0016AC  EF5C  F00B         	goto	u1360
  1857   0016B0  EF5A  F00B         	goto	u1361
  1858   0016B4                     u1361:
  1859   0016B4  EF62  F00B         	goto	l2308
  1860   0016B8                     u1360:
  1861   0016B8  6C01               	negf	___awmod@dividend^0,c
  1862   0016BA  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1863   0016BC  B0D8               	btfsc	status,0,c
  1864   0016BE  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1865   0016C0  0E01               	movlw	1
  1866   0016C2  6E06               	movwf	___awmod@sign^0,c
  1867   0016C4                     l2308:
  1868   0016C4  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  1869   0016C6  EF69  F00B         	goto	u1370
  1870   0016CA  EF67  F00B         	goto	u1371
  1871   0016CE                     u1371:
  1872   0016CE  EF6D  F00B         	goto	l2312
  1873   0016D2                     u1370:
  1874   0016D2  6C03               	negf	___awmod@divisor^0,c
  1875   0016D4  1E04               	comf	(___awmod@divisor+1)^0,f,c
  1876   0016D6  B0D8               	btfsc	status,0,c
  1877   0016D8  2A04               	incf	(___awmod@divisor+1)^0,f,c
  1878   0016DA                     l2312:
  1879   0016DA  5003               	movf	___awmod@divisor^0,w,c
  1880   0016DC  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  1881   0016DE  B4D8               	btfsc	status,2,c
  1882   0016E0  EF74  F00B         	goto	u1381
  1883   0016E4  EF76  F00B         	goto	u1380
  1884   0016E8                     u1381:
  1885   0016E8  EF9A  F00B         	goto	l2328
  1886   0016EC                     u1380:
  1887   0016EC  0E01               	movlw	1
  1888   0016EE  6E05               	movwf	___awmod@counter^0,c
  1889   0016F0  EF7E  F00B         	goto	l2318
  1890   0016F4                     l2316:
  1891   0016F4  90D8               	bcf	status,0,c
  1892   0016F6  3603               	rlcf	___awmod@divisor^0,f,c
  1893   0016F8  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  1894   0016FA  2A05               	incf	___awmod@counter^0,f,c
  1895   0016FC                     l2318:
  1896   0016FC  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  1897   0016FE  EF83  F00B         	goto	u1391
  1898   001702  EF85  F00B         	goto	u1390
  1899   001706                     u1391:
  1900   001706  EF7A  F00B         	goto	l2316
  1901   00170A                     u1390:
  1902   00170A                     l2320:
  1903   00170A  5003               	movf	___awmod@divisor^0,w,c
  1904   00170C  5C01               	subwf	___awmod@dividend^0,w,c
  1905   00170E  5004               	movf	(___awmod@divisor+1)^0,w,c
  1906   001710  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  1907   001712  A0D8               	btfss	status,0,c
  1908   001714  EF8E  F00B         	goto	u1401
  1909   001718  EF90  F00B         	goto	u1400
  1910   00171C                     u1401:
  1911   00171C  EF94  F00B         	goto	l2324
  1912   001720                     u1400:
  1913   001720  5003               	movf	___awmod@divisor^0,w,c
  1914   001722  5E01               	subwf	___awmod@dividend^0,f,c
  1915   001724  5004               	movf	(___awmod@divisor+1)^0,w,c
  1916   001726  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  1917   001728                     l2324:
  1918   001728  90D8               	bcf	status,0,c
  1919   00172A  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  1920   00172C  3203               	rrcf	___awmod@divisor^0,f,c
  1921   00172E  2E05               	decfsz	___awmod@counter^0,f,c
  1922   001730  EF85  F00B         	goto	l2320
  1923   001734                     l2328:
  1924   001734  5006               	movf	___awmod@sign^0,w,c
  1925   001736  B4D8               	btfsc	status,2,c
  1926   001738  EFA0  F00B         	goto	u1411
  1927   00173C  EFA2  F00B         	goto	u1410
  1928   001740                     u1411:
  1929   001740  EFA6  F00B         	goto	l2332
  1930   001744                     u1410:
  1931   001744  6C01               	negf	___awmod@dividend^0,c
  1932   001746  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1933   001748  B0D8               	btfsc	status,0,c
  1934   00174A  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1935   00174C                     l2332:
  1936   00174C  C001  F001         	movff	___awmod@dividend,?___awmod
  1937   001750  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1938   001754  0012               	return		;funcret
  1939   001756                     __end_of___awmod:
  1940                           	callstack 0
  1941                           
  1942 ;; *************** function ___awdiv *****************
  1943 ;; Defined at:
  1944 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;  dividend        2    0[COMRAM] int 
  1947 ;;  divisor         2    2[COMRAM] int 
  1948 ;; Auto vars:     Size  Location     Type
  1949 ;;  quotient        2    6[COMRAM] int 
  1950 ;;  sign            1    5[COMRAM] unsigned char 
  1951 ;;  counter         1    4[COMRAM] unsigned char 
  1952 ;; Return value:  Size  Location     Type
  1953 ;;                  2    0[COMRAM] int 
  1954 ;; Registers used:
  1955 ;;		wreg, status,2, status,0
  1956 ;; Tracked objects:
  1957 ;;		On entry : 0/0
  1958 ;;		On exit  : 0/0
  1959 ;;		Unchanged: 0/0
  1960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1961 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1962 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1964 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1965 ;;Total ram usage:        8 bytes
  1966 ;; Hardware stack levels used: 1
  1967 ;; This function calls:
  1968 ;;		Nothing
  1969 ;; This function is called by:
  1970 ;;		_vfpfcnvrt
  1971 ;; This function uses a non-reentrant model
  1972 ;;
  1973                           
  1974                           	psect	text12
  1975   0015E2                     __ptext12:
  1976                           	callstack 0
  1977   0015E2                     ___awdiv:
  1978                           	callstack 26
  1979   0015E2  0E00               	movlw	0
  1980   0015E4  6E06               	movwf	___awdiv@sign^0,c
  1981   0015E6  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  1982   0015E8  EFFA  F00A         	goto	u1300
  1983   0015EC  EFF8  F00A         	goto	u1301
  1984   0015F0                     u1301:
  1985   0015F0  EF00  F00B         	goto	l2264
  1986   0015F4                     u1300:
  1987   0015F4  6C03               	negf	___awdiv@divisor^0,c
  1988   0015F6  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  1989   0015F8  B0D8               	btfsc	status,0,c
  1990   0015FA  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  1991   0015FC  0E01               	movlw	1
  1992   0015FE  6E06               	movwf	___awdiv@sign^0,c
  1993   001600                     l2264:
  1994   001600  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  1995   001602  EF07  F00B         	goto	u1310
  1996   001606  EF05  F00B         	goto	u1311
  1997   00160A                     u1311:
  1998   00160A  EF0D  F00B         	goto	l2270
  1999   00160E                     u1310:
  2000   00160E  6C01               	negf	___awdiv@dividend^0,c
  2001   001610  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  2002   001612  B0D8               	btfsc	status,0,c
  2003   001614  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  2004   001616  0E01               	movlw	1
  2005   001618  1A06               	xorwf	___awdiv@sign^0,f,c
  2006   00161A                     l2270:
  2007   00161A  0E00               	movlw	0
  2008   00161C  6E08               	movwf	(___awdiv@quotient+1)^0,c
  2009   00161E  0E00               	movlw	0
  2010   001620  6E07               	movwf	___awdiv@quotient^0,c
  2011   001622  5003               	movf	___awdiv@divisor^0,w,c
  2012   001624  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  2013   001626  B4D8               	btfsc	status,2,c
  2014   001628  EF18  F00B         	goto	u1321
  2015   00162C  EF1A  F00B         	goto	u1320
  2016   001630                     u1321:
  2017   001630  EF42  F00B         	goto	l2292
  2018   001634                     u1320:
  2019   001634  0E01               	movlw	1
  2020   001636  6E05               	movwf	___awdiv@counter^0,c
  2021   001638  EF22  F00B         	goto	l2278
  2022   00163C                     l2276:
  2023   00163C  90D8               	bcf	status,0,c
  2024   00163E  3603               	rlcf	___awdiv@divisor^0,f,c
  2025   001640  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  2026   001642  2A05               	incf	___awdiv@counter^0,f,c
  2027   001644                     l2278:
  2028   001644  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  2029   001646  EF27  F00B         	goto	u1331
  2030   00164A  EF29  F00B         	goto	u1330
  2031   00164E                     u1331:
  2032   00164E  EF1E  F00B         	goto	l2276
  2033   001652                     u1330:
  2034   001652                     l2280:
  2035   001652  90D8               	bcf	status,0,c
  2036   001654  3607               	rlcf	___awdiv@quotient^0,f,c
  2037   001656  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  2038   001658  5003               	movf	___awdiv@divisor^0,w,c
  2039   00165A  5C01               	subwf	___awdiv@dividend^0,w,c
  2040   00165C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2041   00165E  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  2042   001660  A0D8               	btfss	status,0,c
  2043   001662  EF35  F00B         	goto	u1341
  2044   001666  EF37  F00B         	goto	u1340
  2045   00166A                     u1341:
  2046   00166A  EF3C  F00B         	goto	l2288
  2047   00166E                     u1340:
  2048   00166E  5003               	movf	___awdiv@divisor^0,w,c
  2049   001670  5E01               	subwf	___awdiv@dividend^0,f,c
  2050   001672  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2051   001674  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  2052   001676  8007               	bsf	___awdiv@quotient^0,0,c
  2053   001678                     l2288:
  2054   001678  90D8               	bcf	status,0,c
  2055   00167A  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  2056   00167C  3203               	rrcf	___awdiv@divisor^0,f,c
  2057   00167E  2E05               	decfsz	___awdiv@counter^0,f,c
  2058   001680  EF29  F00B         	goto	l2280
  2059   001684                     l2292:
  2060   001684  5006               	movf	___awdiv@sign^0,w,c
  2061   001686  B4D8               	btfsc	status,2,c
  2062   001688  EF48  F00B         	goto	u1351
  2063   00168C  EF4A  F00B         	goto	u1350
  2064   001690                     u1351:
  2065   001690  EF4E  F00B         	goto	l2296
  2066   001694                     u1350:
  2067   001694  6C07               	negf	___awdiv@quotient^0,c
  2068   001696  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  2069   001698  B0D8               	btfsc	status,0,c
  2070   00169A  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  2071   00169C                     l2296:
  2072   00169C  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2073   0016A0  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2074   0016A4  0012               	return		;funcret
  2075   0016A6                     __end_of___awdiv:
  2076                           	callstack 0
  2077                           
  2078 ;; *************** function _memset *****************
  2079 ;; Defined at:
  2080 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\memset.c"
  2081 ;; Parameters:    Size  Location     Type
  2082 ;;  dest            1    0[COMRAM] PTR void 
  2083 ;;		 -> lcd_counter_text(4), 
  2084 ;;  c               2    1[COMRAM] int 
  2085 ;;  n               2    3[COMRAM] unsigned int 
  2086 ;; Auto vars:     Size  Location     Type
  2087 ;;  p               1    5[COMRAM] PTR unsigned char 
  2088 ;;		 -> lcd_counter_text(4), 
  2089 ;; Return value:  Size  Location     Type
  2090 ;;                  1    wreg      PTR void 
  2091 ;; Registers used:
  2092 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2093 ;; Tracked objects:
  2094 ;;		On entry : 0/0
  2095 ;;		On exit  : 0/0
  2096 ;;		Unchanged: 0/0
  2097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2098 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2099 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2101 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2102 ;;Total ram usage:        6 bytes
  2103 ;; Hardware stack levels used: 1
  2104 ;; This function calls:
  2105 ;;		Nothing
  2106 ;; This function is called by:
  2107 ;;		_convert_byte_to_string
  2108 ;;		_convert_short_to_string
  2109 ;;		_convert_int_to_string
  2110 ;; This function uses a non-reentrant model
  2111 ;;
  2112                           
  2113                           	psect	text13
  2114   001CB2                     __ptext13:
  2115                           	callstack 0
  2116   001CB2                     _memset:
  2117                           	callstack 29
  2118   001CB2  C001  F006         	movff	memset@dest,memset@p
  2119   001CB6  EF63  F00E         	goto	l2654
  2120   001CBA                     l2650:
  2121   001CBA  5006               	movf	memset@p^0,w,c
  2122   001CBC  6ED9               	movwf	fsr2l,c
  2123   001CBE  6ADA               	clrf	fsr2h,c
  2124   001CC0  C002  FFDF         	movff	memset@c,indf2
  2125   001CC4  2A06               	incf	memset@p^0,f,c
  2126   001CC6                     l2654:
  2127   001CC6  0604               	decf	memset@n^0,f,c
  2128   001CC8  A0D8               	btfss	status,0,c
  2129   001CCA  0605               	decf	(memset@n+1)^0,f,c
  2130   001CCC  2804               	incf	memset@n^0,w,c
  2131   001CCE  E106               	bnz	u1771
  2132   001CD0  2805               	incf	(memset@n+1)^0,w,c
  2133   001CD2  A4D8               	btfss	status,2,c
  2134   001CD4  EF6E  F00E         	goto	u1771
  2135   001CD8  EF70  F00E         	goto	u1770
  2136   001CDC                     u1771:
  2137   001CDC  EF5D  F00E         	goto	l2650
  2138   001CE0                     u1770:
  2139   001CE0  0012               	return		;funcret
  2140   001CE2                     __end_of_memset:
  2141                           	callstack 0
  2142                           
  2143 ;; *************** function _application_intialize *****************
  2144 ;; Defined at:
  2145 ;;		line 115 in file "application.c"
  2146 ;; Parameters:    Size  Location     Type
  2147 ;;		None
  2148 ;; Auto vars:     Size  Location     Type
  2149 ;;  ret             1    0        unsigned char 
  2150 ;; Return value:  Size  Location     Type
  2151 ;;                  1    wreg      void 
  2152 ;; Registers used:
  2153 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2154 ;; Tracked objects:
  2155 ;;		On entry : 0/0
  2156 ;;		On exit  : 0/0
  2157 ;;		Unchanged: 0/0
  2158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2163 ;;Total ram usage:        0 bytes
  2164 ;; Hardware stack levels used: 1
  2165 ;; Hardware stack levels required when called: 4
  2166 ;; This function calls:
  2167 ;;		_lcd_4bit_initialize
  2168 ;;		_lcd_8bit_initialize
  2169 ;; This function is called by:
  2170 ;;		_main
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174                           	psect	text14
  2175   001D58                     __ptext14:
  2176                           	callstack 0
  2177   001D58                     _application_intialize:
  2178                           	callstack 26
  2179   001D58  0E59               	movlw	low _lcd_1
  2180   001D5A  6E0F               	movwf	lcd_4bit_initialize@_lcd_^0,c
  2181   001D5C  EC7C  F00A         	call	_lcd_4bit_initialize	;wreg free
  2182   001D60  0E4F               	movlw	low _lcd_2
  2183   001D62  6E11               	movwf	lcd_8bit_initialize@_lcd_^0,c
  2184   001D64  EC07  F00A         	call	_lcd_8bit_initialize	;wreg free
  2185   001D68  0012               	return		;funcret
  2186   001D6A                     __end_of_application_intialize:
  2187                           	callstack 0
  2188                           
  2189 ;; *************** function _lcd_8bit_initialize *****************
  2190 ;; Defined at:
  2191 ;;		line 217 in file "ECU_Layer/LCD/ecu_lcd.c"
  2192 ;; Parameters:    Size  Location     Type
  2193 ;;  _lcd_           1   16[COMRAM] PTR const struct .
  2194 ;;		 -> lcd_2(10), 
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;  ret             1   19[COMRAM] unsigned char 
  2197 ;;  l_data_pins_    1   18[COMRAM] unsigned char 
  2198 ;; Return value:  Size  Location     Type
  2199 ;;                  1    wreg      unsigned char 
  2200 ;; Registers used:
  2201 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2202 ;; Tracked objects:
  2203 ;;		On entry : 0/0
  2204 ;;		On exit  : 0/0
  2205 ;;		Unchanged: 0/0
  2206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2207 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2208 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2209 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2210 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2211 ;;Total ram usage:        4 bytes
  2212 ;; Hardware stack levels used: 1
  2213 ;; Hardware stack levels required when called: 3
  2214 ;; This function calls:
  2215 ;;		_gpio_pin_intialize
  2216 ;;		_lcd_8bit_send_command
  2217 ;; This function is called by:
  2218 ;;		_application_intialize
  2219 ;; This function uses a non-reentrant model
  2220 ;;
  2221                           
  2222                           	psect	text15
  2223   00140E                     __ptext15:
  2224                           	callstack 0
  2225   00140E                     _lcd_8bit_initialize:
  2226                           	callstack 26
  2227   00140E                     
  2228                           ;ECU_Layer/LCD/ecu_lcd.c: 219:     uint8 l_data_pins_counter = 0;
  2229   00140E  0E00               	movlw	0
  2230   001410  6E13               	movwf	lcd_8bit_initialize@l_data_pins_counter^0,c
  2231                           
  2232                           ;ECU_Layer/LCD/ecu_lcd.c: 220:     if(((void*)0) == _lcd_){
  2233   001412  5011               	movf	lcd_8bit_initialize@_lcd_^0,w,c
  2234   001414  A4D8               	btfss	status,2,c
  2235   001416  EF0F  F00A         	goto	u1721
  2236   00141A  EF11  F00A         	goto	u1720
  2237   00141E                     u1721:
  2238   00141E  EF15  F00A         	goto	l2562
  2239   001422                     u1720:
  2240   001422                     
  2241                           ;ECU_Layer/LCD/ecu_lcd.c: 221:         ret = (Std_ReturnType)0x00;
  2242   001422  0E00               	movlw	0
  2243   001424  6E14               	movwf	lcd_8bit_initialize@ret^0,c
  2244                           
  2245                           ;ECU_Layer/LCD/ecu_lcd.c: 222:     }
  2246   001426  EF7A  F00A         	goto	l2598
  2247   00142A                     l2562:
  2248                           
  2249                           ;ECU_Layer/LCD/ecu_lcd.c: 224:         ret = gpio_pin_intialize(&(_lcd_->lcd_rs));
  2250   00142A  C011  F009         	movff	lcd_8bit_initialize@_lcd_,gpio_pin_intialize@_pin_config
  2251   00142E  EC0D  F00D         	call	_gpio_pin_intialize	;wreg free
  2252   001432  6E14               	movwf	lcd_8bit_initialize@ret^0,c
  2253                           
  2254                           ;ECU_Layer/LCD/ecu_lcd.c: 225:         ret = gpio_pin_intialize(&(_lcd_->lcd_en));
  2255   001434  2811               	incf	lcd_8bit_initialize@_lcd_^0,w,c
  2256   001436  6E09               	movwf	gpio_pin_intialize@_pin_config^0,c
  2257   001438  EC0D  F00D         	call	_gpio_pin_intialize	;wreg free
  2258   00143C  6E14               	movwf	lcd_8bit_initialize@ret^0,c
  2259   00143E                     
  2260                           ;ECU_Layer/LCD/ecu_lcd.c: 226:         for(l_data_pins_counter = 0 ; l_data_pins_counter
      +                          <8 ; l_data_pins_counter++){
  2261   00143E  0E00               	movlw	0
  2262   001440  6E13               	movwf	lcd_8bit_initialize@l_data_pins_counter^0,c
  2263   001442                     l2570:
  2264   001442  5011               	movf	lcd_8bit_initialize@_lcd_^0,w,c
  2265   001444  2413               	addwf	lcd_8bit_initialize@l_data_pins_counter^0,w,c
  2266   001446  0F02               	addlw	2
  2267   001448  6E09               	movwf	gpio_pin_intialize@_pin_config^0,c
  2268   00144A  EC0D  F00D         	call	_gpio_pin_intialize	;wreg free
  2269   00144E                     
  2270                           ;ECU_Layer/LCD/ecu_lcd.c: 228:         }
  2271   00144E  2A13               	incf	lcd_8bit_initialize@l_data_pins_counter^0,f,c
  2272   001450  0E07               	movlw	7
  2273   001452  6413               	cpfsgt	lcd_8bit_initialize@l_data_pins_counter^0,c
  2274   001454  EF2E  F00A         	goto	u1731
  2275   001458  EF30  F00A         	goto	u1730
  2276   00145C                     u1731:
  2277   00145C  EF21  F00A         	goto	l2570
  2278   001460                     u1730:
  2279   001460                     
  2280                           ;ECU_Layer/LCD/ecu_lcd.c: 229:         _delay((unsigned long)((20)*(4000000UL/4000.0)));
  2281   001460  0E1A               	movlw	26
  2282   001462  6E12               	movwf	??_lcd_8bit_initialize^0,c
  2283   001464  0EF8               	movlw	248
  2284   001466                     u2247:
  2285   001466  2EE8               	decfsz	wreg,f,c
  2286   001468  D7FE               	bra	u2247
  2287   00146A  2E12               	decfsz	??_lcd_8bit_initialize^0,f,c
  2288   00146C  D7FC               	bra	u2247
  2289   00146E  D000               	nop2	
  2290   001470  C011  F00B         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
  2291   001474  0E38               	movlw	56
  2292   001476  6E0C               	movwf	lcd_8bit_send_command@command^0,c
  2293   001478  ECD2  F00C         	call	_lcd_8bit_send_command	;wreg free
  2294   00147C                     
  2295                           ;ECU_Layer/LCD/ecu_lcd.c: 231:         _delay((unsigned long)((5)*(4000000UL/4000.0)));
  2296   00147C  0E07               	movlw	7
  2297   00147E  6E12               	movwf	??_lcd_8bit_initialize^0,c
  2298   001480  0E7D               	movlw	125
  2299   001482                     u2257:
  2300   001482  2EE8               	decfsz	wreg,f,c
  2301   001484  D7FE               	bra	u2257
  2302   001486  2E12               	decfsz	??_lcd_8bit_initialize^0,f,c
  2303   001488  D7FC               	bra	u2257
  2304   00148A  0000               	nop	
  2305   00148C  C011  F00B         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
  2306   001490  0E38               	movlw	56
  2307   001492  6E0C               	movwf	lcd_8bit_send_command@command^0,c
  2308   001494  ECD2  F00C         	call	_lcd_8bit_send_command	;wreg free
  2309   001498                     
  2310                           ;ECU_Layer/LCD/ecu_lcd.c: 233:         _delay((unsigned long)((150)*(4000000UL/4000000.0
      +                          )));
  2311   001498  0E32               	movlw	50
  2312   00149A                     u2267:
  2313   00149A  2EE8               	decfsz	wreg,f,c
  2314   00149C  D7FE               	bra	u2267
  2315   00149E  C011  F00B         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
  2316   0014A2  0E38               	movlw	56
  2317   0014A4  6E0C               	movwf	lcd_8bit_send_command@command^0,c
  2318   0014A6  ECD2  F00C         	call	_lcd_8bit_send_command	;wreg free
  2319   0014AA  C011  F00B         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
  2320   0014AE  0E01               	movlw	1
  2321   0014B0  6E0C               	movwf	lcd_8bit_send_command@command^0,c
  2322   0014B2  ECD2  F00C         	call	_lcd_8bit_send_command	;wreg free
  2323   0014B6  C011  F00B         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
  2324   0014BA  0E02               	movlw	2
  2325   0014BC  6E0C               	movwf	lcd_8bit_send_command@command^0,c
  2326   0014BE  ECD2  F00C         	call	_lcd_8bit_send_command	;wreg free
  2327   0014C2  C011  F00B         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
  2328   0014C6  0E06               	movlw	6
  2329   0014C8  6E0C               	movwf	lcd_8bit_send_command@command^0,c
  2330   0014CA  ECD2  F00C         	call	_lcd_8bit_send_command	;wreg free
  2331   0014CE  C011  F00B         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
  2332   0014D2  0E0C               	movlw	12
  2333   0014D4  6E0C               	movwf	lcd_8bit_send_command@command^0,c
  2334   0014D6  ECD2  F00C         	call	_lcd_8bit_send_command	;wreg free
  2335   0014DA  C011  F00B         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
  2336   0014DE  0E38               	movlw	56
  2337   0014E0  6E0C               	movwf	lcd_8bit_send_command@command^0,c
  2338   0014E2  ECD2  F00C         	call	_lcd_8bit_send_command	;wreg free
  2339   0014E6                     
  2340                           ;ECU_Layer/LCD/ecu_lcd.c: 241:         ret = lcd_8bit_send_command(_lcd_, 0x80);
  2341   0014E6  C011  F00B         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
  2342   0014EA  0E80               	movlw	128
  2343   0014EC  6E0C               	movwf	lcd_8bit_send_command@command^0,c
  2344   0014EE  ECD2  F00C         	call	_lcd_8bit_send_command	;wreg free
  2345   0014F2  6E14               	movwf	lcd_8bit_initialize@ret^0,c
  2346   0014F4                     l2598:
  2347                           
  2348                           ;ECU_Layer/LCD/ecu_lcd.c: 245:     return ret;
  2349   0014F4  5014               	movf	lcd_8bit_initialize@ret^0,w,c
  2350   0014F6  0012               	return		;funcret
  2351   0014F8                     __end_of_lcd_8bit_initialize:
  2352                           	callstack 0
  2353                           
  2354 ;; *************** function _lcd_8bit_send_command *****************
  2355 ;; Defined at:
  2356 ;;		line 256 in file "ECU_Layer/LCD/ecu_lcd.c"
  2357 ;; Parameters:    Size  Location     Type
  2358 ;;  _lcd_           1   10[COMRAM] PTR const struct .
  2359 ;;		 -> lcd_2(10), 
  2360 ;;  command         1   11[COMRAM] unsigned char 
  2361 ;; Auto vars:     Size  Location     Type
  2362 ;;  l_pin_counte    1   15[COMRAM] unsigned char 
  2363 ;;  ret             1   14[COMRAM] unsigned char 
  2364 ;; Return value:  Size  Location     Type
  2365 ;;                  1    wreg      unsigned char 
  2366 ;; Registers used:
  2367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2368 ;; Tracked objects:
  2369 ;;		On entry : 0/0
  2370 ;;		On exit  : 0/0
  2371 ;;		Unchanged: 0/0
  2372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2373 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2374 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2375 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2376 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2377 ;;Total ram usage:        6 bytes
  2378 ;; Hardware stack levels used: 1
  2379 ;; Hardware stack levels required when called: 2
  2380 ;; This function calls:
  2381 ;;		_gpio_pin_write_logic
  2382 ;;		_lcd_8bit_send_enable_signal
  2383 ;; This function is called by:
  2384 ;;		_lcd_8bit_initialize
  2385 ;;		_lcd_8bit_set_cursor
  2386 ;; This function uses a non-reentrant model
  2387 ;;
  2388                           
  2389                           	psect	text16
  2390   0019A4                     __ptext16:
  2391                           	callstack 0
  2392   0019A4                     _lcd_8bit_send_command:
  2393                           	callstack 26
  2394   0019A4                     
  2395                           ;ECU_Layer/LCD/ecu_lcd.c: 258:     uint8 l_pin_counter = 0;
  2396   0019A4  0E00               	movlw	0
  2397   0019A6  6E10               	movwf	lcd_8bit_send_command@l_pin_counter^0,c
  2398                           
  2399                           ;ECU_Layer/LCD/ecu_lcd.c: 259:     if(((void*)0) == _lcd_){
  2400   0019A8  500B               	movf	lcd_8bit_send_command@_lcd_^0,w,c
  2401   0019AA  A4D8               	btfss	status,2,c
  2402   0019AC  EFDA  F00C         	goto	u1661
  2403   0019B0  EFDC  F00C         	goto	u1660
  2404   0019B4                     u1661:
  2405   0019B4  EFE0  F00C         	goto	l2484
  2406   0019B8                     u1660:
  2407   0019B8                     
  2408                           ;ECU_Layer/LCD/ecu_lcd.c: 260:         ret = (Std_ReturnType)0x00;
  2409   0019B8  0E00               	movlw	0
  2410   0019BA  6E0F               	movwf	lcd_8bit_send_command@ret^0,c
  2411                           
  2412                           ;ECU_Layer/LCD/ecu_lcd.c: 261:     }
  2413   0019BC  EF0B  F00D         	goto	l2500
  2414   0019C0                     l2484:
  2415   0019C0  C00B  F001         	movff	lcd_8bit_send_command@_lcd_,gpio_pin_write_logic@_pin_config
  2416   0019C4  0E00               	movlw	0
  2417   0019C6  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  2418   0019C8  EC7F  F009         	call	_gpio_pin_write_logic	;wreg free
  2419   0019CC                     
  2420                           ;ECU_Layer/LCD/ecu_lcd.c: 264:         for(l_pin_counter = 0 ; l_pin_counter < 8 ; l_pin
      +                          _counter++){
  2421   0019CC  0E00               	movlw	0
  2422   0019CE  6E10               	movwf	lcd_8bit_send_command@l_pin_counter^0,c
  2423   0019D0                     l2492:
  2424   0019D0  500B               	movf	lcd_8bit_send_command@_lcd_^0,w,c
  2425   0019D2  2410               	addwf	lcd_8bit_send_command@l_pin_counter^0,w,c
  2426   0019D4  0F02               	addlw	2
  2427   0019D6  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2428   0019D8  C010  F00D         	movff	lcd_8bit_send_command@l_pin_counter,??_lcd_8bit_send_command
  2429   0019DC  C00C  F00E         	movff	lcd_8bit_send_command@command,??_lcd_8bit_send_command+1
  2430   0019E0  2A0D               	incf	??_lcd_8bit_send_command^0,f,c
  2431   0019E2  EFF5  F00C         	goto	u1674
  2432   0019E6                     u1675:
  2433   0019E6  90D8               	bcf	status,0,c
  2434   0019E8  320E               	rrcf	(??_lcd_8bit_send_command+1)^0,f,c
  2435   0019EA                     u1674:
  2436   0019EA  2E0D               	decfsz	??_lcd_8bit_send_command^0,f,c
  2437   0019EC  EFF3  F00C         	goto	u1675
  2438   0019F0  500E               	movf	(??_lcd_8bit_send_command+1)^0,w,c
  2439   0019F2  0B01               	andlw	1
  2440   0019F4  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  2441   0019F6  EC7F  F009         	call	_gpio_pin_write_logic	;wreg free
  2442   0019FA                     
  2443                           ;ECU_Layer/LCD/ecu_lcd.c: 266:         }
  2444   0019FA  2A10               	incf	lcd_8bit_send_command@l_pin_counter^0,f,c
  2445   0019FC  0E07               	movlw	7
  2446   0019FE  6410               	cpfsgt	lcd_8bit_send_command@l_pin_counter^0,c
  2447   001A00  EF04  F00D         	goto	u1681
  2448   001A04  EF06  F00D         	goto	u1680
  2449   001A08                     u1681:
  2450   001A08  EFE8  F00C         	goto	l2492
  2451   001A0C                     u1680:
  2452   001A0C                     
  2453                           ;ECU_Layer/LCD/ecu_lcd.c: 267:         ret = lcd_8bit_send_enable_signal(_lcd_);
  2454   001A0C  C00B  F009         	movff	lcd_8bit_send_command@_lcd_,lcd_8bit_send_enable_signal@_lcd_
  2455   001A10  EC88  F00E         	call	_lcd_8bit_send_enable_signal	;wreg free
  2456   001A14  6E0F               	movwf	lcd_8bit_send_command@ret^0,c
  2457   001A16                     l2500:
  2458                           
  2459                           ;ECU_Layer/LCD/ecu_lcd.c: 271:     return ret;
  2460   001A16  500F               	movf	lcd_8bit_send_command@ret^0,w,c
  2461   001A18  0012               	return		;funcret
  2462   001A1A                     __end_of_lcd_8bit_send_command:
  2463                           	callstack 0
  2464                           
  2465 ;; *************** function _lcd_8bit_send_enable_signal *****************
  2466 ;; Defined at:
  2467 ;;		line 450 in file "ECU_Layer/LCD/ecu_lcd.c"
  2468 ;; Parameters:    Size  Location     Type
  2469 ;;  _lcd_           1    8[COMRAM] PTR const struct .
  2470 ;;		 -> lcd_2(10), 
  2471 ;; Auto vars:     Size  Location     Type
  2472 ;;  ret             1    9[COMRAM] unsigned char 
  2473 ;; Return value:  Size  Location     Type
  2474 ;;                  1    wreg      unsigned char 
  2475 ;; Registers used:
  2476 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2477 ;; Tracked objects:
  2478 ;;		On entry : 0/0
  2479 ;;		On exit  : 0/0
  2480 ;;		Unchanged: 0/0
  2481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2482 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2483 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2485 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2486 ;;Total ram usage:        2 bytes
  2487 ;; Hardware stack levels used: 1
  2488 ;; Hardware stack levels required when called: 1
  2489 ;; This function calls:
  2490 ;;		_gpio_pin_write_logic
  2491 ;; This function is called by:
  2492 ;;		_lcd_8bit_send_command
  2493 ;;		_lcd_8bit_send_char_data
  2494 ;; This function uses a non-reentrant model
  2495 ;;
  2496                           
  2497                           	psect	text17
  2498   001D10                     __ptext17:
  2499                           	callstack 0
  2500   001D10                     _lcd_8bit_send_enable_signal:
  2501                           	callstack 26
  2502   001D10  2809               	incf	lcd_8bit_send_enable_signal@_lcd_^0,w,c
  2503   001D12  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2504   001D14  0E01               	movlw	1
  2505   001D16  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  2506   001D18  EC7F  F009         	call	_gpio_pin_write_logic	;wreg free
  2507   001D1C                     
  2508                           ;ECU_Layer/LCD/ecu_lcd.c: 453:     _delay((unsigned long)((5)*(4000000UL/4000000.0)));
  2509   001D1C  D000               	nop2		;2 cycle nop
  2510   001D1E  D000               	nop2		;2 cycle nop
  2511   001D20  0000               	nop	
  2512   001D22                     
  2513                           ;ECU_Layer/LCD/ecu_lcd.c: 454:     ret = gpio_pin_write_logic(&(_lcd_->lcd_en), GPIO_LOW
      +                          );
  2514   001D22  2809               	incf	lcd_8bit_send_enable_signal@_lcd_^0,w,c
  2515   001D24  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2516   001D26  0E00               	movlw	0
  2517   001D28  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  2518   001D2A  EC7F  F009         	call	_gpio_pin_write_logic	;wreg free
  2519   001D2E  6E0A               	movwf	lcd_8bit_send_enable_signal@ret^0,c
  2520                           
  2521                           ;ECU_Layer/LCD/ecu_lcd.c: 455:     return ret;
  2522   001D30  500A               	movf	lcd_8bit_send_enable_signal@ret^0,w,c
  2523   001D32  0012               	return		;funcret
  2524   001D34                     __end_of_lcd_8bit_send_enable_signal:
  2525                           	callstack 0
  2526                           
  2527 ;; *************** function _lcd_4bit_initialize *****************
  2528 ;; Defined at:
  2529 ;;		line 28 in file "ECU_Layer/LCD/ecu_lcd.c"
  2530 ;; Parameters:    Size  Location     Type
  2531 ;;  _lcd_           1   14[COMRAM] PTR const struct .
  2532 ;;		 -> lcd_1(6), 
  2533 ;; Auto vars:     Size  Location     Type
  2534 ;;  ret             1   17[COMRAM] unsigned char 
  2535 ;;  l_data_pins_    1   16[COMRAM] unsigned char 
  2536 ;; Return value:  Size  Location     Type
  2537 ;;                  1    wreg      unsigned char 
  2538 ;; Registers used:
  2539 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 0/0
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2545 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2546 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2547 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2548 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2549 ;;Total ram usage:        4 bytes
  2550 ;; Hardware stack levels used: 1
  2551 ;; Hardware stack levels required when called: 3
  2552 ;; This function calls:
  2553 ;;		_gpio_pin_intialize
  2554 ;;		_lcd_4bit_send_command
  2555 ;; This function is called by:
  2556 ;;		_application_intialize
  2557 ;; This function uses a non-reentrant model
  2558 ;;
  2559                           
  2560                           	psect	text18
  2561   0014F8                     __ptext18:
  2562                           	callstack 0
  2563   0014F8                     _lcd_4bit_initialize:
  2564                           	callstack 26
  2565   0014F8                     
  2566                           ;ECU_Layer/LCD/ecu_lcd.c: 30:     uint8 l_data_pins_counter = 0;
  2567   0014F8  0E00               	movlw	0
  2568   0014FA  6E11               	movwf	lcd_4bit_initialize@l_data_pins_counter^0,c
  2569                           
  2570                           ;ECU_Layer/LCD/ecu_lcd.c: 31:     if(((void*)0) == _lcd_){
  2571   0014FC  500F               	movf	lcd_4bit_initialize@_lcd_^0,w,c
  2572   0014FE  A4D8               	btfss	status,2,c
  2573   001500  EF84  F00A         	goto	u1701
  2574   001504  EF86  F00A         	goto	u1700
  2575   001508                     u1701:
  2576   001508  EF8A  F00A         	goto	l2518
  2577   00150C                     u1700:
  2578   00150C                     
  2579                           ;ECU_Layer/LCD/ecu_lcd.c: 32:         ret = (Std_ReturnType)0x00;
  2580   00150C  0E00               	movlw	0
  2581   00150E  6E12               	movwf	lcd_4bit_initialize@ret^0,c
  2582                           
  2583                           ;ECU_Layer/LCD/ecu_lcd.c: 33:     }
  2584   001510  EFEF  F00A         	goto	l2554
  2585   001514                     l2518:
  2586                           
  2587                           ;ECU_Layer/LCD/ecu_lcd.c: 35:         ret = gpio_pin_intialize(&(_lcd_->lcd_rs));
  2588   001514  C00F  F009         	movff	lcd_4bit_initialize@_lcd_,gpio_pin_intialize@_pin_config
  2589   001518  EC0D  F00D         	call	_gpio_pin_intialize	;wreg free
  2590   00151C  6E12               	movwf	lcd_4bit_initialize@ret^0,c
  2591                           
  2592                           ;ECU_Layer/LCD/ecu_lcd.c: 36:         ret = gpio_pin_intialize(&(_lcd_->lcd_en));
  2593   00151E  280F               	incf	lcd_4bit_initialize@_lcd_^0,w,c
  2594   001520  6E09               	movwf	gpio_pin_intialize@_pin_config^0,c
  2595   001522  EC0D  F00D         	call	_gpio_pin_intialize	;wreg free
  2596   001526  6E12               	movwf	lcd_4bit_initialize@ret^0,c
  2597   001528                     
  2598                           ;ECU_Layer/LCD/ecu_lcd.c: 37:         for(l_data_pins_counter = 0 ; l_data_pins_counter<
      +                          4 ; l_data_pins_counter++){
  2599   001528  0E00               	movlw	0
  2600   00152A  6E11               	movwf	lcd_4bit_initialize@l_data_pins_counter^0,c
  2601   00152C                     l2526:
  2602   00152C  500F               	movf	lcd_4bit_initialize@_lcd_^0,w,c
  2603   00152E  2411               	addwf	lcd_4bit_initialize@l_data_pins_counter^0,w,c
  2604   001530  0F02               	addlw	2
  2605   001532  6E09               	movwf	gpio_pin_intialize@_pin_config^0,c
  2606   001534  EC0D  F00D         	call	_gpio_pin_intialize	;wreg free
  2607   001538                     
  2608                           ;ECU_Layer/LCD/ecu_lcd.c: 39:         }
  2609   001538  2A11               	incf	lcd_4bit_initialize@l_data_pins_counter^0,f,c
  2610   00153A  0E03               	movlw	3
  2611   00153C  6411               	cpfsgt	lcd_4bit_initialize@l_data_pins_counter^0,c
  2612   00153E  EFA3  F00A         	goto	u1711
  2613   001542  EFA5  F00A         	goto	u1710
  2614   001546                     u1711:
  2615   001546  EF96  F00A         	goto	l2526
  2616   00154A                     u1710:
  2617   00154A                     
  2618                           ;ECU_Layer/LCD/ecu_lcd.c: 41:         _delay((unsigned long)((20)*(4000000UL/4000.0)));
  2619   00154A  0E1A               	movlw	26
  2620   00154C  6E10               	movwf	??_lcd_4bit_initialize^0,c
  2621   00154E  0EF8               	movlw	248
  2622   001550                     u2277:
  2623   001550  2EE8               	decfsz	wreg,f,c
  2624   001552  D7FE               	bra	u2277
  2625   001554  2E10               	decfsz	??_lcd_4bit_initialize^0,f,c
  2626   001556  D7FC               	bra	u2277
  2627   001558  D000               	nop2	
  2628   00155A  C00F  F00C         	movff	lcd_4bit_initialize@_lcd_,lcd_4bit_send_command@_lcd_
  2629   00155E  0E38               	movlw	56
  2630   001560  6E0D               	movwf	lcd_4bit_send_command@command^0,c
  2631   001562  EC3C  F00D         	call	_lcd_4bit_send_command	;wreg free
  2632   001566                     
  2633                           ;ECU_Layer/LCD/ecu_lcd.c: 43:         _delay((unsigned long)((5)*(4000000UL/4000.0)));
  2634   001566  0E07               	movlw	7
  2635   001568  6E10               	movwf	??_lcd_4bit_initialize^0,c
  2636   00156A  0E7D               	movlw	125
  2637   00156C                     u2287:
  2638   00156C  2EE8               	decfsz	wreg,f,c
  2639   00156E  D7FE               	bra	u2287
  2640   001570  2E10               	decfsz	??_lcd_4bit_initialize^0,f,c
  2641   001572  D7FC               	bra	u2287
  2642   001574  0000               	nop	
  2643   001576  C00F  F00C         	movff	lcd_4bit_initialize@_lcd_,lcd_4bit_send_command@_lcd_
  2644   00157A  0E38               	movlw	56
  2645   00157C  6E0D               	movwf	lcd_4bit_send_command@command^0,c
  2646   00157E  EC3C  F00D         	call	_lcd_4bit_send_command	;wreg free
  2647   001582                     
  2648                           ;ECU_Layer/LCD/ecu_lcd.c: 45:         _delay((unsigned long)((150)*(4000000UL/4000000.0)
      +                          ));
  2649   001582  0E32               	movlw	50
  2650   001584                     u2297:
  2651   001584  2EE8               	decfsz	wreg,f,c
  2652   001586  D7FE               	bra	u2297
  2653   001588  C00F  F00C         	movff	lcd_4bit_initialize@_lcd_,lcd_4bit_send_command@_lcd_
  2654   00158C  0E38               	movlw	56
  2655   00158E  6E0D               	movwf	lcd_4bit_send_command@command^0,c
  2656   001590  EC3C  F00D         	call	_lcd_4bit_send_command	;wreg free
  2657   001594  C00F  F00C         	movff	lcd_4bit_initialize@_lcd_,lcd_4bit_send_command@_lcd_
  2658   001598  0E01               	movlw	1
  2659   00159A  6E0D               	movwf	lcd_4bit_send_command@command^0,c
  2660   00159C  EC3C  F00D         	call	_lcd_4bit_send_command	;wreg free
  2661   0015A0  C00F  F00C         	movff	lcd_4bit_initialize@_lcd_,lcd_4bit_send_command@_lcd_
  2662   0015A4  0E02               	movlw	2
  2663   0015A6  6E0D               	movwf	lcd_4bit_send_command@command^0,c
  2664   0015A8  EC3C  F00D         	call	_lcd_4bit_send_command	;wreg free
  2665   0015AC  C00F  F00C         	movff	lcd_4bit_initialize@_lcd_,lcd_4bit_send_command@_lcd_
  2666   0015B0  0E06               	movlw	6
  2667   0015B2  6E0D               	movwf	lcd_4bit_send_command@command^0,c
  2668   0015B4  EC3C  F00D         	call	_lcd_4bit_send_command	;wreg free
  2669   0015B8  C00F  F00C         	movff	lcd_4bit_initialize@_lcd_,lcd_4bit_send_command@_lcd_
  2670   0015BC  0E0C               	movlw	12
  2671   0015BE  6E0D               	movwf	lcd_4bit_send_command@command^0,c
  2672   0015C0  EC3C  F00D         	call	_lcd_4bit_send_command	;wreg free
  2673   0015C4  C00F  F00C         	movff	lcd_4bit_initialize@_lcd_,lcd_4bit_send_command@_lcd_
  2674   0015C8  0E28               	movlw	40
  2675   0015CA  6E0D               	movwf	lcd_4bit_send_command@command^0,c
  2676   0015CC  EC3C  F00D         	call	_lcd_4bit_send_command	;wreg free
  2677   0015D0                     
  2678                           ;ECU_Layer/LCD/ecu_lcd.c: 53:         ret = lcd_4bit_send_command(_lcd_, 0x80);
  2679   0015D0  C00F  F00C         	movff	lcd_4bit_initialize@_lcd_,lcd_4bit_send_command@_lcd_
  2680   0015D4  0E80               	movlw	128
  2681   0015D6  6E0D               	movwf	lcd_4bit_send_command@command^0,c
  2682   0015D8  EC3C  F00D         	call	_lcd_4bit_send_command	;wreg free
  2683   0015DC  6E12               	movwf	lcd_4bit_initialize@ret^0,c
  2684   0015DE                     l2554:
  2685                           
  2686                           ;ECU_Layer/LCD/ecu_lcd.c: 58:     return ret;
  2687   0015DE  5012               	movf	lcd_4bit_initialize@ret^0,w,c
  2688   0015E0  0012               	return		;funcret
  2689   0015E2                     __end_of_lcd_4bit_initialize:
  2690                           	callstack 0
  2691                           
  2692 ;; *************** function _lcd_4bit_send_command *****************
  2693 ;; Defined at:
  2694 ;;		line 69 in file "ECU_Layer/LCD/ecu_lcd.c"
  2695 ;; Parameters:    Size  Location     Type
  2696 ;;  _lcd_           1   11[COMRAM] PTR const struct .
  2697 ;;		 -> lcd_1(6), 
  2698 ;;  command         1   12[COMRAM] unsigned char 
  2699 ;; Auto vars:     Size  Location     Type
  2700 ;;  ret             1   13[COMRAM] unsigned char 
  2701 ;; Return value:  Size  Location     Type
  2702 ;;                  1    wreg      unsigned char 
  2703 ;; Registers used:
  2704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2705 ;; Tracked objects:
  2706 ;;		On entry : 0/0
  2707 ;;		On exit  : 0/0
  2708 ;;		Unchanged: 0/0
  2709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2710 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2711 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2713 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2714 ;;Total ram usage:        3 bytes
  2715 ;; Hardware stack levels used: 1
  2716 ;; Hardware stack levels required when called: 2
  2717 ;; This function calls:
  2718 ;;		_gpio_pin_write_logic
  2719 ;;		_lcd_4bit_send_enable_signal
  2720 ;;		_lcd_send_4bits
  2721 ;; This function is called by:
  2722 ;;		_lcd_4bit_initialize
  2723 ;;		_lcd_4bit_set_cursor
  2724 ;; This function uses a non-reentrant model
  2725 ;;
  2726                           
  2727                           	psect	text19
  2728   001A78                     __ptext19:
  2729                           	callstack 0
  2730   001A78                     _lcd_4bit_send_command:
  2731                           	callstack 26
  2732   001A78                     
  2733                           ;ECU_Layer/LCD/ecu_lcd.c: 71:     if(((void*)0) == _lcd_){
  2734   001A78  500C               	movf	lcd_4bit_send_command@_lcd_^0,w,c
  2735   001A7A  A4D8               	btfss	status,2,c
  2736   001A7C  EF42  F00D         	goto	u1651
  2737   001A80  EF44  F00D         	goto	u1650
  2738   001A84                     u1651:
  2739   001A84  EF48  F00D         	goto	l2474
  2740   001A88                     u1650:
  2741   001A88                     
  2742                           ;ECU_Layer/LCD/ecu_lcd.c: 72:         ret = (Std_ReturnType)0x00;
  2743   001A88  0E00               	movlw	0
  2744   001A8A  6E0E               	movwf	lcd_4bit_send_command@ret^0,c
  2745                           
  2746                           ;ECU_Layer/LCD/ecu_lcd.c: 73:     }
  2747   001A8C  EF68  F00D         	goto	l2476
  2748   001A90                     l2474:
  2749                           
  2750                           ;ECU_Layer/LCD/ecu_lcd.c: 75:         ret = gpio_pin_write_logic(&(_lcd_->lcd_rs), GPIO_
      +                          LOW);
  2751   001A90  C00C  F001         	movff	lcd_4bit_send_command@_lcd_,gpio_pin_write_logic@_pin_config
  2752   001A94  0E00               	movlw	0
  2753   001A96  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  2754   001A98  EC7F  F009         	call	_gpio_pin_write_logic	;wreg free
  2755   001A9C  6E0E               	movwf	lcd_4bit_send_command@ret^0,c
  2756                           
  2757                           ;ECU_Layer/LCD/ecu_lcd.c: 76:         ret = lcd_send_4bits(_lcd_ , command>>4);
  2758   001A9E  C00C  F009         	movff	lcd_4bit_send_command@_lcd_,lcd_send_4bits@_lcd_
  2759   001AA2  380D               	swapf	lcd_4bit_send_command@command^0,w,c
  2760   001AA4  0B0F               	andlw	15
  2761   001AA6  6E0A               	movwf	lcd_send_4bits@_data_command^0,c
  2762   001AA8  EC97  F00D         	call	_lcd_send_4bits	;wreg free
  2763   001AAC  6E0E               	movwf	lcd_4bit_send_command@ret^0,c
  2764                           
  2765                           ;ECU_Layer/LCD/ecu_lcd.c: 77:         ret = lcd_4bit_send_enable_signal(_lcd_);
  2766   001AAE  C00C  F009         	movff	lcd_4bit_send_command@_lcd_,lcd_4bit_send_enable_signal@_lcd_
  2767   001AB2  EC9A  F00E         	call	_lcd_4bit_send_enable_signal	;wreg free
  2768   001AB6  6E0E               	movwf	lcd_4bit_send_command@ret^0,c
  2769                           
  2770                           ;ECU_Layer/LCD/ecu_lcd.c: 78:         ret = lcd_send_4bits(_lcd_ , command);
  2771   001AB8  C00C  F009         	movff	lcd_4bit_send_command@_lcd_,lcd_send_4bits@_lcd_
  2772   001ABC  C00D  F00A         	movff	lcd_4bit_send_command@command,lcd_send_4bits@_data_command
  2773   001AC0  EC97  F00D         	call	_lcd_send_4bits	;wreg free
  2774   001AC4  6E0E               	movwf	lcd_4bit_send_command@ret^0,c
  2775                           
  2776                           ;ECU_Layer/LCD/ecu_lcd.c: 79:         ret = lcd_4bit_send_enable_signal(_lcd_);
  2777   001AC6  C00C  F009         	movff	lcd_4bit_send_command@_lcd_,lcd_4bit_send_enable_signal@_lcd_
  2778   001ACA  EC9A  F00E         	call	_lcd_4bit_send_enable_signal	;wreg free
  2779   001ACE  6E0E               	movwf	lcd_4bit_send_command@ret^0,c
  2780   001AD0                     l2476:
  2781                           
  2782                           ;ECU_Layer/LCD/ecu_lcd.c: 83:     return ret;
  2783   001AD0  500E               	movf	lcd_4bit_send_command@ret^0,w,c
  2784   001AD2  0012               	return		;funcret
  2785   001AD4                     __end_of_lcd_4bit_send_command:
  2786                           	callstack 0
  2787                           
  2788 ;; *************** function _lcd_send_4bits *****************
  2789 ;; Defined at:
  2790 ;;		line 432 in file "ECU_Layer/LCD/ecu_lcd.c"
  2791 ;; Parameters:    Size  Location     Type
  2792 ;;  _lcd_           1    8[COMRAM] PTR const struct .
  2793 ;;		 -> lcd_1(6), 
  2794 ;;  _data_comman    1    9[COMRAM] unsigned char 
  2795 ;; Auto vars:     Size  Location     Type
  2796 ;;  ret             1   10[COMRAM] unsigned char 
  2797 ;; Return value:  Size  Location     Type
  2798 ;;                  1    wreg      unsigned char 
  2799 ;; Registers used:
  2800 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2801 ;; Tracked objects:
  2802 ;;		On entry : 0/0
  2803 ;;		On exit  : 0/0
  2804 ;;		Unchanged: 0/0
  2805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2806 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2807 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2809 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2810 ;;Total ram usage:        3 bytes
  2811 ;; Hardware stack levels used: 1
  2812 ;; Hardware stack levels required when called: 1
  2813 ;; This function calls:
  2814 ;;		_gpio_pin_write_logic
  2815 ;; This function is called by:
  2816 ;;		_lcd_4bit_send_command
  2817 ;;		_lcd_4bit_send_char_data
  2818 ;; This function uses a non-reentrant model
  2819 ;;
  2820                           
  2821                           	psect	text20
  2822   001B2E                     __ptext20:
  2823                           	callstack 0
  2824   001B2E                     _lcd_send_4bits:
  2825                           	callstack 26
  2826   001B2E  5009               	movf	lcd_send_4bits@_lcd_^0,w,c
  2827   001B30  0F02               	addlw	2
  2828   001B32  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2829   001B34  500A               	movf	lcd_send_4bits@_data_command^0,w,c
  2830   001B36  0B01               	andlw	1
  2831   001B38  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  2832   001B3A  EC7F  F009         	call	_gpio_pin_write_logic	;wreg free
  2833   001B3E  5009               	movf	lcd_send_4bits@_lcd_^0,w,c
  2834   001B40  0F03               	addlw	3
  2835   001B42  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2836   001B44  90D8               	bcf	status,0,c
  2837   001B46  300A               	rrcf	lcd_send_4bits@_data_command^0,w,c
  2838   001B48  0B01               	andlw	1
  2839   001B4A  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  2840   001B4C  EC7F  F009         	call	_gpio_pin_write_logic	;wreg free
  2841   001B50  5009               	movf	lcd_send_4bits@_lcd_^0,w,c
  2842   001B52  0F04               	addlw	4
  2843   001B54  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2844   001B56  400A               	rrncf	lcd_send_4bits@_data_command^0,w,c
  2845   001B58  42E8               	rrncf	wreg,f,c
  2846   001B5A  0B3F               	andlw	63
  2847   001B5C  0B01               	andlw	1
  2848   001B5E  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  2849   001B60  EC7F  F009         	call	_gpio_pin_write_logic	;wreg free
  2850   001B64                     
  2851                           ;ECU_Layer/LCD/ecu_lcd.c: 437:     ret = gpio_pin_write_logic(&(_lcd_->lcd_data[3]), (_d
      +                          ata_command >> 3) & (uint8)0x01);
  2852   001B64  5009               	movf	lcd_send_4bits@_lcd_^0,w,c
  2853   001B66  0F05               	addlw	5
  2854   001B68  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2855   001B6A  380A               	swapf	lcd_send_4bits@_data_command^0,w,c
  2856   001B6C  46E8               	rlncf	wreg,f,c
  2857   001B6E  0B1F               	andlw	31
  2858   001B70  0B01               	andlw	1
  2859   001B72  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  2860   001B74  EC7F  F009         	call	_gpio_pin_write_logic	;wreg free
  2861   001B78  6E0B               	movwf	lcd_send_4bits@ret^0,c
  2862                           
  2863                           ;ECU_Layer/LCD/ecu_lcd.c: 439:     return ret;
  2864   001B7A  500B               	movf	lcd_send_4bits@ret^0,w,c
  2865   001B7C  0012               	return		;funcret
  2866   001B7E                     __end_of_lcd_send_4bits:
  2867                           	callstack 0
  2868                           
  2869 ;; *************** function _lcd_4bit_send_enable_signal *****************
  2870 ;; Defined at:
  2871 ;;		line 442 in file "ECU_Layer/LCD/ecu_lcd.c"
  2872 ;; Parameters:    Size  Location     Type
  2873 ;;  _lcd_           1    8[COMRAM] PTR const struct .
  2874 ;;		 -> lcd_1(6), 
  2875 ;; Auto vars:     Size  Location     Type
  2876 ;;  ret             1    9[COMRAM] unsigned char 
  2877 ;; Return value:  Size  Location     Type
  2878 ;;                  1    wreg      unsigned char 
  2879 ;; Registers used:
  2880 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2881 ;; Tracked objects:
  2882 ;;		On entry : 0/0
  2883 ;;		On exit  : 0/0
  2884 ;;		Unchanged: 0/0
  2885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2886 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2887 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2889 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2890 ;;Total ram usage:        2 bytes
  2891 ;; Hardware stack levels used: 1
  2892 ;; Hardware stack levels required when called: 1
  2893 ;; This function calls:
  2894 ;;		_gpio_pin_write_logic
  2895 ;; This function is called by:
  2896 ;;		_lcd_4bit_send_command
  2897 ;;		_lcd_4bit_send_char_data
  2898 ;; This function uses a non-reentrant model
  2899 ;;
  2900                           
  2901                           	psect	text21
  2902   001D34                     __ptext21:
  2903                           	callstack 0
  2904   001D34                     _lcd_4bit_send_enable_signal:
  2905                           	callstack 26
  2906   001D34  2809               	incf	lcd_4bit_send_enable_signal@_lcd_^0,w,c
  2907   001D36  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2908   001D38  0E01               	movlw	1
  2909   001D3A  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  2910   001D3C  EC7F  F009         	call	_gpio_pin_write_logic	;wreg free
  2911   001D40                     
  2912                           ;ECU_Layer/LCD/ecu_lcd.c: 445:     _delay((unsigned long)((5)*(4000000UL/4000000.0)));
  2913   001D40  D000               	nop2		;2 cycle nop
  2914   001D42  D000               	nop2		;2 cycle nop
  2915   001D44  0000               	nop	
  2916   001D46                     
  2917                           ;ECU_Layer/LCD/ecu_lcd.c: 446:     ret = gpio_pin_write_logic(&(_lcd_->lcd_en), GPIO_LOW
      +                          );
  2918   001D46  2809               	incf	lcd_4bit_send_enable_signal@_lcd_^0,w,c
  2919   001D48  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2920   001D4A  0E00               	movlw	0
  2921   001D4C  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  2922   001D4E  EC7F  F009         	call	_gpio_pin_write_logic	;wreg free
  2923   001D52  6E0A               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  2924                           
  2925                           ;ECU_Layer/LCD/ecu_lcd.c: 447:     return ret;
  2926   001D54  500A               	movf	lcd_4bit_send_enable_signal@ret^0,w,c
  2927   001D56  0012               	return		;funcret
  2928   001D58                     __end_of_lcd_4bit_send_enable_signal:
  2929                           	callstack 0
  2930                           
  2931 ;; *************** function _gpio_pin_intialize *****************
  2932 ;; Defined at:
  2933 ;;		line 54 in file "MCAL_Layer/GPIO/hel_gpio.c"
  2934 ;; Parameters:    Size  Location     Type
  2935 ;;  _pin_config     1    8[COMRAM] PTR const struct .
  2936 ;;		 -> lcd_2$lcd_data(8), lcd_2(10), lcd_1$lcd_data(4), lcd_1(6), 
  2937 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  2938 ;; Auto vars:     Size  Location     Type
  2939 ;;  ret             1   10[COMRAM] unsigned char 
  2940 ;; Return value:  Size  Location     Type
  2941 ;;                  1    wreg      unsigned char 
  2942 ;; Registers used:
  2943 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2944 ;; Tracked objects:
  2945 ;;		On entry : 0/0
  2946 ;;		On exit  : 0/0
  2947 ;;		Unchanged: 0/0
  2948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2949 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2950 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2951 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2952 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2953 ;;Total ram usage:        3 bytes
  2954 ;; Hardware stack levels used: 1
  2955 ;; Hardware stack levels required when called: 1
  2956 ;; This function calls:
  2957 ;;		_gpio_pin_direction_intialize
  2958 ;;		_gpio_pin_write_logic
  2959 ;; This function is called by:
  2960 ;;		_lcd_4bit_initialize
  2961 ;;		_lcd_8bit_initialize
  2962 ;;		_seven_segment_intialize
  2963 ;;		_dc_motor_initialize
  2964 ;;		_keypad_initialize
  2965 ;;		_led_initialize
  2966 ;;		_relay_initialize
  2967 ;; This function uses a non-reentrant model
  2968 ;;
  2969                           
  2970                           	psect	text22
  2971   001A1A                     __ptext22:
  2972                           	callstack 0
  2973   001A1A                     _gpio_pin_intialize:
  2974                           	callstack 27
  2975   001A1A                     
  2976                           ;MCAL_Layer/GPIO/hel_gpio.c: 56:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1){
  2977   001A1A  5009               	movf	gpio_pin_intialize@_pin_config^0,w,c
  2978   001A1C  B4D8               	btfsc	status,2,c
  2979   001A1E  EF13  F00D         	goto	u1631
  2980   001A22  EF15  F00D         	goto	u1630
  2981   001A26                     u1631:
  2982   001A26  EF25  F00D         	goto	l2462
  2983   001A2A                     u1630:
  2984   001A2A  5009               	movf	gpio_pin_intialize@_pin_config^0,w,c
  2985   001A2C  6ED9               	movwf	fsr2l,c
  2986   001A2E  6ADA               	clrf	fsr2h,c
  2987   001A30  30DF               	rrcf	223,w,c
  2988   001A32  32E8               	rrcf	wreg,f,c
  2989   001A34  32E8               	rrcf	wreg,f,c
  2990   001A36  0B07               	andlw	7
  2991   001A38  6E0A               	movwf	??_gpio_pin_intialize^0,c
  2992   001A3A  0E07               	movlw	7
  2993   001A3C  640A               	cpfsgt	??_gpio_pin_intialize^0,c
  2994   001A3E  EF23  F00D         	goto	u1641
  2995   001A42  EF25  F00D         	goto	u1640
  2996   001A46                     u1641:
  2997   001A46  EF29  F00D         	goto	l2464
  2998   001A4A                     u1640:
  2999   001A4A                     l2462:
  3000                           
  3001                           ;MCAL_Layer/GPIO/hel_gpio.c: 57:         ret = (Std_ReturnType)0x00;
  3002   001A4A  0E00               	movlw	0
  3003   001A4C  6E0B               	movwf	gpio_pin_intialize@ret^0,c
  3004                           
  3005                           ;MCAL_Layer/GPIO/hel_gpio.c: 58:     }
  3006   001A4E  EF3A  F00D         	goto	l2466
  3007   001A52                     l2464:
  3008                           
  3009                           ;MCAL_Layer/GPIO/hel_gpio.c: 60:         ret = gpio_pin_direction_intialize(_pin_config)
      +                          ;
  3010   001A52  C009  F001         	movff	gpio_pin_intialize@_pin_config,gpio_pin_direction_intialize@_pin_config
  3011   001A56  ECEC  F008         	call	_gpio_pin_direction_intialize	;wreg free
  3012   001A5A  6E0B               	movwf	gpio_pin_intialize@ret^0,c
  3013                           
  3014                           ;MCAL_Layer/GPIO/hel_gpio.c: 61:         ret = gpio_pin_write_logic(_pin_config, _pin_co
      +                          nfig->logic);
  3015   001A5C  C009  F001         	movff	gpio_pin_intialize@_pin_config,gpio_pin_write_logic@_pin_config
  3016   001A60  5009               	movf	gpio_pin_intialize@_pin_config^0,w,c
  3017   001A62  6ED9               	movwf	fsr2l,c
  3018   001A64  6ADA               	clrf	fsr2h,c
  3019   001A66  0E00               	movlw	0
  3020   001A68  BEDF               	btfsc	indf2,7,c
  3021   001A6A  0E01               	movlw	1
  3022   001A6C  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  3023   001A6E  EC7F  F009         	call	_gpio_pin_write_logic	;wreg free
  3024   001A72  6E0B               	movwf	gpio_pin_intialize@ret^0,c
  3025   001A74                     l2466:
  3026                           
  3027                           ;MCAL_Layer/GPIO/hel_gpio.c: 63:     return ret;
  3028   001A74  500B               	movf	gpio_pin_intialize@ret^0,w,c
  3029   001A76  0012               	return		;funcret
  3030   001A78                     __end_of_gpio_pin_intialize:
  3031                           	callstack 0
  3032                           
  3033 ;; *************** function _gpio_pin_write_logic *****************
  3034 ;; Defined at:
  3035 ;;		line 97 in file "MCAL_Layer/GPIO/hel_gpio.c"
  3036 ;; Parameters:    Size  Location     Type
  3037 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  3038 ;;		 -> lcd_2$lcd_data(8), lcd_2(10), lcd_1$lcd_data(4), lcd_1(6), 
  3039 ;;		 -> relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), relay_initialize@pin_obj(1), led_turn_off@pin_obj(1), 
  3040 ;;		 -> led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
  3041 ;;  logic           1    1[COMRAM] enum E2978
  3042 ;; Auto vars:     Size  Location     Type
  3043 ;;  ret             1    7[COMRAM] unsigned char 
  3044 ;; Return value:  Size  Location     Type
  3045 ;;                  1    wreg      unsigned char 
  3046 ;; Registers used:
  3047 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3048 ;; Tracked objects:
  3049 ;;		On entry : 0/0
  3050 ;;		On exit  : 0/0
  3051 ;;		Unchanged: 0/0
  3052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3053 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3054 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3055 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3056 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3057 ;;Total ram usage:        8 bytes
  3058 ;; Hardware stack levels used: 1
  3059 ;; This function calls:
  3060 ;;		Nothing
  3061 ;; This function is called by:
  3062 ;;		_lcd_4bit_send_command
  3063 ;;		_lcd_8bit_send_command
  3064 ;;		_lcd_8bit_send_char_data
  3065 ;;		_lcd_send_4bits
  3066 ;;		_lcd_4bit_send_enable_signal
  3067 ;;		_lcd_8bit_send_enable_signal
  3068 ;;		_gpio_pin_intialize
  3069 ;;		_seven_segment_write_number
  3070 ;;		_dc_motor_move_right
  3071 ;;		_dc_motor_move_left
  3072 ;;		_dc_motor_stop
  3073 ;;		_keypad_get_value
  3074 ;;		_lcd_4bit_send_char_data
  3075 ;;		_led_turn_on
  3076 ;;		_led_turn_off
  3077 ;;		_relay_turn_on
  3078 ;;		_relay_turn_off
  3079 ;; This function uses a non-reentrant model
  3080 ;;
  3081                           
  3082                           	psect	text23
  3083   0012FE                     __ptext23:
  3084                           	callstack 0
  3085   0012FE                     _gpio_pin_write_logic:
  3086                           	callstack 26
  3087   0012FE                     
  3088                           ;MCAL_Layer/GPIO/hel_gpio.c: 98:     Std_ReturnType ret = (Std_ReturnType)0x01;
  3089   0012FE  0E01               	movlw	1
  3090   001300  6E08               	movwf	gpio_pin_write_logic@ret^0,c
  3091                           
  3092                           ;MCAL_Layer/GPIO/hel_gpio.c: 99:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1){
  3093   001302  5001               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  3094   001304  B4D8               	btfsc	status,2,c
  3095   001306  EF87  F009         	goto	u1261
  3096   00130A  EF89  F009         	goto	u1260
  3097   00130E                     u1261:
  3098   00130E  EF99  F009         	goto	l2238
  3099   001312                     u1260:
  3100   001312  5001               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  3101   001314  6ED9               	movwf	fsr2l,c
  3102   001316  6ADA               	clrf	fsr2h,c
  3103   001318  30DF               	rrcf	223,w,c
  3104   00131A  32E8               	rrcf	wreg,f,c
  3105   00131C  32E8               	rrcf	wreg,f,c
  3106   00131E  0B07               	andlw	7
  3107   001320  6E03               	movwf	??_gpio_pin_write_logic^0,c
  3108   001322  0E07               	movlw	7
  3109   001324  6403               	cpfsgt	??_gpio_pin_write_logic^0,c
  3110   001326  EF97  F009         	goto	u1271
  3111   00132A  EF99  F009         	goto	u1270
  3112   00132E                     u1271:
  3113   00132E  EFF0  F009         	goto	l2246
  3114   001332                     u1270:
  3115   001332                     l2238:
  3116                           
  3117                           ;MCAL_Layer/GPIO/hel_gpio.c: 100:         ret = (Std_ReturnType)0x00;
  3118   001332  0E00               	movlw	0
  3119   001334  6E08               	movwf	gpio_pin_write_logic@ret^0,c
  3120                           
  3121                           ;MCAL_Layer/GPIO/hel_gpio.c: 101:     }
  3122   001336  EF05  F00A         	goto	l2248
  3123   00133A                     l2240:
  3124                           
  3125                           ;MCAL_Layer/GPIO/hel_gpio.c: 105:                 (*lat_registers[_pin_config->port] &= 
      +                          ~((uint8) 1 << _pin_config->pin));
  3126   00133A  5001               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  3127   00133C  6ED9               	movwf	fsr2l,c
  3128   00133E  6ADA               	clrf	fsr2h,c
  3129   001340  30DF               	rrcf	223,w,c
  3130   001342  32E8               	rrcf	wreg,f,c
  3131   001344  32E8               	rrcf	wreg,f,c
  3132   001346  0B07               	andlw	7
  3133   001348  6E03               	movwf	??_gpio_pin_write_logic^0,c
  3134   00134A  0E01               	movlw	1
  3135   00134C  6E04               	movwf	(??_gpio_pin_write_logic+1)^0,c
  3136   00134E  2A03               	incf	??_gpio_pin_write_logic^0,f,c
  3137   001350  EFAC  F009         	goto	u1284
  3138   001354                     u1285:
  3139   001354  90D8               	bcf	status,0,c
  3140   001356  3604               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  3141   001358                     u1284:
  3142   001358  2E03               	decfsz	??_gpio_pin_write_logic^0,f,c
  3143   00135A  EFAA  F009         	goto	u1285
  3144   00135E  5004               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3145   001360  0AFF               	xorlw	255
  3146   001362  6E05               	movwf	(??_gpio_pin_write_logic+2)^0,c
  3147   001364  5001               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  3148   001366  6ED9               	movwf	fsr2l,c
  3149   001368  6ADA               	clrf	fsr2h,c
  3150   00136A  50DF               	movf	223,w,c
  3151   00136C  0B07               	andlw	7
  3152   00136E  0D02               	mullw	2
  3153   001370  50F3               	movf	243,w,c
  3154   001372  0F3B               	addlw	low _lat_registers
  3155   001374  6ED9               	movwf	fsr2l,c
  3156   001376  6ADA               	clrf	fsr2h,c
  3157   001378  CFDE F006          	movff	postinc2,??_gpio_pin_write_logic+3
  3158   00137C  CFDD F007          	movff	postdec2,??_gpio_pin_write_logic+4
  3159   001380  C006  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  3160   001384  C007  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  3161   001388  5005               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  3162   00138A  16DF               	andwf	indf2,f,c
  3163                           
  3164                           ;MCAL_Layer/GPIO/hel_gpio.c: 106:                 break;
  3165   00138C  EF05  F00A         	goto	l2248
  3166   001390                     l2242:
  3167                           
  3168                           ;MCAL_Layer/GPIO/hel_gpio.c: 108:                 (*lat_registers[_pin_config->port] |= 
      +                          ((uint8) 1 << _pin_config->pin));
  3169   001390  5001               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  3170   001392  6ED9               	movwf	fsr2l,c
  3171   001394  6ADA               	clrf	fsr2h,c
  3172   001396  30DF               	rrcf	223,w,c
  3173   001398  32E8               	rrcf	wreg,f,c
  3174   00139A  32E8               	rrcf	wreg,f,c
  3175   00139C  0B07               	andlw	7
  3176   00139E  6E03               	movwf	??_gpio_pin_write_logic^0,c
  3177   0013A0  0E01               	movlw	1
  3178   0013A2  6E04               	movwf	(??_gpio_pin_write_logic+1)^0,c
  3179   0013A4  2A03               	incf	??_gpio_pin_write_logic^0,f,c
  3180   0013A6  EFD7  F009         	goto	u1294
  3181   0013AA                     u1295:
  3182   0013AA  90D8               	bcf	status,0,c
  3183   0013AC  3604               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  3184   0013AE                     u1294:
  3185   0013AE  2E03               	decfsz	??_gpio_pin_write_logic^0,f,c
  3186   0013B0  EFD5  F009         	goto	u1295
  3187   0013B4  5001               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  3188   0013B6  6ED9               	movwf	fsr2l,c
  3189   0013B8  6ADA               	clrf	fsr2h,c
  3190   0013BA  50DF               	movf	223,w,c
  3191   0013BC  0B07               	andlw	7
  3192   0013BE  0D02               	mullw	2
  3193   0013C0  50F3               	movf	243,w,c
  3194   0013C2  0F3B               	addlw	low _lat_registers
  3195   0013C4  6ED9               	movwf	fsr2l,c
  3196   0013C6  6ADA               	clrf	fsr2h,c
  3197   0013C8  CFDE F005          	movff	postinc2,??_gpio_pin_write_logic+2
  3198   0013CC  CFDD F006          	movff	postdec2,??_gpio_pin_write_logic+3
  3199   0013D0  C005  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  3200   0013D4  C006  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  3201   0013D8  5004               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3202   0013DA  12DF               	iorwf	indf2,f,c
  3203                           
  3204                           ;MCAL_Layer/GPIO/hel_gpio.c: 109:                 break;
  3205   0013DC  EF05  F00A         	goto	l2248
  3206   0013E0                     l2246:
  3207   0013E0  5002               	movf	gpio_pin_write_logic@logic^0,w,c
  3208   0013E2  6E03               	movwf	??_gpio_pin_write_logic^0,c
  3209   0013E4  6A04               	clrf	(??_gpio_pin_write_logic+1)^0,c
  3210                           
  3211                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3212                           ; Switch size 1, requested type "simple"
  3213                           ; Number of cases is 1, Range of values is 0 to 0
  3214                           ; switch strategies available:
  3215                           ; Name         Instructions Cycles
  3216                           ; simple_byte            4     3 (average)
  3217                           ;	Chosen strategy is simple_byte
  3218   0013E6  5004               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3219   0013E8  0A00               	xorlw	0	; case 0
  3220   0013EA  B4D8               	btfsc	status,2,c
  3221   0013EC  EFFA  F009         	goto	l3096
  3222   0013F0  EF99  F009         	goto	l2238
  3223   0013F4                     l3096:
  3224                           
  3225                           ; Switch size 1, requested type "simple"
  3226                           ; Number of cases is 2, Range of values is 0 to 1
  3227                           ; switch strategies available:
  3228                           ; Name         Instructions Cycles
  3229                           ; simple_byte            7     4 (average)
  3230                           ;	Chosen strategy is simple_byte
  3231   0013F4  5003               	movf	??_gpio_pin_write_logic^0,w,c
  3232   0013F6  0A00               	xorlw	0	; case 0
  3233   0013F8  B4D8               	btfsc	status,2,c
  3234   0013FA  EF9D  F009         	goto	l2240
  3235   0013FE  0A01               	xorlw	1	; case 1
  3236   001400  B4D8               	btfsc	status,2,c
  3237   001402  EFC8  F009         	goto	l2242
  3238   001406  EF99  F009         	goto	l2238
  3239   00140A                     l2248:
  3240                           
  3241                           ;MCAL_Layer/GPIO/hel_gpio.c: 113:     return ret;
  3242   00140A  5008               	movf	gpio_pin_write_logic@ret^0,w,c
  3243   00140C  0012               	return		;funcret
  3244   00140E                     __end_of_gpio_pin_write_logic:
  3245                           	callstack 0
  3246                           
  3247 ;; *************** function _gpio_pin_direction_intialize *****************
  3248 ;; Defined at:
  3249 ;;		line 26 in file "MCAL_Layer/GPIO/hel_gpio.c"
  3250 ;; Parameters:    Size  Location     Type
  3251 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  3252 ;;		 -> lcd_2$lcd_data(8), lcd_2(10), lcd_1$lcd_data(4), lcd_1(6), 
  3253 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  3254 ;; Auto vars:     Size  Location     Type
  3255 ;;  ret             1    6[COMRAM] unsigned char 
  3256 ;; Return value:  Size  Location     Type
  3257 ;;                  1    wreg      unsigned char 
  3258 ;; Registers used:
  3259 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3260 ;; Tracked objects:
  3261 ;;		On entry : 0/0
  3262 ;;		On exit  : 0/0
  3263 ;;		Unchanged: 0/0
  3264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3265 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3266 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3267 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3268 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3269 ;;Total ram usage:        7 bytes
  3270 ;; Hardware stack levels used: 1
  3271 ;; This function calls:
  3272 ;;		Nothing
  3273 ;; This function is called by:
  3274 ;;		_gpio_pin_intialize
  3275 ;;		_keypad_initialize
  3276 ;;		_push_button_initialize
  3277 ;; This function uses a non-reentrant model
  3278 ;;
  3279                           
  3280                           	psect	text24
  3281   0011D8                     __ptext24:
  3282                           	callstack 0
  3283   0011D8                     _gpio_pin_direction_intialize:
  3284                           	callstack 27
  3285   0011D8                     
  3286                           ;MCAL_Layer/GPIO/hel_gpio.c: 27:     Std_ReturnType ret = (Std_ReturnType)0x01;
  3287   0011D8  0E01               	movlw	1
  3288   0011DA  6E07               	movwf	gpio_pin_direction_intialize@ret^0,c
  3289                           
  3290                           ;MCAL_Layer/GPIO/hel_gpio.c: 28:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1){
  3291   0011DC  5001               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  3292   0011DE  B4D8               	btfsc	status,2,c
  3293   0011E0  EFF4  F008         	goto	u1471
  3294   0011E4  EFF6  F008         	goto	u1470
  3295   0011E8                     u1471:
  3296   0011E8  EF06  F009         	goto	l2358
  3297   0011EC                     u1470:
  3298   0011EC  5001               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  3299   0011EE  6ED9               	movwf	fsr2l,c
  3300   0011F0  6ADA               	clrf	fsr2h,c
  3301   0011F2  30DF               	rrcf	223,w,c
  3302   0011F4  32E8               	rrcf	wreg,f,c
  3303   0011F6  32E8               	rrcf	wreg,f,c
  3304   0011F8  0B07               	andlw	7
  3305   0011FA  6E02               	movwf	??_gpio_pin_direction_intialize^0,c
  3306   0011FC  0E07               	movlw	7
  3307   0011FE  6402               	cpfsgt	??_gpio_pin_direction_intialize^0,c
  3308   001200  EF04  F009         	goto	u1481
  3309   001204  EF06  F009         	goto	u1480
  3310   001208                     u1481:
  3311   001208  EF5D  F009         	goto	l2366
  3312   00120C                     u1480:
  3313   00120C                     l2358:
  3314                           
  3315                           ;MCAL_Layer/GPIO/hel_gpio.c: 29:         ret = (Std_ReturnType)0x00;
  3316   00120C  0E00               	movlw	0
  3317   00120E  6E07               	movwf	gpio_pin_direction_intialize@ret^0,c
  3318                           
  3319                           ;MCAL_Layer/GPIO/hel_gpio.c: 30:     }
  3320   001210  EF7D  F009         	goto	l2368
  3321   001214                     l2360:
  3322                           
  3323                           ;MCAL_Layer/GPIO/hel_gpio.c: 34:                 (*tris_registers[_pin_config->port] &= 
      +                          ~((uint8) 1 << _pin_config->pin));
  3324   001214  5001               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  3325   001216  6ED9               	movwf	fsr2l,c
  3326   001218  6ADA               	clrf	fsr2h,c
  3327   00121A  30DF               	rrcf	223,w,c
  3328   00121C  32E8               	rrcf	wreg,f,c
  3329   00121E  32E8               	rrcf	wreg,f,c
  3330   001220  0B07               	andlw	7
  3331   001222  6E02               	movwf	??_gpio_pin_direction_intialize^0,c
  3332   001224  0E01               	movlw	1
  3333   001226  6E03               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  3334   001228  2A02               	incf	??_gpio_pin_direction_intialize^0,f,c
  3335   00122A  EF19  F009         	goto	u1494
  3336   00122E                     u1495:
  3337   00122E  90D8               	bcf	status,0,c
  3338   001230  3603               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  3339   001232                     u1494:
  3340   001232  2E02               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  3341   001234  EF17  F009         	goto	u1495
  3342   001238  5003               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  3343   00123A  0AFF               	xorlw	255
  3344   00123C  6E04               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  3345   00123E  5001               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  3346   001240  6ED9               	movwf	fsr2l,c
  3347   001242  6ADA               	clrf	fsr2h,c
  3348   001244  50DF               	movf	223,w,c
  3349   001246  0B07               	andlw	7
  3350   001248  0D02               	mullw	2
  3351   00124A  50F3               	movf	243,w,c
  3352   00124C  0F45               	addlw	low _tris_registers
  3353   00124E  6ED9               	movwf	fsr2l,c
  3354   001250  6ADA               	clrf	fsr2h,c
  3355   001252  CFDE F005          	movff	postinc2,??_gpio_pin_direction_intialize+3
  3356   001256  CFDD F006          	movff	postdec2,??_gpio_pin_direction_intialize+4
  3357   00125A  C005  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  3358   00125E  C006  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  3359   001262  5004               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  3360   001264  16DF               	andwf	indf2,f,c
  3361                           
  3362                           ;MCAL_Layer/GPIO/hel_gpio.c: 35:                 break;
  3363   001266  EF7D  F009         	goto	l2368
  3364   00126A                     l2362:
  3365                           
  3366                           ;MCAL_Layer/GPIO/hel_gpio.c: 37:                 (*tris_registers[_pin_config->port] |= 
      +                          ((uint8) 1 << _pin_config->pin));
  3367   00126A  5001               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  3368   00126C  6ED9               	movwf	fsr2l,c
  3369   00126E  6ADA               	clrf	fsr2h,c
  3370   001270  30DF               	rrcf	223,w,c
  3371   001272  32E8               	rrcf	wreg,f,c
  3372   001274  32E8               	rrcf	wreg,f,c
  3373   001276  0B07               	andlw	7
  3374   001278  6E02               	movwf	??_gpio_pin_direction_intialize^0,c
  3375   00127A  0E01               	movlw	1
  3376   00127C  6E03               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  3377   00127E  2A02               	incf	??_gpio_pin_direction_intialize^0,f,c
  3378   001280  EF44  F009         	goto	u1504
  3379   001284                     u1505:
  3380   001284  90D8               	bcf	status,0,c
  3381   001286  3603               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  3382   001288                     u1504:
  3383   001288  2E02               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  3384   00128A  EF42  F009         	goto	u1505
  3385   00128E  5001               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  3386   001290  6ED9               	movwf	fsr2l,c
  3387   001292  6ADA               	clrf	fsr2h,c
  3388   001294  50DF               	movf	223,w,c
  3389   001296  0B07               	andlw	7
  3390   001298  0D02               	mullw	2
  3391   00129A  50F3               	movf	243,w,c
  3392   00129C  0F45               	addlw	low _tris_registers
  3393   00129E  6ED9               	movwf	fsr2l,c
  3394   0012A0  6ADA               	clrf	fsr2h,c
  3395   0012A2  CFDE F004          	movff	postinc2,??_gpio_pin_direction_intialize+2
  3396   0012A6  CFDD F005          	movff	postdec2,??_gpio_pin_direction_intialize+3
  3397   0012AA  C004  FFD9         	movff	??_gpio_pin_direction_intialize+2,fsr2l
  3398   0012AE  C005  FFDA         	movff	??_gpio_pin_direction_intialize+3,fsr2h
  3399   0012B2  5003               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  3400   0012B4  12DF               	iorwf	indf2,f,c
  3401                           
  3402                           ;MCAL_Layer/GPIO/hel_gpio.c: 38:                 break;
  3403   0012B6  EF7D  F009         	goto	l2368
  3404   0012BA                     l2366:
  3405   0012BA  5001               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  3406   0012BC  6ED9               	movwf	fsr2l,c
  3407   0012BE  6ADA               	clrf	fsr2h,c
  3408   0012C0  BCDF               	btfsc	indf2,6,c
  3409   0012C2  EF65  F009         	goto	u1511
  3410   0012C6  EF68  F009         	goto	u1510
  3411   0012CA                     u1511:
  3412   0012CA  0E01               	movlw	1
  3413   0012CC  EF69  F009         	goto	u1520
  3414   0012D0                     u1510:
  3415   0012D0  0E00               	movlw	0
  3416   0012D2                     u1520:
  3417   0012D2  6E02               	movwf	??_gpio_pin_direction_intialize^0,c
  3418   0012D4  6A03               	clrf	(??_gpio_pin_direction_intialize+1)^0,c
  3419                           
  3420                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3421                           ; Switch size 1, requested type "simple"
  3422                           ; Number of cases is 1, Range of values is 0 to 0
  3423                           ; switch strategies available:
  3424                           ; Name         Instructions Cycles
  3425                           ; simple_byte            4     3 (average)
  3426                           ;	Chosen strategy is simple_byte
  3427   0012D6  5003               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  3428   0012D8  0A00               	xorlw	0	; case 0
  3429   0012DA  B4D8               	btfsc	status,2,c
  3430   0012DC  EF72  F009         	goto	l3098
  3431   0012E0  EF06  F009         	goto	l2358
  3432   0012E4                     l3098:
  3433                           
  3434                           ; Switch size 1, requested type "simple"
  3435                           ; Number of cases is 2, Range of values is 0 to 1
  3436                           ; switch strategies available:
  3437                           ; Name         Instructions Cycles
  3438                           ; simple_byte            7     4 (average)
  3439                           ;	Chosen strategy is simple_byte
  3440   0012E4  5002               	movf	??_gpio_pin_direction_intialize^0,w,c
  3441   0012E6  0A00               	xorlw	0	; case 0
  3442   0012E8  B4D8               	btfsc	status,2,c
  3443   0012EA  EF0A  F009         	goto	l2360
  3444   0012EE  0A01               	xorlw	1	; case 1
  3445   0012F0  B4D8               	btfsc	status,2,c
  3446   0012F2  EF35  F009         	goto	l2362
  3447   0012F6  EF06  F009         	goto	l2358
  3448   0012FA                     l2368:
  3449                           
  3450                           ;MCAL_Layer/GPIO/hel_gpio.c: 42:     return ret;
  3451   0012FA  5007               	movf	gpio_pin_direction_intialize@ret^0,w,c
  3452   0012FC  0012               	return		;funcret
  3453   0012FE                     __end_of_gpio_pin_direction_intialize:
  3454                           	callstack 0
  3455                           
  3456                           	psect	rparam
  3457   000000                     
  3458                           	psect	config
  3459                           
  3460                           ; Padding undefined space
  3461   300000                     	org	3145728
  3462   300000  FF                 	db	255
  3463                           
  3464                           ;Config register CONFIG1H @ 0x300001
  3465                           ;	Oscillator Selection bits
  3466                           ;	OSC = HS, HS oscillator
  3467                           ;	Fail-Safe Clock Monitor Enable bit
  3468                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3469                           ;	Internal/External Oscillator Switchover bit
  3470                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3471   300001                     	org	3145729
  3472   300001  02                 	db	2
  3473                           
  3474                           ;Config register CONFIG2L @ 0x300002
  3475                           ;	Power-up Timer Enable bit
  3476                           ;	PWRT = OFF, PWRT disabled
  3477                           ;	Brown-out Reset Enable bits
  3478                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3479                           ;	Brown Out Reset Voltage bits
  3480                           ;	BORV = 1, 
  3481   300002                     	org	3145730
  3482   300002  09                 	db	9
  3483                           
  3484                           ;Config register CONFIG2H @ 0x300003
  3485                           ;	Watchdog Timer Enable bit
  3486                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3487                           ;	Watchdog Timer Postscale Select bits
  3488                           ;	WDTPS = 32768, 1:32768
  3489   300003                     	org	3145731
  3490   300003  1E                 	db	30
  3491                           
  3492                           ; Padding undefined space
  3493   300004                     	org	3145732
  3494   300004  FF                 	db	255
  3495                           
  3496                           ;Config register CONFIG3H @ 0x300005
  3497                           ;	CCP2 MUX bit
  3498                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3499                           ;	PORTB A/D Enable bit
  3500                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3501                           ;	Low-Power Timer1 Oscillator Enable bit
  3502                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3503                           ;	MCLR Pin Enable bit
  3504                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3505   300005                     	org	3145733
  3506   300005  81                 	db	129
  3507                           
  3508                           ;Config register CONFIG4L @ 0x300006
  3509                           ;	Stack Full/Underflow Reset Enable bit
  3510                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3511                           ;	Single-Supply ICSP Enable bit
  3512                           ;	LVP = OFF, Single-Supply ICSP disabled
  3513                           ;	Extended Instruction Set Enable bit
  3514                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3515                           ;	Background Debugger Enable bit
  3516                           ;	DEBUG = 0x1, unprogrammed default
  3517   300006                     	org	3145734
  3518   300006  81                 	db	129
  3519                           
  3520                           ; Padding undefined space
  3521   300007                     	org	3145735
  3522   300007  FF                 	db	255
  3523                           
  3524                           ;Config register CONFIG5L @ 0x300008
  3525                           ;	Code Protection bit
  3526                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  3527                           ;	Code Protection bit
  3528                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  3529                           ;	Code Protection bit
  3530                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  3531                           ;	Code Protection bit
  3532                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  3533   300008                     	org	3145736
  3534   300008  0F                 	db	15
  3535                           
  3536                           ;Config register CONFIG5H @ 0x300009
  3537                           ;	Boot Block Code Protection bit
  3538                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3539                           ;	Data EEPROM Code Protection bit
  3540                           ;	CPD = OFF, Data EEPROM not code-protected
  3541   300009                     	org	3145737
  3542   300009  C0                 	db	192
  3543                           
  3544                           ;Config register CONFIG6L @ 0x30000A
  3545                           ;	Write Protection bit
  3546                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3547                           ;	Write Protection bit
  3548                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3549                           ;	Write Protection bit
  3550                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3551                           ;	Write Protection bit
  3552                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  3553   30000A                     	org	3145738
  3554   30000A  0F                 	db	15
  3555                           
  3556                           ;Config register CONFIG6H @ 0x30000B
  3557                           ;	Configuration Register Write Protection bit
  3558                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3559                           ;	Boot Block Write Protection bit
  3560                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3561                           ;	Data EEPROM Write Protection bit
  3562                           ;	WRTD = OFF, Data EEPROM not write-protected
  3563   30000B                     	org	3145739
  3564   30000B  E0                 	db	224
  3565                           
  3566                           ;Config register CONFIG7L @ 0x30000C
  3567                           ;	Table Read Protection bit
  3568                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  3569                           ;	Table Read Protection bit
  3570                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3571                           ;	Table Read Protection bit
  3572                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  3573                           ;	Table Read Protection bit
  3574                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  3575   30000C                     	org	3145740
  3576   30000C  0F                 	db	15
  3577                           
  3578                           ;Config register CONFIG7H @ 0x30000D
  3579                           ;	Boot Block Table Read Protection bit
  3580                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3581   30000D                     	org	3145741
  3582   30000D  40                 	db	64
  3583                           tosu	equ	0xFFF
  3584                           tosh	equ	0xFFE
  3585                           tosl	equ	0xFFD
  3586                           stkptr	equ	0xFFC
  3587                           pclatu	equ	0xFFB
  3588                           pclath	equ	0xFFA
  3589                           pcl	equ	0xFF9
  3590                           tblptru	equ	0xFF8
  3591                           tblptrh	equ	0xFF7
  3592                           tblptrl	equ	0xFF6
  3593                           tablat	equ	0xFF5
  3594                           prodh	equ	0xFF4
  3595                           prodl	equ	0xFF3
  3596                           indf0	equ	0xFEF
  3597                           postinc0	equ	0xFEE
  3598                           postdec0	equ	0xFED
  3599                           preinc0	equ	0xFEC
  3600                           plusw0	equ	0xFEB
  3601                           fsr0h	equ	0xFEA
  3602                           fsr0l	equ	0xFE9
  3603                           wreg	equ	0xFE8
  3604                           indf1	equ	0xFE7
  3605                           postinc1	equ	0xFE6
  3606                           postdec1	equ	0xFE5
  3607                           preinc1	equ	0xFE4
  3608                           plusw1	equ	0xFE3
  3609                           fsr1h	equ	0xFE2
  3610                           fsr1l	equ	0xFE1
  3611                           bsr	equ	0xFE0
  3612                           indf2	equ	0xFDF
  3613                           postinc2	equ	0xFDE
  3614                           postdec2	equ	0xFDD
  3615                           preinc2	equ	0xFDC
  3616                           plusw2	equ	0xFDB
  3617                           fsr2h	equ	0xFDA
  3618                           fsr2l	equ	0xFD9
  3619                           status	equ	0xFD8

Data Sizes:
    Strings     13
    Constant    16
    Data        46
    BSS         49
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     48     111
    BANK0           128      0      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    convert_byte_to_string@str	PTR unsigned char  size(1) Largest target is 4
		 -> lcd_counter_text(COMRAM[4]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    gpio_pin_direction_intialize@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), lcd_2(COMRAM[10]), lcd_2$lcd_data(COMRAM[8]), 
		 -> led_initialize@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_intialize@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), lcd_2(COMRAM[10]), lcd_2$lcd_data(COMRAM[8]), 
		 -> led_initialize@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), lcd_2(COMRAM[10]), lcd_2$lcd_data(COMRAM[8]), 
		 -> led_initialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 
		 -> relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    lcd_4bit_initialize@_lcd_	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_command@_lcd_	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_enable_signal@_lcd_	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_8bit_initialize@_lcd_	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_char_data@_lcd_	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_command@_lcd_	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_enable_signal@_lcd_	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_string_position@_lcd_	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_string_position@str	PTR unsigned char  size(2) Largest target is 10
		 -> lcd_counter_text(COMRAM[4]), STR_4(CODE[10]), 

    lcd_8bit_set_cursor@_lcd_	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_send_4bits@_lcd_	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    memset@dest	PTR void  size(1) Largest target is 4
		 -> lcd_counter_text(COMRAM[4]), 

    memset@p	PTR unsigned char  size(1) Largest target is 4
		 -> lcd_counter_text(COMRAM[4]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    S1239$buffer	PTR unsigned char  size(2) Largest target is 0

    S1239$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(1) Largest target is 4
		 -> lcd_counter_text(COMRAM[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 4
		 -> lcd_counter_text(COMRAM[4]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_convert_byte_to_string
    _lcd_8bit_send_string_position->_lcd_8bit_set_cursor
    _lcd_8bit_set_cursor->_lcd_8bit_send_command
    _lcd_8bit_send_char_data->_lcd_8bit_send_enable_signal
    _convert_byte_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _application_intialize->_lcd_8bit_initialize
    _lcd_8bit_initialize->_lcd_8bit_send_command
    _lcd_8bit_send_command->_lcd_8bit_send_enable_signal
    _lcd_8bit_send_enable_signal->_gpio_pin_write_logic
    _lcd_4bit_initialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_4bit_send_enable_signal->_gpio_pin_write_logic
    _gpio_pin_intialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   73258
                                             47 COMRAM     1     1      0
              _application_intialize
             _convert_byte_to_string
      _lcd_8bit_send_string_position
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_send_string_position                        6     1      5   24365
                                             22 COMRAM     6     1      5
            _lcd_8bit_send_char_data
                _lcd_8bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_set_cursor                                  6     3      3   12889
                                             16 COMRAM     6     3      3
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_char_data                              6     4      2   10687
                                             10 COMRAM     6     4      2
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (1) _convert_byte_to_string                               3     2      1    4559
                                             44 COMRAM     3     2      1
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6    3591
                                             25 COMRAM    19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    2936
                                             21 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           11     8      3    2586
                                             10 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     782
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                               6     1      5     780
                                              0 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                1     1      0   44330
                _lcd_4bit_initialize
                _lcd_8bit_initialize
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_initialize                                  4     3      1   19248
                                             16 COMRAM     4     3      1
                 _gpio_pin_intialize
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_command                                6     4      2   12207
                                             10 COMRAM     6     4      2
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (4) _lcd_8bit_send_enable_signal                          2     1      1    5112
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_initialize                                  4     3      1   25079
                                             14 COMRAM     4     3      1
                 _gpio_pin_intialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                3     1      2   18038
                                             11 COMRAM     3     1      2
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       3     1      2    5702
                                              8 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_enable_signal                          2     1      1    5264
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_intialize                                   3     2      1    6574
                                              8 COMRAM     3     2      1
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                 8     6      2    4891
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_intialize                         7     6      1     407
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_intialize
     _lcd_4bit_initialize
       _gpio_pin_intialize
         _gpio_pin_direction_intialize
         _gpio_pin_write_logic
       _lcd_4bit_send_command
         _gpio_pin_write_logic
         _lcd_4bit_send_enable_signal
           _gpio_pin_write_logic
         _lcd_send_4bits
           _gpio_pin_write_logic
     _lcd_8bit_initialize
       _gpio_pin_intialize
       _lcd_8bit_send_command
         _gpio_pin_write_logic
         _lcd_8bit_send_enable_signal
           _gpio_pin_write_logic
   _convert_byte_to_string
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _lcd_8bit_send_string_position
     _lcd_8bit_send_char_data
       _gpio_pin_write_logic
       _lcd_8bit_send_enable_signal
     _lcd_8bit_set_cursor
       _lcd_8bit_send_command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      20       5       25.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     30      6F       1       87.4%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      8F      39        0.0%
DATA                 0      0      8F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Nov 15 14:46:39 2023

     lcd_8bit_send_string_position@_lcd_ 0017                          ?_lcd_send_4bits 0009  
                           ___awdiv@sign 0006      lcd_8bit_send_string_position@column 0019  
                                    l102 15E0                                      l203 1B7C  
                                    l107 1AD2                                      l206 1D56  
                                    l152 1A18                                      l209 1D32  
                                    l145 14F6                                      l219 1896  
                                    l180 192C                                      l190 1BC8  
                                    l159 19A2                                      l361 12FC  
                                    l368 1A76                                      l704 1754  
                                    l457 1D68                                      l387 140C  
                                    l691 16A4                                      _abs 1C7E  
    __end_of_lcd_4bit_send_enable_signal 1D58              _lcd_4bit_send_enable_signal 1D34  
                           ___awmod@sign 0006                      led_initialize@F3058 006B  
                  relay_initialize@F3052 0067                                      wreg 0FE8  
            __end_of_lcd_8bit_set_cursor 1898              lcd_send_4bits@_data_command 000A  
                                   ?_abs 0007                                     l1207 17FE  
                                   l1144 1C7C                                     l1137 1CE0  
                                   l1218 1D6A                                     l2300 16A6  
                                   l2310 16D2                                     l2302 16AA  
                                   l1182 11D6                                     l2240 133A  
                                   l2400 1D10                                     l2320 170A  
                                   l2312 16DA                                     l2304 16B8  
                                   l1192 1C98                                     l2242 1390  
                                   l2234 12FE                                     l2402 1D1C  
                                   l2330 1744                                     l2322 1720  
                                   l2314 16EC                                     l2306 16C0  
                                   l2410 1042                                     l1195 1CB0  
                                   l2236 1312                                     l2404 1D22  
                                   l2500 1A16                                     l2260 15F4  
                                   l2332 174C                                     l2324 1728  
                                   l2316 16F4                                     l2308 16C4  
                                   l2340 1776                                     l2420 1080  
                                   l2412 104A                                     l1188 1C48  
                                   l2246 13E0                                     l2238 1332  
                                   l2270 161A                                     l2262 15FC  
                                   l2326 172E                                     l2318 16FC  
                                   l2350 1C7E                                     l2342 1780  
                                   l2430 1106                                     l2422 109C  
                                   l2414 1056                                     l2510 1C40  
                                   l3070 1AD4                                     l2360 1214  
                                   l2248 140A                                     l2520 1528  
                                   l2280 1652                                     l2272 1622  
                                   l2264 1600                                     l2256 15E2  
                                   l2328 1734                                     l2352 1C8C  
                                   l2344 179C                                     l2336 1756  
                                   l2440 1164                                     l2432 1122  
                                   l2424 10B4                                     l2416 105A  
                                   l2408 1020                                     l2504 1C0C  
                                   l3080 1B16                                     l3072 1AD8  
                                   l2362 126A                                     l2354 11D8  
                                   l2530 153A                                     l2514 14F8  
                                   l2290 167E                                     l2282 1658  
                                   l2274 1634                                     l2266 160E  
                                   l2258 15E6                                     l2346 17CE  
                                   l2338 1766                                     l2442 1176  
                                   l2434 1134                                     l2426 10BE  
                                   l2418 1064                                     l2506 1C14  
                                   l2602 192E                                     l3074 1AF4  
                                   l2356 11EC                                     l2460 1A2A  
                                   l2380 1B3E                                     l2540 1588  
                                   l2532 154A                                     l2516 150C  
                                   l2284 166E                                     l2276 163C  
                                   l2292 1684                                     l2268 1616  
                                   l2444 1190                                     l2436 1144  
                                   l2428 10D6                                     l2452 11B4  
                                   l2508 1C24                                     l2700 1B94  
                                   l2620 1996                                     l2604 1942  
                                   l3076 1AFE                                     l3068 1AD4  
                                   l2366 12BA                                     l2358 120C  
                                   l2462 1A4A                                     l2390 1D34  
                                   l2382 1B50                                     l2470 1A78  
                                   l2550 15C4                                     l2542 1594  
                                   l2534 155A                                     l2526 152C  
                                   l2518 1514                                     l2710 1D58  
                                   l2294 1694                                     l2286 1676  
                                   l2278 1644                                     l2438 1154  
                                   l2446 1192                                     l2702 1B9C  
                                   l2614 195A                                     l2622 19A0  
                                   l2606 194A                                     l3094 186E  
                                   l2630 180A                                     l3078 1B14  
                                   l2368 12FA                                     l3096 13F4  
                                   l2464 1A52                                     l2392 1D40  
                                   l2384 1B64                                     l2376 1B2E  
                                   l2472 1A88                                     l2552 15D0  
                                   l2544 15A0                                     l2536 1566  
                                   l2528 1538                                     l2480 19A4  
                                   l2560 1422                                     l2712 1D58  
                                   l2296 169C                                     l2288 1678  
                                   l2448 11A8                                     l2704 1BB4  
                                   l2616 1984                                     l2608 1956  
                                   l2632 181E                                     l2640 1894  
                                   l3098 12E4                                     l2466 1A74  
                                   l2458 1A1A                                     l2394 1D46  
                                   l2378 1B2E                                     l2474 1A90  
                                   l2546 15AC                                     l2538 1582  
                                   l2554 15DE                                     l2482 19B8  
                                   l2570 1442                                     l2562 142A  
                                   l2714 1D60                                     l2650 1CBA  
                                   l2706 1BC6                                     l2618 1986  
                                   l2634 1832                                     l2626 1800  
                                   l2388 1D34                                     l2476 1AD0  
                                   l2548 15B8                                     l2492 19D0  
                                   l2484 19C0                                     l2580 147C  
                                   l2572 144E                                     l2564 143E  
                                   l2652 1CC4                                     l2660 1C5A  
                                   l2636 1846                                     l2628 1804  
                                   l2398 1D10                                     l2494 19FA  
                                   l2486 19CC                                     l2590 14C2  
                                   l2582 1498                                     l2574 1450  
                                   l2558 140E                                     l2654 1CC6  
                                   l2662 1C62                                     l2638 185A  
                                   l2496 19FC                                     l2592 14CE  
                                   l2584 149E                                     l2576 1460  
                                   l2648 1CB2                                     l2664 1C72  
                                   l2656 1C4A                                     l2680 1898  
                                   l2498 1A0C                                     l2594 14DA  
                                   l2586 14AA                                     l2578 1470  
                                   l2658 1C52                                     l2690 18F8  
                                   l2682 18A8                                     l2596 14E6  
                                   l2588 14B6                                     l2692 192A  
                                   l2684 18B0                                     l2598 14F4  
                                   l2686 18C6                                     l2696 1B80  
                                   l2688 18F4                                     l2698 1B84  
                                   STR_1 101B                                     STR_4 1011  
                                   u1300 15F4                                     u1301 15F0  
                                   u1310 160E                                     u1311 160A  
                                   u1320 1634                                     u1400 1720  
     lcd_8bit_send_command@l_pin_counter 0010                                     u1321 1630  
                                   u1401 171C                                     u1330 1652  
                                   u1410 1744                                     u1331 164E  
                                   u1411 1740                                     u1260 1312  
                                   u1340 166E                                     u1420 1766  
                                   u1261 130E                                     u1341 166A  
                                   u1421 1762                                     _LATA 0F89  
                                   u1510 12D0                                     u1270 1332  
                                   u1350 1694                                     u1430 1776  
                                   _LATB 0F8A                                     u1511 12CA  
                                   u1271 132E                                     u1351 1690  
                                   u1431 1772                                     _LATC 0F8B  
                                   u1520 12D2                                     u1504 1288  
                                   u1360 16B8                                     u1440 179C  
                                   u1600 1154                                     _LATD 0F8C  
                                   u1505 1284                                     u1361 16B4  
                                   u1441 1798                                     u1601 1150  
                                   _LATE 0F8D                                     u1370 16D2  
                                   u1450 17CE                                     u1610 1164  
                                   u1530 1042                                     u1371 16CE  
                                   u1451 17CA                                     u1611 1160  
                                   u1531 103E                                     u1284 1358  
                                   u1700 150C                                     u1380 16EC  
                                   u1460 1C8C                                     u1620 11A4  
                                   u1540 1080                                     u1285 1354  
                                   u1701 1508                                     u1381 16E8  
                                   u1461 1C88                                     u1621 11A0  
                                   u1541 107C                                     u2237 1B1C  
                                   u1470 11EC                                     u1294 13AE  
                                   u1630 1A2A                                     u1710 154A  
                                   u1390 170A                                     u1550 109C  
                                   u1471 11E8                                     u1295 13AA  
                                   u1631 1A26                                     u1711 1546  
                                   u2247 1466                                     u1391 1706  
                                   u1551 1098                                     u1480 120C  
                                   u1640 1A4A                                     u1720 1422  
                                   u1560 10D2                                     u1800 18EC  
                                   u1481 1208                                     u1641 1A46  
                                   u2257 1482                                     u1721 141E  
                                   u1561 10CC                                     u1650 1A88  
                                   u1730 1460                                     u1570 10D4  
                                   u1810 191A                                     u1651 1A84  
                                   u2267 149A                                     u1731 145C  
                                   u1660 19B8                                     u1580 1134  
                                   u1740 1942                                     u1820 192A  
                                   u2277 1550                                     u1661 19B4  
                                   u1581 1130                                     u1741 193E  
                                   u1821 1926                                     u1494 1232  
                                   u1590 1144                                     u1830 1B94  
                                   u1495 122E                                     u2287 156C  
                                   u1591 1140                                     u1831 1B90  
                                   u1807 18E2                                     u1680 1A0C  
                                   u1760 1996                                     u2297 1584  
                                   u1681 1A08                                     u1761 1992  
                                   u1817 1910                                     u1674 19EA  
                                   u1770 1CE0                                     u1690 1C40  
                                   u1754 1974                                     u1675 19E6  
                                   u1771 1CDC                                     u1691 1C3C  
                                   u1755 1970                                     u1790 18A8  
                                   u1791 18A4                  ??_application_intialize 0015  
          ??_lcd_4bit_send_enable_signal 000A                                     abs@a 0007  
                                   _dbuf 0080                                     _main 1AD4  
                                   _prec 0061                                     fsr0h 0FEA  
                                   fsr1h 0FE2                                     indf0 0FEF  
                                   fsr2h 0FDA                                     fsr0l 0FE9  
                                   indf2 0FDF                                     fsr1l 0FE1  
                                   fsr2l 0FD9                                     prodl 0FF3  
                                   start 0000            __end_of_lcd_8bit_send_command 1A1A  
                           ___param_bank 0000                    _lcd_4bit_send_command 1A78  
                                  ??_abs 0009                     _gpio_pin_write_logic 12FE  
                                  ?_main 0001                          __end_of___awdiv 16A6  
                        __end_of___awmod 1756                          ___awdiv@divisor 0003  
                        ___awdiv@counter 0005                      relay_turn_off@F3062 0065  
                           vfpfcnvrt@fmt 000C                                    _PORTA 0F80  
                                  _PORTB 0F81                                    _PORTC 0F82  
                                  _PORTD 0F83                                    _PORTE 0F84  
                                  _TRISA 0F92                                    _TRISB 0F93  
                                  _TRISC 0F94                                    _TRISD 0F95  
                                  _TRISE 0F96                                    _lcd_1 0059  
                                  _lcd_2 004F                                    _flags 0063  
                                  _fputc 1756                 ?_lcd_8bit_send_char_data 000B  
                                  _width 005F                                    _putch 1D6A  
                                  tablat 0FF5                                    status 0FD8  
                        __end_of_sprintf 1C7E                          __initialization 1BCA  
                           __end_of_main 1B2E                    ?_gpio_pin_write_logic 0001  
                 lcd_8bit_set_cursor@ret 0016                   lcd_8bit_set_cursor@row 0012  
                          _lat_registers 003B                                   ??_main 0030  
                          __activetblptr 0002                         led_turn_on@F3063 006A  
                                 ?_fputc 0001                         ___awdiv@dividend 0001  
                                 ?_putch 0001                            vfpfcnvrt@done 000F  
                 ?_lcd_4bit_send_command 000C                             vfprintf@cfmt 0019  
                              ??___awdiv 0005                                ??___awmod 0005  
                                 _memset 1CB2                                   clear_0 1BF0  
                                 clear_1 1BFC                         ___awdiv@quotient 0007  
                        ___awmod@divisor 0003                                   isa$std 0001  
                        ___awmod@counter 0005  gpio_pin_direction_intialize@_pin_config 0001  
                                 fputc@c 0001                             __pdataCOMRAM 0031  
                           __mediumconst 0000                                   tblptrh 0FF7  
                                 tblptrl 0FF6                                   tblptru 0FF8  
                                 putch@c 0001                         __end_of_vfprintf 1C4A  
                              ??_sprintf 0020               lcd_8bit_send_command@_lcd_ 000B  
                             __accesstop 0080                  __end_of__initialization 1C02  
               ??_convert_byte_to_string 002E                            ___rparam_used 0001  
                       ??_lcd_send_4bits 000B                   ??_gpio_pin_write_logic 0003  
                         __pcstackCOMRAM 0001                            __end_of_fputc 1800  
                          __end_of_putch 1D6C                 lcd_4bit_send_command@ret 000E  
                                ??_fputc 0004                                  ??_putch 0001  
                             __pbssBANK0 0080                 lcd_8bit_initialize@_lcd_ 0011  
          __end_of_application_intialize 1D6A                   lcd_8bit_initialize@ret 0014  
           lcd_8bit_send_char_data@_lcd_ 000B                        led_turn_off@F3068 0069  
                                ?_memset 0001         lcd_8bit_send_string_position@ret 001C  
       lcd_8bit_send_string_position@row 0018         lcd_8bit_send_string_position@str 001A  
                       _lcd_counter_text 006C                     led_turn_toggle@F3073 0068  
    __end_of_lcd_8bit_send_enable_signal 1D34              _lcd_8bit_send_enable_signal 1D10  
                             _btn_values 1001          ??_lcd_8bit_send_string_position 001C  
         lcd_8bit_send_enable_signal@ret 000A                           _tris_registers 0045  
          ??_lcd_8bit_send_enable_signal 000A   lcd_8bit_initialize@l_data_pins_counter 0013  
 lcd_4bit_initialize@l_data_pins_counter 0011                                  __Hparam 0000  
                                __Lparam 0000                    _lcd_8bit_send_command 19A4  
                                ___awdiv 15E2                                  ___awmod 16A6  
                              ?_vfprintf 0016                             __psmallconst 1000  
             __end_of_gpio_pin_intialize 1A78                                  __pcinit 1BCA  
                                __ramtop 1000                                  __ptext0 1AD4  
                                __ptext1 1898                                  __ptext2 1800  
                                __ptext3 192E                                  __ptext4 1B7E  
                                __ptext5 1C4A                                  __ptext6 1C0C  
                                __ptext7 1020                                  __ptext8 1756  
                                __ptext9 1D6A                         ___awmod@dividend 0001  
                                _sprintf 1C4A                     end_of_initialization 1C02  
                      lcd_send_4bits@ret 000B                                  fputc@fp 0003  
                                memset@c 0002                                  memset@n 0004  
                                memset@p 0006                            __Lmediumconst 0000  
                ??_lcd_4bit_send_command 000E                    gpio_pin_intialize@ret 000B  
                      __end_of_vfpfcnvrt 11D8                                  postdec1 0FE5  
                                postdec2 0FDD                                  postinc0 0FEE  
                                postinc1 0FE6                                  postinc2 0FDE  
                       vfpfcnvrt@convarg 0011                               ??_vfprintf 0019  
                    _lcd_4bit_initialize 14F8                   _convert_byte_to_string 1B7E  
          gpio_pin_intialize@_pin_config 0009     __end_of_gpio_pin_direction_intialize 12FE  
           _gpio_pin_direction_intialize 11D8                     ?_lcd_4bit_initialize 000F  
       lcd_8bit_send_enable_signal@_lcd_ 0009    __end_of_lcd_8bit_send_string_position 192E  
          _lcd_8bit_send_string_position 1898                       relay_turn_on@F3057 0066  
                 ?_lcd_8bit_send_command 000B                              vfpfcnvrt@ap 000D  
                            vfpfcnvrt@cp 0010                              vfpfcnvrt@fp 000B  
                          __pidataCOMRAM 1CE2                           __end_of_memset 1CE2  
                    start_initialization 1BCA             ?_lcd_4bit_send_enable_signal 0009  
                    _lcd_8bit_initialize 140E                              __end_of_abs 1CB2  
          ?_gpio_pin_direction_intialize 0001                    ??_lcd_4bit_initialize 0010  
               lcd_8bit_set_cursor@_lcd_ 0011                     ?_lcd_8bit_initialize 0011  
                _lcd_8bit_send_char_data 192E                              vfprintf@fmt 0017  
              convert_byte_to_string@ret 002F                convert_byte_to_string@str 002D  
                               ??_memset 0006                      _lcd_8bit_set_cursor 1800  
                             memset@dest 0001             lcd_4bit_send_command@command 000D  
               lcd_8bit_send_command@ret 000F              convert_byte_to_string@value 002E  
                            __pbssCOMRAM 005F                     ?_lcd_8bit_set_cursor 0011  
        gpio_pin_direction_intialize@ret 0007                    ??_lcd_8bit_initialize 0012  
                  _application_intialize 1D58         lcd_4bit_send_enable_signal@_lcd_ 0009  
            lcd_8bit_send_char_data@data 000C          gpio_pin_write_logic@_pin_config 0001  
                               ?___awdiv 0001                                 ?___awmod 0001  
         ?_lcd_8bit_send_string_position 0017                gpio_pin_write_logic@logic 0002  
                            __smallconst 1000                                 ?_sprintf 001A  
                     _gpio_pin_intialize 1A1A                    ??_lcd_8bit_set_cursor 0014  
         ??_gpio_pin_direction_intialize 0002                ??_lcd_8bit_send_char_data 000D  
                    ?_gpio_pin_intialize 0009                              _lcd_counter 0064  
          __end_of_lcd_4bit_send_command 1AD4                  ?_convert_byte_to_string 002D  
   lcd_8bit_send_char_data@l_pin_counter 0010                                _vfpfcnvrt 1020  
                   ??_gpio_pin_intialize 000A                lcd_8bit_set_cursor@coulmn 0013  
                    lcd_send_4bits@_lcd_ 0009                               vfpfcnvrt@c 0015  
                gpio_pin_write_logic@ret 0008                                copy_data0 1BDE  
                ??_lcd_8bit_send_command 000D                   ?_application_intialize 0001  
                               __Hrparam 0000                               vfprintf@ap 0018  
                               __Lrparam 0000                               vfprintf@fp 0016  
         __end_of_convert_byte_to_string 1BCA                               ?_vfpfcnvrt 000B  
        __end_of_lcd_8bit_send_char_data 19A4                       __end_of_btn_values 1011  
                             sprintf@fmt 001B               lcd_8bit_send_char_data@ret 000F  
                               __ptext10 1C7E                                 __ptext11 16A6  
                               __ptext20 1B2E                                 __ptext12 15E2  
                               __ptext21 1D34                                 __ptext13 1CB2  
                               __ptext22 1A1A                                 __ptext14 1D58  
                               __ptext23 12FE                                 __ptext15 140E  
                               __ptext24 11D8                                 __ptext16 19A4  
                               __ptext17 1D10                                 __ptext18 14F8  
                               __ptext19 1A78                                 isa$xinst 0000  
                               _vfprintf 1C0C                           _lcd_send_4bits 1B2E  
            __end_of_lcd_4bit_initialize 15E2               lcd_4bit_send_command@_lcd_ 000C  
           __end_of_gpio_pin_write_logic 140E             ?_lcd_8bit_send_enable_signal 0009  
                              sprintf@ap 0020           lcd_4bit_send_enable_signal@ret 000A  
                 __end_of_lcd_send_4bits 1B7E                              ??_vfpfcnvrt 000E  
                               sprintf@f 0021                                 sprintf@s 001A  
                         _port_registers 0031              __end_of_lcd_8bit_initialize 14F8  
               lcd_4bit_initialize@_lcd_ 000F             lcd_8bit_send_command@command 000C  
                 lcd_4bit_initialize@ret 0012  
