

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Nov 14 18:29:28 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    26   000000                     
    27                           ; Generated 23/03/2023 GMT
    28                           ; 
    29                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F4620 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61   000000                     
    62                           	psect	idataCOMRAM
    63   0015DE                     __pidataCOMRAM:
    64                           	callstack 0
    65                           
    66                           ;initializer for _port_registers
    67   0015DE  80                 	db	128
    68   0015DF  0F                 	db	15
    69   0015E0  81                 	db	129
    70   0015E1  0F                 	db	15
    71   0015E2  82                 	db	130
    72   0015E3  0F                 	db	15
    73   0015E4  83                 	db	131
    74   0015E5  0F                 	db	15
    75   0015E6  84                 	db	132
    76   0015E7  0F                 	db	15
    77                           
    78                           ;initializer for _lat_registers
    79   0015E8  89                 	db	137
    80   0015E9  0F                 	db	15
    81   0015EA  8A                 	db	138
    82   0015EB  0F                 	db	15
    83   0015EC  8B                 	db	139
    84   0015ED  0F                 	db	15
    85   0015EE  8C                 	db	140
    86   0015EF  0F                 	db	15
    87   0015F0  8D                 	db	141
    88   0015F1  0F                 	db	15
    89                           
    90                           ;initializer for _tris_registers
    91   0015F2  92                 	db	146
    92   0015F3  0F                 	db	15
    93   0015F4  93                 	db	147
    94   0015F5  0F                 	db	15
    95   0015F6  94                 	db	148
    96   0015F7  0F                 	db	15
    97   0015F8  95                 	db	149
    98   0015F9  0F                 	db	15
    99   0015FA  96                 	db	150
   100   0015FB  0F                 	db	15
   101                           
   102                           ;initializer for _lcd_2
   103   0015FC  32                 	db	50
   104   0015FD  3A                 	db	58
   105   0015FE  03                 	db	3
   106   0015FF  0B                 	db	11
   107   001600  13                 	db	19
   108   001601  1B                 	db	27
   109   001602  23                 	db	35
   110   001603  2B                 	db	43
   111   001604  33                 	db	51
   112   001605  3B                 	db	59
   113                           
   114                           ;initializer for _lcd_1
   115   001606  02                 	db	2
   116   001607  0A                 	db	10
   117   001608  12                 	db	18
   118   001609  1A                 	db	26
   119   00160A  22                 	db	34
   120   00160B  2A                 	db	42
   121                           
   122                           	psect	smallconst
   123   001000                     __psmallconst:
   124                           	callstack 0
   125   001000  00                 	db	0
   126   001001                     _btn_values:
   127                           	callstack 0
   128   001001  37                 	db	55
   129   001002  38                 	db	56
   130   001003  39                 	db	57
   131   001004  2F                 	db	47
   132   001005  34                 	db	52
   133   001006  35                 	db	53
   134   001007  36                 	db	54
   135   001008  2A                 	db	42
   136   001009  31                 	db	49
   137   00100A  32                 	db	50
   138   00100B  33                 	db	51
   139   00100C  2D                 	db	45
   140   00100D  23                 	db	35
   141   00100E  30                 	db	48
   142   00100F  3D                 	db	61
   143   001010  2B                 	db	43
   144   001011                     __end_of_btn_values:
   145                           	callstack 0
   146   000000                     _PORTE	set	3972
   147   000000                     _PORTD	set	3971
   148   000000                     _PORTC	set	3970
   149   000000                     _PORTB	set	3969
   150   000000                     _PORTA	set	3968
   151   000000                     _LATA	set	3977
   152   000000                     _TRISA	set	3986
   153   000000                     _TRISE	set	3990
   154   000000                     _TRISD	set	3989
   155   000000                     _TRISC	set	3988
   156   000000                     _TRISB	set	3987
   157   000000                     _LATE	set	3981
   158   000000                     _LATD	set	3980
   159   000000                     _LATC	set	3979
   160   000000                     _LATB	set	3978
   161   001011  00                 	db	0	; dummy byte at the end
   162   000000                     
   163                           ; #config settings
   164                           
   165                           	psect	cinit
   166   0015A8                     __pcinit:
   167                           	callstack 0
   168   0015A8                     start_initialization:
   169                           	callstack 0
   170   0015A8                     __initialization:
   171                           	callstack 0
   172                           
   173                           ; Initialize objects allocated to COMRAM (46 bytes)
   174                           ; load TBLPTR registers with __pidataCOMRAM
   175   0015A8  0EDE               	movlw	low __pidataCOMRAM
   176   0015AA  6EF6               	movwf	tblptrl,c
   177   0015AC  0E15               	movlw	high __pidataCOMRAM
   178   0015AE  6EF7               	movwf	tblptrh,c
   179   0015B0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   180   0015B2  6EF8               	movwf	tblptru,c
   181   0015B4  EE00  F001         	lfsr	0,__pdataCOMRAM
   182   0015B8  EE10 F02E          	lfsr	1,46
   183   0015BC                     copy_data0:
   184   0015BC  0009               	tblrd		*+
   185   0015BE  CFF5 FFEE          	movff	tablat,postinc0
   186   0015C2  50E5               	movf	postdec1,w,c
   187   0015C4  50E1               	movf	fsr1l,w,c
   188   0015C6  E1FA               	bnz	copy_data0
   189                           
   190                           ; Clear objects allocated to COMRAM (7 bytes)
   191   0015C8  EE00  F04A         	lfsr	0,__pbssCOMRAM
   192   0015CC  0E07               	movlw	7
   193   0015CE                     clear_0:
   194   0015CE  6AEE               	clrf	postinc0,c
   195   0015D0  06E8               	decf	wreg,f,c
   196   0015D2  E1FD               	bnz	clear_0
   197   0015D4                     end_of_initialization:
   198                           	callstack 0
   199   0015D4                     __end_of__initialization:
   200                           	callstack 0
   201   0015D4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   202   0015D6  6EF8               	movwf	tblptru,c
   203   0015D8  0100               	movlb	0
   204   0015DA  EF18  F00B         	goto	_main	;jump to C main() function
   205                           
   206                           	psect	bssCOMRAM
   207   00004A                     __pbssCOMRAM:
   208                           	callstack 0
   209   00004A                     relay_turn_off@F2895:
   210                           	callstack 0
   211   00004A                     	ds	1
   212   00004B                     relay_turn_on@F2890:
   213                           	callstack 0
   214   00004B                     	ds	1
   215   00004C                     relay_initialize@F2885:
   216                           	callstack 0
   217   00004C                     	ds	1
   218   00004D                     led_turn_toggle@F2906:
   219                           	callstack 0
   220   00004D                     	ds	1
   221   00004E                     led_turn_off@F2901:
   222                           	callstack 0
   223   00004E                     	ds	1
   224   00004F                     led_turn_on@F2896:
   225                           	callstack 0
   226   00004F                     	ds	1
   227   000050                     led_initialize@F2891:
   228                           	callstack 0
   229   000050                     	ds	1
   230                           
   231                           	psect	dataCOMRAM
   232   000001                     __pdataCOMRAM:
   233                           	callstack 0
   234   000001                     _port_registers:
   235                           	callstack 0
   236   000001                     	ds	10
   237   00000B                     _lat_registers:
   238                           	callstack 0
   239   00000B                     	ds	10
   240   000015                     _tris_registers:
   241                           	callstack 0
   242   000015                     	ds	10
   243   00001F                     _lcd_2:
   244                           	callstack 0
   245   00001F                     	ds	10
   246   000029                     _lcd_1:
   247                           	callstack 0
   248   000029                     	ds	6
   249                           
   250                           	psect	cstackCOMRAM
   251   00002F                     __pcstackCOMRAM:
   252                           	callstack 0
   253   00002F                     gpio_pin_direction_intialize@_pin_config:
   254                           	callstack 0
   255   00002F                     gpio_pin_write_logic@_pin_config:
   256                           	callstack 0
   257                           
   258                           ; 1 bytes @ 0x0
   259   00002F                     	ds	1
   260   000030                     ??_gpio_pin_direction_intialize:
   261   000030                     gpio_pin_write_logic@logic:
   262                           	callstack 0
   263                           
   264                           ; 1 bytes @ 0x1
   265   000030                     	ds	1
   266   000031                     ??_gpio_pin_write_logic:
   267                           
   268                           ; 1 bytes @ 0x2
   269   000031                     	ds	4
   270   000035                     gpio_pin_direction_intialize@ret:
   271                           	callstack 0
   272                           
   273                           ; 1 bytes @ 0x6
   274   000035                     	ds	1
   275   000036                     gpio_pin_write_logic@ret:
   276                           	callstack 0
   277                           
   278                           ; 1 bytes @ 0x7
   279   000036                     	ds	1
   280   000037                     gpio_pin_intialize@_pin_config:
   281                           	callstack 0
   282   000037                     lcd_8bit_send_enable_signal@_lcd_:
   283                           	callstack 0
   284                           
   285                           ; 1 bytes @ 0x8
   286   000037                     	ds	1
   287   000038                     ??_gpio_pin_intialize:
   288   000038                     lcd_8bit_send_enable_signal@ret:
   289                           	callstack 0
   290                           
   291                           ; 1 bytes @ 0x9
   292   000038                     	ds	1
   293   000039                     gpio_pin_intialize@ret:
   294                           	callstack 0
   295   000039                     lcd_8bit_send_command@_lcd_:
   296                           	callstack 0
   297   000039                     lcd_8bit_send_char_data@_lcd_:
   298                           	callstack 0
   299                           
   300                           ; 1 bytes @ 0xA
   301   000039                     	ds	1
   302   00003A                     lcd_4bit_initialize@_lcd_:
   303                           	callstack 0
   304   00003A                     lcd_8bit_send_command@command:
   305                           	callstack 0
   306   00003A                     lcd_8bit_send_char_data@data:
   307                           	callstack 0
   308                           
   309                           ; 1 bytes @ 0xB
   310   00003A                     	ds	1
   311   00003B                     ??_lcd_8bit_send_command:
   312   00003B                     ??_lcd_8bit_send_char_data:
   313   00003B                     lcd_4bit_initialize@ret:
   314                           	callstack 0
   315                           
   316                           ; 1 bytes @ 0xC
   317   00003B                     	ds	1
   318   00003C                     lcd_4bit_initialize@l_data_pins_counter:
   319                           	callstack 0
   320                           
   321                           ; 1 bytes @ 0xD
   322   00003C                     	ds	1
   323   00003D                     lcd_8bit_send_command@ret:
   324                           	callstack 0
   325   00003D                     lcd_8bit_send_char_data@ret:
   326                           	callstack 0
   327                           
   328                           ; 1 bytes @ 0xE
   329   00003D                     	ds	1
   330   00003E                     lcd_8bit_send_command@l_pin_counter:
   331                           	callstack 0
   332   00003E                     lcd_8bit_send_char_data@l_pin_counter:
   333                           	callstack 0
   334                           
   335                           ; 1 bytes @ 0xF
   336   00003E                     	ds	1
   337   00003F                     lcd_8bit_initialize@_lcd_:
   338                           	callstack 0
   339   00003F                     lcd_8bit_set_cursor@_lcd_:
   340                           	callstack 0
   341                           
   342                           ; 1 bytes @ 0x10
   343   00003F                     	ds	1
   344   000040                     ??_lcd_8bit_initialize:
   345   000040                     lcd_8bit_set_cursor@row:
   346                           	callstack 0
   347                           
   348                           ; 1 bytes @ 0x11
   349   000040                     	ds	1
   350   000041                     lcd_8bit_initialize@l_data_pins_counter:
   351                           	callstack 0
   352   000041                     lcd_8bit_set_cursor@coulmn:
   353                           	callstack 0
   354                           
   355                           ; 1 bytes @ 0x12
   356   000041                     	ds	1
   357   000042                     ??_lcd_8bit_set_cursor:
   358   000042                     lcd_8bit_initialize@ret:
   359                           	callstack 0
   360                           
   361                           ; 1 bytes @ 0x13
   362   000042                     	ds	1
   363   000043                     
   364                           ; 1 bytes @ 0x14
   365   000043                     	ds	1
   366   000044                     lcd_8bit_set_cursor@ret:
   367                           	callstack 0
   368                           
   369                           ; 1 bytes @ 0x15
   370   000044                     	ds	1
   371   000045                     lcd_8bit_send_char_data_position@_lcd_:
   372                           	callstack 0
   373                           
   374                           ; 1 bytes @ 0x16
   375   000045                     	ds	1
   376   000046                     lcd_8bit_send_char_data_position@row:
   377                           	callstack 0
   378                           
   379                           ; 1 bytes @ 0x17
   380   000046                     	ds	1
   381   000047                     lcd_8bit_send_char_data_position@column:
   382                           	callstack 0
   383                           
   384                           ; 1 bytes @ 0x18
   385   000047                     	ds	1
   386   000048                     lcd_8bit_send_char_data_position@data:
   387                           	callstack 0
   388                           
   389                           ; 1 bytes @ 0x19
   390   000048                     	ds	1
   391   000049                     lcd_8bit_send_char_data_position@ret:
   392                           	callstack 0
   393                           
   394                           ; 1 bytes @ 0x1A
   395   000049                     	ds	1
   396   00004A                     
   397                           ; 1 bytes @ 0x1B
   398 ;;
   399 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   400 ;;
   401 ;; *************** function _main *****************
   402 ;; Defined at:
   403 ;;		line 98 in file "application.c"
   404 ;; Parameters:    Size  Location     Type
   405 ;;		None
   406 ;; Auto vars:     Size  Location     Type
   407 ;;  ret             1    0        unsigned char 
   408 ;; Return value:  Size  Location     Type
   409 ;;                  2  284[None  ] int 
   410 ;; Registers used:
   411 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   412 ;; Tracked objects:
   413 ;;		On entry : 0/0
   414 ;;		On exit  : 0/0
   415 ;;		Unchanged: 0/0
   416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   421 ;;Total ram usage:        0 bytes
   422 ;; Hardware stack levels required when called: 5
   423 ;; This function calls:
   424 ;;		_application_intialize
   425 ;;		_lcd_8bit_send_char_data_position
   426 ;; This function is called by:
   427 ;;		Startup code after reset
   428 ;; This function uses a non-reentrant model
   429 ;;
   430                           
   431                           	psect	text0
   432   001630                     __ptext0:
   433                           	callstack 0
   434   001630                     _main:
   435                           	callstack 26
   436   001630                     
   437                           ;application.c: 100:     application_intialize();
   438   001630  EC28  F00B         	call	_application_intialize	;wreg free
   439   001634                     l2275:
   440   001634  0E1F               	movlw	low _lcd_2
   441   001636  6E45               	movwf	lcd_8bit_send_char_data_position@_lcd_^0,c
   442   001638  0E02               	movlw	2
   443   00163A  6E46               	movwf	lcd_8bit_send_char_data_position@row^0,c
   444   00163C  0E02               	movlw	2
   445   00163E  6E47               	movwf	lcd_8bit_send_char_data_position@column^0,c
   446   001640  0E41               	movlw	65
   447   001642  6E48               	movwf	lcd_8bit_send_char_data_position@data^0,c
   448   001644  ECB6  F00A         	call	_lcd_8bit_send_char_data_position	;wreg free
   449   001648  EF1A  F00B         	goto	l2275
   450   00164C  EF00  F000         	goto	start
   451   001650                     __end_of_main:
   452                           	callstack 0
   453                           
   454 ;; *************** function _lcd_8bit_send_char_data_position *****************
   455 ;; Defined at:
   456 ;;		line 286 in file "ECU_Layer/LCD/ecu_lcd.c"
   457 ;; Parameters:    Size  Location     Type
   458 ;;  _lcd_           1   22[COMRAM] PTR const struct .
   459 ;;		 -> lcd_2(10), 
   460 ;;  row             1   23[COMRAM] unsigned char 
   461 ;;  column          1   24[COMRAM] unsigned char 
   462 ;;  data            1   25[COMRAM] unsigned char 
   463 ;; Auto vars:     Size  Location     Type
   464 ;;  ret             1   26[COMRAM] unsigned char 
   465 ;; Return value:  Size  Location     Type
   466 ;;                  1    wreg      unsigned char 
   467 ;; Registers used:
   468 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   469 ;; Tracked objects:
   470 ;;		On entry : 0/0
   471 ;;		On exit  : 0/0
   472 ;;		Unchanged: 0/0
   473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   474 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   475 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   477 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   478 ;;Total ram usage:        5 bytes
   479 ;; Hardware stack levels used: 1
   480 ;; Hardware stack levels required when called: 4
   481 ;; This function calls:
   482 ;;		_lcd_8bit_send_char_data
   483 ;;		_lcd_8bit_set_cursor
   484 ;; This function is called by:
   485 ;;		_main
   486 ;; This function uses a non-reentrant model
   487 ;;
   488                           
   489                           	psect	text1
   490   00156C                     __ptext1:
   491                           	callstack 0
   492   00156C                     _lcd_8bit_send_char_data_position:
   493                           	callstack 26
   494   00156C                     
   495                           ;ECU_Layer/LCD/ecu_lcd.c: 288:     if(((void*)0) == _lcd_){
   496   00156C  5045               	movf	lcd_8bit_send_char_data_position@_lcd_^0,w,c
   497   00156E  A4D8               	btfss	status,2,c
   498   001570  EFBC  F00A         	goto	u1101
   499   001574  EFBE  F00A         	goto	u1100
   500   001578                     u1101:
   501   001578  EFC2  F00A         	goto	l2017
   502   00157C                     u1100:
   503   00157C                     
   504                           ;ECU_Layer/LCD/ecu_lcd.c: 289:         ret = (Std_ReturnType)0x00;
   505   00157C  0E00               	movlw	0
   506   00157E  6E49               	movwf	lcd_8bit_send_char_data_position@ret^0,c
   507                           
   508                           ;ECU_Layer/LCD/ecu_lcd.c: 290:     }
   509   001580  EFD2  F00A         	goto	l2019
   510   001584                     l2017:
   511                           
   512                           ;ECU_Layer/LCD/ecu_lcd.c: 292:         ret = lcd_8bit_set_cursor(_lcd_, row, column);
   513   001584  C045  F03F         	movff	lcd_8bit_send_char_data_position@_lcd_,lcd_8bit_set_cursor@_lcd_
   514   001588  C046  F040         	movff	lcd_8bit_send_char_data_position@row,lcd_8bit_set_cursor@row
   515   00158C  C047  F041         	movff	lcd_8bit_send_char_data_position@column,lcd_8bit_set_cursor@coulmn
   516   001590  EC99  F009         	call	_lcd_8bit_set_cursor	;wreg free
   517   001594  6E49               	movwf	lcd_8bit_send_char_data_position@ret^0,c
   518                           
   519                           ;ECU_Layer/LCD/ecu_lcd.c: 293:         ret = lcd_8bit_send_char_data(_lcd_, data);
   520   001596  C045  F039         	movff	lcd_8bit_send_char_data_position@_lcd_,lcd_8bit_send_char_data@_lcd_
   521   00159A  C048  F03A         	movff	lcd_8bit_send_char_data_position@data,lcd_8bit_send_char_data@data
   522   00159E  ECE5  F009         	call	_lcd_8bit_send_char_data	;wreg free
   523   0015A2  6E49               	movwf	lcd_8bit_send_char_data_position@ret^0,c
   524   0015A4                     l2019:
   525                           
   526                           ;ECU_Layer/LCD/ecu_lcd.c: 297:     return ret;
   527   0015A4  5049               	movf	lcd_8bit_send_char_data_position@ret^0,w,c
   528   0015A6  0012               	return		;funcret
   529   0015A8                     __end_of_lcd_8bit_send_char_data_position:
   530                           	callstack 0
   531                           
   532 ;; *************** function _lcd_8bit_set_cursor *****************
   533 ;; Defined at:
   534 ;;		line 409 in file "ECU_Layer/LCD/ecu_lcd.c"
   535 ;; Parameters:    Size  Location     Type
   536 ;;  _lcd_           1   16[COMRAM] PTR const struct .
   537 ;;		 -> lcd_2(10), 
   538 ;;  row             1   17[COMRAM] unsigned char 
   539 ;;  coulmn          1   18[COMRAM] unsigned char 
   540 ;; Auto vars:     Size  Location     Type
   541 ;;  ret             1   21[COMRAM] unsigned char 
   542 ;; Return value:  Size  Location     Type
   543 ;;                  1    wreg      unsigned char 
   544 ;; Registers used:
   545 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   546 ;; Tracked objects:
   547 ;;		On entry : 0/0
   548 ;;		On exit  : 0/0
   549 ;;		Unchanged: 0/0
   550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   551 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   552 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   553 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   554 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   555 ;;Total ram usage:        6 bytes
   556 ;; Hardware stack levels used: 1
   557 ;; Hardware stack levels required when called: 3
   558 ;; This function calls:
   559 ;;		_lcd_8bit_send_command
   560 ;; This function is called by:
   561 ;;		_lcd_8bit_send_char_data_position
   562 ;; This function uses a non-reentrant model
   563 ;;
   564                           
   565                           	psect	text2
   566   001332                     __ptext2:
   567                           	callstack 0
   568   001332                     _lcd_8bit_set_cursor:
   569                           	callstack 26
   570   001332                     
   571                           ;ECU_Layer/LCD/ecu_lcd.c: 410:     Std_ReturnType ret = (Std_ReturnType)0x01;
   572   001332  0E01               	movlw	1
   573   001334  6E44               	movwf	lcd_8bit_set_cursor@ret^0,c
   574   001336                     
   575                           ;ECU_Layer/LCD/ecu_lcd.c: 411:     coulmn--;
   576   001336  0641               	decf	lcd_8bit_set_cursor@coulmn^0,f,c
   577                           
   578                           ;ECU_Layer/LCD/ecu_lcd.c: 412:     switch (row){
   579   001338  EFC6  F009         	goto	l1997
   580   00133C                     l1989:
   581   00133C  C03F  F039         	movff	lcd_8bit_set_cursor@_lcd_,lcd_8bit_send_command@_lcd_
   582   001340  5041               	movf	lcd_8bit_set_cursor@coulmn^0,w,c
   583   001342  0F80               	addlw	128
   584   001344  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   585   001346  EC20  F00A         	call	_lcd_8bit_send_command	;wreg free
   586   00134A  6E44               	movwf	lcd_8bit_set_cursor@ret^0,c
   587                           
   588                           ;ECU_Layer/LCD/ecu_lcd.c: 414:         break;
   589   00134C  EFE3  F009         	goto	l1999
   590   001350                     l1991:
   591   001350  C03F  F039         	movff	lcd_8bit_set_cursor@_lcd_,lcd_8bit_send_command@_lcd_
   592   001354  5041               	movf	lcd_8bit_set_cursor@coulmn^0,w,c
   593   001356  0FC0               	addlw	192
   594   001358  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   595   00135A  EC20  F00A         	call	_lcd_8bit_send_command	;wreg free
   596   00135E  6E44               	movwf	lcd_8bit_set_cursor@ret^0,c
   597                           
   598                           ;ECU_Layer/LCD/ecu_lcd.c: 416:         break;
   599   001360  EFE3  F009         	goto	l1999
   600   001364                     l1993:
   601   001364  C03F  F039         	movff	lcd_8bit_set_cursor@_lcd_,lcd_8bit_send_command@_lcd_
   602   001368  5041               	movf	lcd_8bit_set_cursor@coulmn^0,w,c
   603   00136A  0F94               	addlw	148
   604   00136C  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   605   00136E  EC20  F00A         	call	_lcd_8bit_send_command	;wreg free
   606   001372  6E44               	movwf	lcd_8bit_set_cursor@ret^0,c
   607                           
   608                           ;ECU_Layer/LCD/ecu_lcd.c: 418:         break;
   609   001374  EFE3  F009         	goto	l1999
   610   001378                     l1995:
   611   001378  C03F  F039         	movff	lcd_8bit_set_cursor@_lcd_,lcd_8bit_send_command@_lcd_
   612   00137C  5041               	movf	lcd_8bit_set_cursor@coulmn^0,w,c
   613   00137E  0FD4               	addlw	212
   614   001380  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   615   001382  EC20  F00A         	call	_lcd_8bit_send_command	;wreg free
   616   001386  6E44               	movwf	lcd_8bit_set_cursor@ret^0,c
   617                           
   618                           ;ECU_Layer/LCD/ecu_lcd.c: 420:         break;
   619   001388  EFE3  F009         	goto	l1999
   620   00138C                     l1997:
   621   00138C  5040               	movf	lcd_8bit_set_cursor@row^0,w,c
   622   00138E  6E42               	movwf	??_lcd_8bit_set_cursor^0,c
   623   001390  6A43               	clrf	(??_lcd_8bit_set_cursor+1)^0,c
   624                           
   625                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   626                           ; Switch size 1, requested type "simple"
   627                           ; Number of cases is 1, Range of values is 0 to 0
   628                           ; switch strategies available:
   629                           ; Name         Instructions Cycles
   630                           ; simple_byte            4     3 (average)
   631                           ;	Chosen strategy is simple_byte
   632   001392  5043               	movf	(??_lcd_8bit_set_cursor+1)^0,w,c
   633   001394  0A00               	xorlw	0	; case 0
   634   001396  B4D8               	btfsc	status,2,c
   635   001398  EFD0  F009         	goto	l2331
   636   00139C  EFE3  F009         	goto	l1999
   637   0013A0                     l2331:
   638                           
   639                           ; Switch size 1, requested type "simple"
   640                           ; Number of cases is 4, Range of values is 1 to 4
   641                           ; switch strategies available:
   642                           ; Name         Instructions Cycles
   643                           ; simple_byte           13     7 (average)
   644                           ;	Chosen strategy is simple_byte
   645   0013A0  5042               	movf	??_lcd_8bit_set_cursor^0,w,c
   646   0013A2  0A01               	xorlw	1	; case 1
   647   0013A4  B4D8               	btfsc	status,2,c
   648   0013A6  EF9E  F009         	goto	l1989
   649   0013AA  0A03               	xorlw	3	; case 2
   650   0013AC  B4D8               	btfsc	status,2,c
   651   0013AE  EFA8  F009         	goto	l1991
   652   0013B2  0A01               	xorlw	1	; case 3
   653   0013B4  B4D8               	btfsc	status,2,c
   654   0013B6  EFB2  F009         	goto	l1993
   655   0013BA  0A07               	xorlw	7	; case 4
   656   0013BC  B4D8               	btfsc	status,2,c
   657   0013BE  EFBC  F009         	goto	l1995
   658   0013C2  EFE3  F009         	goto	l1999
   659   0013C6                     l1999:
   660                           
   661                           ;ECU_Layer/LCD/ecu_lcd.c: 423:     return ret;
   662   0013C6  5044               	movf	lcd_8bit_set_cursor@ret^0,w,c
   663   0013C8  0012               	return		;funcret
   664   0013CA                     __end_of_lcd_8bit_set_cursor:
   665                           	callstack 0
   666                           
   667 ;; *************** function _lcd_8bit_send_char_data *****************
   668 ;; Defined at:
   669 ;;		line 258 in file "ECU_Layer/LCD/ecu_lcd.c"
   670 ;; Parameters:    Size  Location     Type
   671 ;;  _lcd_           1   10[COMRAM] PTR const struct .
   672 ;;		 -> lcd_2(10), 
   673 ;;  data            1   11[COMRAM] unsigned char 
   674 ;; Auto vars:     Size  Location     Type
   675 ;;  l_pin_counte    1   15[COMRAM] unsigned char 
   676 ;;  ret             1   14[COMRAM] unsigned char 
   677 ;; Return value:  Size  Location     Type
   678 ;;                  1    wreg      unsigned char 
   679 ;; Registers used:
   680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   681 ;; Tracked objects:
   682 ;;		On entry : 0/0
   683 ;;		On exit  : 0/0
   684 ;;		Unchanged: 0/0
   685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   686 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   687 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   688 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   689 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   690 ;;Total ram usage:        6 bytes
   691 ;; Hardware stack levels used: 1
   692 ;; Hardware stack levels required when called: 2
   693 ;; This function calls:
   694 ;;		_gpio_pin_write_logic
   695 ;;		_lcd_8bit_send_enable_signal
   696 ;; This function is called by:
   697 ;;		_lcd_8bit_send_char_data_position
   698 ;; This function uses a non-reentrant model
   699 ;;
   700                           
   701                           	psect	text3
   702   0013CA                     __ptext3:
   703                           	callstack 0
   704   0013CA                     _lcd_8bit_send_char_data:
   705                           	callstack 27
   706   0013CA                     
   707                           ;ECU_Layer/LCD/ecu_lcd.c: 260:     uint8 l_pin_counter = 0;
   708   0013CA  0E00               	movlw	0
   709   0013CC  6E3E               	movwf	lcd_8bit_send_char_data@l_pin_counter^0,c
   710                           
   711                           ;ECU_Layer/LCD/ecu_lcd.c: 261:     if(((void*)0) == _lcd_){
   712   0013CE  5039               	movf	lcd_8bit_send_char_data@_lcd_^0,w,c
   713   0013D0  A4D8               	btfss	status,2,c
   714   0013D2  EFED  F009         	goto	u1071
   715   0013D6  EFEF  F009         	goto	u1070
   716   0013DA                     u1071:
   717   0013DA  EFF3  F009         	goto	l1965
   718   0013DE                     u1070:
   719   0013DE                     
   720                           ;ECU_Layer/LCD/ecu_lcd.c: 262:         ret = (Std_ReturnType)0x00;
   721   0013DE  0E00               	movlw	0
   722   0013E0  6E3D               	movwf	lcd_8bit_send_char_data@ret^0,c
   723                           
   724                           ;ECU_Layer/LCD/ecu_lcd.c: 263:     }
   725   0013E2  EF1E  F00A         	goto	l1981
   726   0013E6                     l1965:
   727   0013E6  C039  F02F         	movff	lcd_8bit_send_char_data@_lcd_,gpio_pin_write_logic@_pin_config
   728   0013EA  0E01               	movlw	1
   729   0013EC  6E30               	movwf	gpio_pin_write_logic@logic^0,c
   730   0013EE  EC9C  F008         	call	_gpio_pin_write_logic	;wreg free
   731   0013F2                     
   732                           ;ECU_Layer/LCD/ecu_lcd.c: 266:         for(l_pin_counter = 0 ; l_pin_counter < 8 ; l_pin
      +                          _counter++){
   733   0013F2  0E00               	movlw	0
   734   0013F4  6E3E               	movwf	lcd_8bit_send_char_data@l_pin_counter^0,c
   735   0013F6                     l1973:
   736   0013F6  5039               	movf	lcd_8bit_send_char_data@_lcd_^0,w,c
   737   0013F8  243E               	addwf	lcd_8bit_send_char_data@l_pin_counter^0,w,c
   738   0013FA  0F02               	addlw	2
   739   0013FC  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
   740   0013FE  C03E  F03B         	movff	lcd_8bit_send_char_data@l_pin_counter,??_lcd_8bit_send_char_data
   741   001402  C03A  F03C         	movff	lcd_8bit_send_char_data@data,??_lcd_8bit_send_char_data+1
   742   001406  2A3B               	incf	??_lcd_8bit_send_char_data^0,f,c
   743   001408  EF08  F00A         	goto	u1084
   744   00140C                     u1085:
   745   00140C  90D8               	bcf	status,0,c
   746   00140E  323C               	rrcf	(??_lcd_8bit_send_char_data+1)^0,f,c
   747   001410                     u1084:
   748   001410  2E3B               	decfsz	??_lcd_8bit_send_char_data^0,f,c
   749   001412  EF06  F00A         	goto	u1085
   750   001416  503C               	movf	(??_lcd_8bit_send_char_data+1)^0,w,c
   751   001418  0B01               	andlw	1
   752   00141A  6E30               	movwf	gpio_pin_write_logic@logic^0,c
   753   00141C  EC9C  F008         	call	_gpio_pin_write_logic	;wreg free
   754   001420                     
   755                           ;ECU_Layer/LCD/ecu_lcd.c: 268:         }
   756   001420  2A3E               	incf	lcd_8bit_send_char_data@l_pin_counter^0,f,c
   757   001422  0E07               	movlw	7
   758   001424  643E               	cpfsgt	lcd_8bit_send_char_data@l_pin_counter^0,c
   759   001426  EF17  F00A         	goto	u1091
   760   00142A  EF19  F00A         	goto	u1090
   761   00142E                     u1091:
   762   00142E  EFFB  F009         	goto	l1973
   763   001432                     u1090:
   764   001432                     
   765                           ;ECU_Layer/LCD/ecu_lcd.c: 269:         ret = lcd_8bit_send_enable_signal(_lcd_);
   766   001432  C039  F037         	movff	lcd_8bit_send_char_data@_lcd_,lcd_8bit_send_enable_signal@_lcd_
   767   001436  EC06  F00B         	call	_lcd_8bit_send_enable_signal	;wreg free
   768   00143A  6E3D               	movwf	lcd_8bit_send_char_data@ret^0,c
   769   00143C                     l1981:
   770                           
   771                           ;ECU_Layer/LCD/ecu_lcd.c: 273:     return ret;
   772   00143C  503D               	movf	lcd_8bit_send_char_data@ret^0,w,c
   773   00143E  0012               	return		;funcret
   774   001440                     __end_of_lcd_8bit_send_char_data:
   775                           	callstack 0
   776                           
   777 ;; *************** function _application_intialize *****************
   778 ;; Defined at:
   779 ;;		line 111 in file "application.c"
   780 ;; Parameters:    Size  Location     Type
   781 ;;		None
   782 ;; Auto vars:     Size  Location     Type
   783 ;;  ret             1    0        unsigned char 
   784 ;; Return value:  Size  Location     Type
   785 ;;                  1    wreg      void 
   786 ;; Registers used:
   787 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   788 ;; Tracked objects:
   789 ;;		On entry : 0/0
   790 ;;		On exit  : 0/0
   791 ;;		Unchanged: 0/0
   792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   797 ;;Total ram usage:        0 bytes
   798 ;; Hardware stack levels used: 1
   799 ;; Hardware stack levels required when called: 4
   800 ;; This function calls:
   801 ;;		_lcd_4bit_initialize
   802 ;;		_lcd_8bit_initialize
   803 ;; This function is called by:
   804 ;;		_main
   805 ;; This function uses a non-reentrant model
   806 ;;
   807                           
   808                           	psect	text4
   809   001650                     __ptext4:
   810                           	callstack 0
   811   001650                     _application_intialize:
   812                           	callstack 26
   813   001650  0E29               	movlw	low _lcd_1
   814   001652  6E3A               	movwf	lcd_4bit_initialize@_lcd_^0,c
   815   001654  EC8A  F00A         	call	_lcd_4bit_initialize	;wreg free
   816   001658  0E1F               	movlw	low _lcd_2
   817   00165A  6E3F               	movwf	lcd_8bit_initialize@_lcd_^0,c
   818   00165C  EC24  F009         	call	_lcd_8bit_initialize	;wreg free
   819   001660  0012               	return		;funcret
   820   001662                     __end_of_application_intialize:
   821                           	callstack 0
   822                           
   823 ;; *************** function _lcd_8bit_initialize *****************
   824 ;; Defined at:
   825 ;;		line 193 in file "ECU_Layer/LCD/ecu_lcd.c"
   826 ;; Parameters:    Size  Location     Type
   827 ;;  _lcd_           1   16[COMRAM] PTR const struct .
   828 ;;		 -> lcd_2(10), 
   829 ;; Auto vars:     Size  Location     Type
   830 ;;  ret             1   19[COMRAM] unsigned char 
   831 ;;  l_data_pins_    1   18[COMRAM] unsigned char 
   832 ;; Return value:  Size  Location     Type
   833 ;;                  1    wreg      unsigned char 
   834 ;; Registers used:
   835 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   836 ;; Tracked objects:
   837 ;;		On entry : 0/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   841 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   842 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   843 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   844 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   845 ;;Total ram usage:        4 bytes
   846 ;; Hardware stack levels used: 1
   847 ;; Hardware stack levels required when called: 3
   848 ;; This function calls:
   849 ;;		_gpio_pin_intialize
   850 ;;		_lcd_8bit_send_command
   851 ;; This function is called by:
   852 ;;		_application_intialize
   853 ;; This function uses a non-reentrant model
   854 ;;
   855                           
   856                           	psect	text5
   857   001248                     __ptext5:
   858                           	callstack 0
   859   001248                     _lcd_8bit_initialize:
   860                           	callstack 26
   861   001248                     
   862                           ;ECU_Layer/LCD/ecu_lcd.c: 195:     uint8 l_data_pins_counter = 0;
   863   001248  0E00               	movlw	0
   864   00124A  6E41               	movwf	lcd_8bit_initialize@l_data_pins_counter^0,c
   865                           
   866                           ;ECU_Layer/LCD/ecu_lcd.c: 196:     if(((void*)0) == _lcd_){
   867   00124C  503F               	movf	lcd_8bit_initialize@_lcd_^0,w,c
   868   00124E  A4D8               	btfss	status,2,c
   869   001250  EF2C  F009         	goto	u1051
   870   001254  EF2E  F009         	goto	u1050
   871   001258                     u1051:
   872   001258  EF32  F009         	goto	l1921
   873   00125C                     u1050:
   874   00125C                     
   875                           ;ECU_Layer/LCD/ecu_lcd.c: 197:         ret = (Std_ReturnType)0x00;
   876   00125C  0E00               	movlw	0
   877   00125E  6E42               	movwf	lcd_8bit_initialize@ret^0,c
   878                           
   879                           ;ECU_Layer/LCD/ecu_lcd.c: 198:     }
   880   001260  EF97  F009         	goto	l1957
   881   001264                     l1921:
   882                           
   883                           ;ECU_Layer/LCD/ecu_lcd.c: 200:         ret = gpio_pin_intialize(&(_lcd_->lcd_rs));
   884   001264  C03F  F037         	movff	lcd_8bit_initialize@_lcd_,gpio_pin_intialize@_pin_config
   885   001268  EC5B  F00A         	call	_gpio_pin_intialize	;wreg free
   886   00126C  6E42               	movwf	lcd_8bit_initialize@ret^0,c
   887                           
   888                           ;ECU_Layer/LCD/ecu_lcd.c: 201:         ret = gpio_pin_intialize(&(_lcd_->lcd_en));
   889   00126E  283F               	incf	lcd_8bit_initialize@_lcd_^0,w,c
   890   001270  6E37               	movwf	gpio_pin_intialize@_pin_config^0,c
   891   001272  EC5B  F00A         	call	_gpio_pin_intialize	;wreg free
   892   001276  6E42               	movwf	lcd_8bit_initialize@ret^0,c
   893   001278                     
   894                           ;ECU_Layer/LCD/ecu_lcd.c: 202:         for(l_data_pins_counter = 0 ; l_data_pins_counter
      +                          <8 ; l_data_pins_counter++){
   895   001278  0E00               	movlw	0
   896   00127A  6E41               	movwf	lcd_8bit_initialize@l_data_pins_counter^0,c
   897   00127C                     l1929:
   898   00127C  503F               	movf	lcd_8bit_initialize@_lcd_^0,w,c
   899   00127E  2441               	addwf	lcd_8bit_initialize@l_data_pins_counter^0,w,c
   900   001280  0F02               	addlw	2
   901   001282  6E37               	movwf	gpio_pin_intialize@_pin_config^0,c
   902   001284  EC5B  F00A         	call	_gpio_pin_intialize	;wreg free
   903   001288                     
   904                           ;ECU_Layer/LCD/ecu_lcd.c: 204:         }
   905   001288  2A41               	incf	lcd_8bit_initialize@l_data_pins_counter^0,f,c
   906   00128A  0E07               	movlw	7
   907   00128C  6441               	cpfsgt	lcd_8bit_initialize@l_data_pins_counter^0,c
   908   00128E  EF4B  F009         	goto	u1061
   909   001292  EF4D  F009         	goto	u1060
   910   001296                     u1061:
   911   001296  EF3E  F009         	goto	l1929
   912   00129A                     u1060:
   913   00129A                     
   914                           ;ECU_Layer/LCD/ecu_lcd.c: 205:         _delay((unsigned long)((20)*(4000000UL/4000.0)));
   915   00129A  0E1A               	movlw	26
   916   00129C  6E40               	movwf	??_lcd_8bit_initialize^0,c
   917   00129E  0EF8               	movlw	248
   918   0012A0                     u1427:
   919   0012A0  2EE8               	decfsz	wreg,f,c
   920   0012A2  D7FE               	bra	u1427
   921   0012A4  2E40               	decfsz	??_lcd_8bit_initialize^0,f,c
   922   0012A6  D7FC               	bra	u1427
   923   0012A8  D000               	nop2	
   924   0012AA  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
   925   0012AE  0E38               	movlw	56
   926   0012B0  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   927   0012B2  EC20  F00A         	call	_lcd_8bit_send_command	;wreg free
   928   0012B6                     
   929                           ;ECU_Layer/LCD/ecu_lcd.c: 207:         _delay((unsigned long)((5)*(4000000UL/4000.0)));
   930   0012B6  0E07               	movlw	7
   931   0012B8  6E40               	movwf	??_lcd_8bit_initialize^0,c
   932   0012BA  0E7D               	movlw	125
   933   0012BC                     u1437:
   934   0012BC  2EE8               	decfsz	wreg,f,c
   935   0012BE  D7FE               	bra	u1437
   936   0012C0  2E40               	decfsz	??_lcd_8bit_initialize^0,f,c
   937   0012C2  D7FC               	bra	u1437
   938   0012C4  0000               	nop	
   939   0012C6  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
   940   0012CA  0E38               	movlw	56
   941   0012CC  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   942   0012CE  EC20  F00A         	call	_lcd_8bit_send_command	;wreg free
   943   0012D2                     
   944                           ;ECU_Layer/LCD/ecu_lcd.c: 209:         _delay((unsigned long)((150)*(4000000UL/4000000.0
      +                          )));
   945   0012D2  0E32               	movlw	50
   946   0012D4                     u1447:
   947   0012D4  2EE8               	decfsz	wreg,f,c
   948   0012D6  D7FE               	bra	u1447
   949   0012D8  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
   950   0012DC  0E38               	movlw	56
   951   0012DE  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   952   0012E0  EC20  F00A         	call	_lcd_8bit_send_command	;wreg free
   953   0012E4  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
   954   0012E8  0E01               	movlw	1
   955   0012EA  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   956   0012EC  EC20  F00A         	call	_lcd_8bit_send_command	;wreg free
   957   0012F0  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
   958   0012F4  0E02               	movlw	2
   959   0012F6  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   960   0012F8  EC20  F00A         	call	_lcd_8bit_send_command	;wreg free
   961   0012FC  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
   962   001300  0E06               	movlw	6
   963   001302  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   964   001304  EC20  F00A         	call	_lcd_8bit_send_command	;wreg free
   965   001308  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
   966   00130C  0E0C               	movlw	12
   967   00130E  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   968   001310  EC20  F00A         	call	_lcd_8bit_send_command	;wreg free
   969   001314  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
   970   001318  0E38               	movlw	56
   971   00131A  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   972   00131C  EC20  F00A         	call	_lcd_8bit_send_command	;wreg free
   973   001320                     
   974                           ;ECU_Layer/LCD/ecu_lcd.c: 217:         ret = lcd_8bit_send_command(_lcd_, 0x80);
   975   001320  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
   976   001324  0E80               	movlw	128
   977   001326  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   978   001328  EC20  F00A         	call	_lcd_8bit_send_command	;wreg free
   979   00132C  6E42               	movwf	lcd_8bit_initialize@ret^0,c
   980   00132E                     l1957:
   981                           
   982                           ;ECU_Layer/LCD/ecu_lcd.c: 221:     return ret;
   983   00132E  5042               	movf	lcd_8bit_initialize@ret^0,w,c
   984   001330  0012               	return		;funcret
   985   001332                     __end_of_lcd_8bit_initialize:
   986                           	callstack 0
   987                           
   988 ;; *************** function _lcd_8bit_send_command *****************
   989 ;; Defined at:
   990 ;;		line 232 in file "ECU_Layer/LCD/ecu_lcd.c"
   991 ;; Parameters:    Size  Location     Type
   992 ;;  _lcd_           1   10[COMRAM] PTR const struct .
   993 ;;		 -> lcd_2(10), 
   994 ;;  command         1   11[COMRAM] unsigned char 
   995 ;; Auto vars:     Size  Location     Type
   996 ;;  l_pin_counte    1   15[COMRAM] unsigned char 
   997 ;;  ret             1   14[COMRAM] unsigned char 
   998 ;; Return value:  Size  Location     Type
   999 ;;                  1    wreg      unsigned char 
  1000 ;; Registers used:
  1001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1002 ;; Tracked objects:
  1003 ;;		On entry : 0/0
  1004 ;;		On exit  : 0/0
  1005 ;;		Unchanged: 0/0
  1006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1007 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1008 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1009 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1010 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1011 ;;Total ram usage:        6 bytes
  1012 ;; Hardware stack levels used: 1
  1013 ;; Hardware stack levels required when called: 2
  1014 ;; This function calls:
  1015 ;;		_gpio_pin_write_logic
  1016 ;;		_lcd_8bit_send_enable_signal
  1017 ;; This function is called by:
  1018 ;;		_lcd_8bit_initialize
  1019 ;;		_lcd_8bit_set_cursor
  1020 ;; This function uses a non-reentrant model
  1021 ;;
  1022                           
  1023                           	psect	text6
  1024   001440                     __ptext6:
  1025                           	callstack 0
  1026   001440                     _lcd_8bit_send_command:
  1027                           	callstack 26
  1028   001440                     
  1029                           ;ECU_Layer/LCD/ecu_lcd.c: 234:     uint8 l_pin_counter = 0;
  1030   001440  0E00               	movlw	0
  1031   001442  6E3E               	movwf	lcd_8bit_send_command@l_pin_counter^0,c
  1032                           
  1033                           ;ECU_Layer/LCD/ecu_lcd.c: 235:     if(((void*)0) == _lcd_){
  1034   001444  5039               	movf	lcd_8bit_send_command@_lcd_^0,w,c
  1035   001446  A4D8               	btfss	status,2,c
  1036   001448  EF28  F00A         	goto	u1001
  1037   00144C  EF2A  F00A         	goto	u1000
  1038   001450                     u1001:
  1039   001450  EF2E  F00A         	goto	l1875
  1040   001454                     u1000:
  1041   001454                     
  1042                           ;ECU_Layer/LCD/ecu_lcd.c: 236:         ret = (Std_ReturnType)0x00;
  1043   001454  0E00               	movlw	0
  1044   001456  6E3D               	movwf	lcd_8bit_send_command@ret^0,c
  1045                           
  1046                           ;ECU_Layer/LCD/ecu_lcd.c: 237:     }
  1047   001458  EF59  F00A         	goto	l1891
  1048   00145C                     l1875:
  1049   00145C  C039  F02F         	movff	lcd_8bit_send_command@_lcd_,gpio_pin_write_logic@_pin_config
  1050   001460  0E00               	movlw	0
  1051   001462  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1052   001464  EC9C  F008         	call	_gpio_pin_write_logic	;wreg free
  1053   001468                     
  1054                           ;ECU_Layer/LCD/ecu_lcd.c: 240:         for(l_pin_counter = 0 ; l_pin_counter < 8 ; l_pin
      +                          _counter++){
  1055   001468  0E00               	movlw	0
  1056   00146A  6E3E               	movwf	lcd_8bit_send_command@l_pin_counter^0,c
  1057   00146C                     l1883:
  1058   00146C  5039               	movf	lcd_8bit_send_command@_lcd_^0,w,c
  1059   00146E  243E               	addwf	lcd_8bit_send_command@l_pin_counter^0,w,c
  1060   001470  0F02               	addlw	2
  1061   001472  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1062   001474  C03E  F03B         	movff	lcd_8bit_send_command@l_pin_counter,??_lcd_8bit_send_command
  1063   001478  C03A  F03C         	movff	lcd_8bit_send_command@command,??_lcd_8bit_send_command+1
  1064   00147C  2A3B               	incf	??_lcd_8bit_send_command^0,f,c
  1065   00147E  EF43  F00A         	goto	u1014
  1066   001482                     u1015:
  1067   001482  90D8               	bcf	status,0,c
  1068   001484  323C               	rrcf	(??_lcd_8bit_send_command+1)^0,f,c
  1069   001486                     u1014:
  1070   001486  2E3B               	decfsz	??_lcd_8bit_send_command^0,f,c
  1071   001488  EF41  F00A         	goto	u1015
  1072   00148C  503C               	movf	(??_lcd_8bit_send_command+1)^0,w,c
  1073   00148E  0B01               	andlw	1
  1074   001490  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1075   001492  EC9C  F008         	call	_gpio_pin_write_logic	;wreg free
  1076   001496                     
  1077                           ;ECU_Layer/LCD/ecu_lcd.c: 242:         }
  1078   001496  2A3E               	incf	lcd_8bit_send_command@l_pin_counter^0,f,c
  1079   001498  0E07               	movlw	7
  1080   00149A  643E               	cpfsgt	lcd_8bit_send_command@l_pin_counter^0,c
  1081   00149C  EF52  F00A         	goto	u1021
  1082   0014A0  EF54  F00A         	goto	u1020
  1083   0014A4                     u1021:
  1084   0014A4  EF36  F00A         	goto	l1883
  1085   0014A8                     u1020:
  1086   0014A8                     
  1087                           ;ECU_Layer/LCD/ecu_lcd.c: 243:         ret = lcd_8bit_send_enable_signal(_lcd_);
  1088   0014A8  C039  F037         	movff	lcd_8bit_send_command@_lcd_,lcd_8bit_send_enable_signal@_lcd_
  1089   0014AC  EC06  F00B         	call	_lcd_8bit_send_enable_signal	;wreg free
  1090   0014B0  6E3D               	movwf	lcd_8bit_send_command@ret^0,c
  1091   0014B2                     l1891:
  1092                           
  1093                           ;ECU_Layer/LCD/ecu_lcd.c: 247:     return ret;
  1094   0014B2  503D               	movf	lcd_8bit_send_command@ret^0,w,c
  1095   0014B4  0012               	return		;funcret
  1096   0014B6                     __end_of_lcd_8bit_send_command:
  1097                           	callstack 0
  1098                           
  1099 ;; *************** function _lcd_8bit_send_enable_signal *****************
  1100 ;; Defined at:
  1101 ;;		line 401 in file "ECU_Layer/LCD/ecu_lcd.c"
  1102 ;; Parameters:    Size  Location     Type
  1103 ;;  _lcd_           1    8[COMRAM] PTR const struct .
  1104 ;;		 -> lcd_2(10), 
  1105 ;; Auto vars:     Size  Location     Type
  1106 ;;  ret             1    9[COMRAM] unsigned char 
  1107 ;; Return value:  Size  Location     Type
  1108 ;;                  1    wreg      unsigned char 
  1109 ;; Registers used:
  1110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1111 ;; Tracked objects:
  1112 ;;		On entry : 0/0
  1113 ;;		On exit  : 0/0
  1114 ;;		Unchanged: 0/0
  1115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1116 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1117 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1119 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1120 ;;Total ram usage:        2 bytes
  1121 ;; Hardware stack levels used: 1
  1122 ;; Hardware stack levels required when called: 1
  1123 ;; This function calls:
  1124 ;;		_gpio_pin_write_logic
  1125 ;; This function is called by:
  1126 ;;		_lcd_8bit_send_command
  1127 ;;		_lcd_8bit_send_char_data
  1128 ;; This function uses a non-reentrant model
  1129 ;;
  1130                           
  1131                           	psect	text7
  1132   00160C                     __ptext7:
  1133                           	callstack 0
  1134   00160C                     _lcd_8bit_send_enable_signal:
  1135                           	callstack 26
  1136   00160C  2837               	incf	lcd_8bit_send_enable_signal@_lcd_^0,w,c
  1137   00160E  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1138   001610  0E01               	movlw	1
  1139   001612  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1140   001614  EC9C  F008         	call	_gpio_pin_write_logic	;wreg free
  1141   001618                     
  1142                           ;ECU_Layer/LCD/ecu_lcd.c: 404:     _delay((unsigned long)((5)*(4000000UL/4000000.0)));
  1143   001618  D000               	nop2		;2 cycle nop
  1144   00161A  D000               	nop2		;2 cycle nop
  1145   00161C  0000               	nop	
  1146   00161E                     
  1147                           ;ECU_Layer/LCD/ecu_lcd.c: 405:     ret = gpio_pin_write_logic(&(_lcd_->lcd_en), GPIO_LOW
      +                          );
  1148   00161E  2837               	incf	lcd_8bit_send_enable_signal@_lcd_^0,w,c
  1149   001620  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1150   001622  0E00               	movlw	0
  1151   001624  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1152   001626  EC9C  F008         	call	_gpio_pin_write_logic	;wreg free
  1153   00162A  6E38               	movwf	lcd_8bit_send_enable_signal@ret^0,c
  1154                           
  1155                           ;ECU_Layer/LCD/ecu_lcd.c: 406:     return ret;
  1156   00162C  5038               	movf	lcd_8bit_send_enable_signal@ret^0,w,c
  1157   00162E  0012               	return		;funcret
  1158   001630                     __end_of_lcd_8bit_send_enable_signal:
  1159                           	callstack 0
  1160                           
  1161 ;; *************** function _lcd_4bit_initialize *****************
  1162 ;; Defined at:
  1163 ;;		line 25 in file "ECU_Layer/LCD/ecu_lcd.c"
  1164 ;; Parameters:    Size  Location     Type
  1165 ;;  _lcd_           1   11[COMRAM] PTR const struct .
  1166 ;;		 -> lcd_1(6), 
  1167 ;; Auto vars:     Size  Location     Type
  1168 ;;  l_data_pins_    1   13[COMRAM] unsigned char 
  1169 ;;  ret             1   12[COMRAM] unsigned char 
  1170 ;; Return value:  Size  Location     Type
  1171 ;;                  1    wreg      unsigned char 
  1172 ;; Registers used:
  1173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1174 ;; Tracked objects:
  1175 ;;		On entry : 0/0
  1176 ;;		On exit  : 0/0
  1177 ;;		Unchanged: 0/0
  1178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1179 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1180 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1182 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1183 ;;Total ram usage:        3 bytes
  1184 ;; Hardware stack levels used: 1
  1185 ;; Hardware stack levels required when called: 2
  1186 ;; This function calls:
  1187 ;;		_gpio_pin_intialize
  1188 ;; This function is called by:
  1189 ;;		_application_intialize
  1190 ;; This function uses a non-reentrant model
  1191 ;;
  1192                           
  1193                           	psect	text8
  1194   001514                     __ptext8:
  1195                           	callstack 0
  1196   001514                     _lcd_4bit_initialize:
  1197                           	callstack 27
  1198   001514                     
  1199                           ;ECU_Layer/LCD/ecu_lcd.c: 27:     uint8 l_data_pins_counter = 0;
  1200   001514  0E00               	movlw	0
  1201   001516  6E3C               	movwf	lcd_4bit_initialize@l_data_pins_counter^0,c
  1202                           
  1203                           ;ECU_Layer/LCD/ecu_lcd.c: 28:     if(((void*)0) == _lcd_){
  1204   001518  503A               	movf	lcd_4bit_initialize@_lcd_^0,w,c
  1205   00151A  A4D8               	btfss	status,2,c
  1206   00151C  EF92  F00A         	goto	u1031
  1207   001520  EF94  F00A         	goto	u1030
  1208   001524                     u1031:
  1209   001524  EF98  F00A         	goto	l1899
  1210   001528                     u1030:
  1211   001528                     
  1212                           ;ECU_Layer/LCD/ecu_lcd.c: 29:         ret = (Std_ReturnType)0x00;
  1213   001528  0E00               	movlw	0
  1214   00152A  6E3B               	movwf	lcd_4bit_initialize@ret^0,c
  1215                           
  1216                           ;ECU_Layer/LCD/ecu_lcd.c: 30:     }
  1217   00152C  EFB4  F00A         	goto	l1913
  1218   001530                     l1899:
  1219                           
  1220                           ;ECU_Layer/LCD/ecu_lcd.c: 32:         ret = gpio_pin_intialize(&(_lcd_->lcd_rs));
  1221   001530  C03A  F037         	movff	lcd_4bit_initialize@_lcd_,gpio_pin_intialize@_pin_config
  1222   001534  EC5B  F00A         	call	_gpio_pin_intialize	;wreg free
  1223   001538  6E3B               	movwf	lcd_4bit_initialize@ret^0,c
  1224                           
  1225                           ;ECU_Layer/LCD/ecu_lcd.c: 33:         ret = gpio_pin_intialize(&(_lcd_->lcd_en));
  1226   00153A  283A               	incf	lcd_4bit_initialize@_lcd_^0,w,c
  1227   00153C  6E37               	movwf	gpio_pin_intialize@_pin_config^0,c
  1228   00153E  EC5B  F00A         	call	_gpio_pin_intialize	;wreg free
  1229   001542  6E3B               	movwf	lcd_4bit_initialize@ret^0,c
  1230   001544                     
  1231                           ;ECU_Layer/LCD/ecu_lcd.c: 34:         for(l_data_pins_counter = 0 ; l_data_pins_counter<
      +                          4 ; l_data_pins_counter++){
  1232   001544  0E00               	movlw	0
  1233   001546  6E3C               	movwf	lcd_4bit_initialize@l_data_pins_counter^0,c
  1234   001548                     l1907:
  1235                           
  1236                           ;ECU_Layer/LCD/ecu_lcd.c: 35:             ret = gpio_pin_intialize(&(_lcd_->lcd_data[l_d
      +                          ata_pins_counter]));
  1237   001548  503A               	movf	lcd_4bit_initialize@_lcd_^0,w,c
  1238   00154A  243C               	addwf	lcd_4bit_initialize@l_data_pins_counter^0,w,c
  1239   00154C  0F02               	addlw	2
  1240   00154E  6E37               	movwf	gpio_pin_intialize@_pin_config^0,c
  1241   001550  EC5B  F00A         	call	_gpio_pin_intialize	;wreg free
  1242   001554  6E3B               	movwf	lcd_4bit_initialize@ret^0,c
  1243   001556                     
  1244                           ;ECU_Layer/LCD/ecu_lcd.c: 36:         }
  1245   001556  2A3C               	incf	lcd_4bit_initialize@l_data_pins_counter^0,f,c
  1246   001558  0E03               	movlw	3
  1247   00155A  643C               	cpfsgt	lcd_4bit_initialize@l_data_pins_counter^0,c
  1248   00155C  EFB2  F00A         	goto	u1041
  1249   001560  EFB4  F00A         	goto	u1040
  1250   001564                     u1041:
  1251   001564  EFA4  F00A         	goto	l1907
  1252   001568                     u1040:
  1253   001568                     l1913:
  1254                           
  1255                           ;ECU_Layer/LCD/ecu_lcd.c: 40:     return ret;
  1256   001568  503B               	movf	lcd_4bit_initialize@ret^0,w,c
  1257   00156A  0012               	return		;funcret
  1258   00156C                     __end_of_lcd_4bit_initialize:
  1259                           	callstack 0
  1260                           
  1261 ;; *************** function _gpio_pin_intialize *****************
  1262 ;; Defined at:
  1263 ;;		line 54 in file "MCAL_Layer/GPIO/hel_gpio.c"
  1264 ;; Parameters:    Size  Location     Type
  1265 ;;  _pin_config     1    8[COMRAM] PTR const struct .
  1266 ;;		 -> lcd_2$lcd_data(8), lcd_2(10), lcd_1$lcd_data(4), lcd_1(6), 
  1267 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  1268 ;; Auto vars:     Size  Location     Type
  1269 ;;  ret             1   10[COMRAM] unsigned char 
  1270 ;; Return value:  Size  Location     Type
  1271 ;;                  1    wreg      unsigned char 
  1272 ;; Registers used:
  1273 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1274 ;; Tracked objects:
  1275 ;;		On entry : 0/0
  1276 ;;		On exit  : 0/0
  1277 ;;		Unchanged: 0/0
  1278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1279 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1280 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1281 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1282 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1283 ;;Total ram usage:        3 bytes
  1284 ;; Hardware stack levels used: 1
  1285 ;; Hardware stack levels required when called: 1
  1286 ;; This function calls:
  1287 ;;		_gpio_pin_direction_intialize
  1288 ;;		_gpio_pin_write_logic
  1289 ;; This function is called by:
  1290 ;;		_lcd_4bit_initialize
  1291 ;;		_lcd_8bit_initialize
  1292 ;;		_seven_segment_intialize
  1293 ;;		_dc_motor_initialize
  1294 ;;		_keypad_initialize
  1295 ;;		_led_initialize
  1296 ;;		_relay_initialize
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300                           	psect	text9
  1301   0014B6                     __ptext9:
  1302                           	callstack 0
  1303   0014B6                     _gpio_pin_intialize:
  1304                           	callstack 27
  1305   0014B6                     
  1306                           ;MCAL_Layer/GPIO/hel_gpio.c: 56:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1){
  1307   0014B6  5037               	movf	gpio_pin_intialize@_pin_config^0,w,c
  1308   0014B8  B4D8               	btfsc	status,2,c
  1309   0014BA  EF61  F00A         	goto	u981
  1310   0014BE  EF63  F00A         	goto	u980
  1311   0014C2                     u981:
  1312   0014C2  EF73  F00A         	goto	l1863
  1313   0014C6                     u980:
  1314   0014C6  5037               	movf	gpio_pin_intialize@_pin_config^0,w,c
  1315   0014C8  6ED9               	movwf	fsr2l,c
  1316   0014CA  6ADA               	clrf	fsr2h,c
  1317   0014CC  30DF               	rrcf	223,w,c
  1318   0014CE  32E8               	rrcf	wreg,f,c
  1319   0014D0  32E8               	rrcf	wreg,f,c
  1320   0014D2  0B07               	andlw	7
  1321   0014D4  6E38               	movwf	??_gpio_pin_intialize^0,c
  1322   0014D6  0E07               	movlw	7
  1323   0014D8  6438               	cpfsgt	??_gpio_pin_intialize^0,c
  1324   0014DA  EF71  F00A         	goto	u991
  1325   0014DE  EF73  F00A         	goto	u990
  1326   0014E2                     u991:
  1327   0014E2  EF77  F00A         	goto	l1865
  1328   0014E6                     u990:
  1329   0014E6                     l1863:
  1330                           
  1331                           ;MCAL_Layer/GPIO/hel_gpio.c: 57:         ret = (Std_ReturnType)0x00;
  1332   0014E6  0E00               	movlw	0
  1333   0014E8  6E39               	movwf	gpio_pin_intialize@ret^0,c
  1334                           
  1335                           ;MCAL_Layer/GPIO/hel_gpio.c: 58:     }
  1336   0014EA  EF88  F00A         	goto	l1867
  1337   0014EE                     l1865:
  1338                           
  1339                           ;MCAL_Layer/GPIO/hel_gpio.c: 60:         ret = gpio_pin_direction_intialize(_pin_config)
      +                          ;
  1340   0014EE  C037  F02F         	movff	gpio_pin_intialize@_pin_config,gpio_pin_direction_intialize@_pin_config
  1341   0014F2  EC09  F008         	call	_gpio_pin_direction_intialize	;wreg free
  1342   0014F6  6E39               	movwf	gpio_pin_intialize@ret^0,c
  1343                           
  1344                           ;MCAL_Layer/GPIO/hel_gpio.c: 61:         ret = gpio_pin_write_logic(_pin_config, _pin_co
      +                          nfig->logic);
  1345   0014F8  C037  F02F         	movff	gpio_pin_intialize@_pin_config,gpio_pin_write_logic@_pin_config
  1346   0014FC  5037               	movf	gpio_pin_intialize@_pin_config^0,w,c
  1347   0014FE  6ED9               	movwf	fsr2l,c
  1348   001500  6ADA               	clrf	fsr2h,c
  1349   001502  0E00               	movlw	0
  1350   001504  BEDF               	btfsc	indf2,7,c
  1351   001506  0E01               	movlw	1
  1352   001508  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1353   00150A  EC9C  F008         	call	_gpio_pin_write_logic	;wreg free
  1354   00150E  6E39               	movwf	gpio_pin_intialize@ret^0,c
  1355   001510                     l1867:
  1356                           
  1357                           ;MCAL_Layer/GPIO/hel_gpio.c: 63:     return ret;
  1358   001510  5039               	movf	gpio_pin_intialize@ret^0,w,c
  1359   001512  0012               	return		;funcret
  1360   001514                     __end_of_gpio_pin_intialize:
  1361                           	callstack 0
  1362                           
  1363 ;; *************** function _gpio_pin_write_logic *****************
  1364 ;; Defined at:
  1365 ;;		line 97 in file "MCAL_Layer/GPIO/hel_gpio.c"
  1366 ;; Parameters:    Size  Location     Type
  1367 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  1368 ;;		 -> lcd_2$lcd_data(8), lcd_2(10), lcd_1$lcd_data(4), lcd_1(6), 
  1369 ;;		 -> relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), relay_initialize@pin_obj(1), led_turn_off@pin_obj(1), 
  1370 ;;		 -> led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
  1371 ;;  logic           1    1[COMRAM] enum E2811
  1372 ;; Auto vars:     Size  Location     Type
  1373 ;;  ret             1    7[COMRAM] unsigned char 
  1374 ;; Return value:  Size  Location     Type
  1375 ;;                  1    wreg      unsigned char 
  1376 ;; Registers used:
  1377 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1378 ;; Tracked objects:
  1379 ;;		On entry : 0/0
  1380 ;;		On exit  : 0/0
  1381 ;;		Unchanged: 0/0
  1382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1383 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1384 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1385 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1386 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1387 ;;Total ram usage:        8 bytes
  1388 ;; Hardware stack levels used: 1
  1389 ;; This function calls:
  1390 ;;		Nothing
  1391 ;; This function is called by:
  1392 ;;		_gpio_pin_intialize
  1393 ;;		_lcd_8bit_send_command
  1394 ;;		_lcd_8bit_send_char_data
  1395 ;;		_lcd_8bit_send_enable_signal
  1396 ;;		_seven_segment_write_number
  1397 ;;		_dc_motor_move_right
  1398 ;;		_dc_motor_move_left
  1399 ;;		_dc_motor_stop
  1400 ;;		_keypad_get_value
  1401 ;;		_led_turn_on
  1402 ;;		_led_turn_off
  1403 ;;		_relay_turn_on
  1404 ;;		_relay_turn_off
  1405 ;;		_lcd_4bit_send_command
  1406 ;;		_lcd_4bit_send_char_data
  1407 ;;		_lcd_send_4bits
  1408 ;;		_lcd_4bit_send_enable_signal
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412                           	psect	text10
  1413   001138                     __ptext10:
  1414                           	callstack 0
  1415   001138                     _gpio_pin_write_logic:
  1416                           	callstack 26
  1417   001138                     
  1418                           ;MCAL_Layer/GPIO/hel_gpio.c: 98:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1419   001138  0E01               	movlw	1
  1420   00113A  6E36               	movwf	gpio_pin_write_logic@ret^0,c
  1421                           
  1422                           ;MCAL_Layer/GPIO/hel_gpio.c: 99:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1){
  1423   00113C  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1424   00113E  B4D8               	btfsc	status,2,c
  1425   001140  EFA4  F008         	goto	u881
  1426   001144  EFA6  F008         	goto	u880
  1427   001148                     u881:
  1428   001148  EFB6  F008         	goto	l1809
  1429   00114C                     u880:
  1430   00114C  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1431   00114E  6ED9               	movwf	fsr2l,c
  1432   001150  6ADA               	clrf	fsr2h,c
  1433   001152  30DF               	rrcf	223,w,c
  1434   001154  32E8               	rrcf	wreg,f,c
  1435   001156  32E8               	rrcf	wreg,f,c
  1436   001158  0B07               	andlw	7
  1437   00115A  6E31               	movwf	??_gpio_pin_write_logic^0,c
  1438   00115C  0E07               	movlw	7
  1439   00115E  6431               	cpfsgt	??_gpio_pin_write_logic^0,c
  1440   001160  EFB4  F008         	goto	u891
  1441   001164  EFB6  F008         	goto	u890
  1442   001168                     u891:
  1443   001168  EF0D  F009         	goto	l1817
  1444   00116C                     u890:
  1445   00116C                     l1809:
  1446                           
  1447                           ;MCAL_Layer/GPIO/hel_gpio.c: 100:         ret = (Std_ReturnType)0x00;
  1448   00116C  0E00               	movlw	0
  1449   00116E  6E36               	movwf	gpio_pin_write_logic@ret^0,c
  1450                           
  1451                           ;MCAL_Layer/GPIO/hel_gpio.c: 101:     }
  1452   001170  EF22  F009         	goto	l1819
  1453   001174                     l1811:
  1454                           
  1455                           ;MCAL_Layer/GPIO/hel_gpio.c: 105:                 (*lat_registers[_pin_config->port] &= 
      +                          ~((uint8) 1 << _pin_config->pin));
  1456   001174  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1457   001176  6ED9               	movwf	fsr2l,c
  1458   001178  6ADA               	clrf	fsr2h,c
  1459   00117A  30DF               	rrcf	223,w,c
  1460   00117C  32E8               	rrcf	wreg,f,c
  1461   00117E  32E8               	rrcf	wreg,f,c
  1462   001180  0B07               	andlw	7
  1463   001182  6E31               	movwf	??_gpio_pin_write_logic^0,c
  1464   001184  0E01               	movlw	1
  1465   001186  6E32               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1466   001188  2A31               	incf	??_gpio_pin_write_logic^0,f,c
  1467   00118A  EFC9  F008         	goto	u904
  1468   00118E                     u905:
  1469   00118E  90D8               	bcf	status,0,c
  1470   001190  3632               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1471   001192                     u904:
  1472   001192  2E31               	decfsz	??_gpio_pin_write_logic^0,f,c
  1473   001194  EFC7  F008         	goto	u905
  1474   001198  5032               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1475   00119A  0AFF               	xorlw	255
  1476   00119C  6E33               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1477   00119E  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1478   0011A0  6ED9               	movwf	fsr2l,c
  1479   0011A2  6ADA               	clrf	fsr2h,c
  1480   0011A4  50DF               	movf	223,w,c
  1481   0011A6  0B07               	andlw	7
  1482   0011A8  0D02               	mullw	2
  1483   0011AA  50F3               	movf	243,w,c
  1484   0011AC  0F0B               	addlw	low _lat_registers
  1485   0011AE  6ED9               	movwf	fsr2l,c
  1486   0011B0  6ADA               	clrf	fsr2h,c
  1487   0011B2  CFDE F034          	movff	postinc2,??_gpio_pin_write_logic+3
  1488   0011B6  CFDD F035          	movff	postdec2,??_gpio_pin_write_logic+4
  1489   0011BA  C034  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1490   0011BE  C035  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1491   0011C2  5033               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1492   0011C4  16DF               	andwf	indf2,f,c
  1493                           
  1494                           ;MCAL_Layer/GPIO/hel_gpio.c: 106:                 break;
  1495   0011C6  EF22  F009         	goto	l1819
  1496   0011CA                     l1813:
  1497                           
  1498                           ;MCAL_Layer/GPIO/hel_gpio.c: 108:                 (*lat_registers[_pin_config->port] |= 
      +                          ((uint8) 1 << _pin_config->pin));
  1499   0011CA  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1500   0011CC  6ED9               	movwf	fsr2l,c
  1501   0011CE  6ADA               	clrf	fsr2h,c
  1502   0011D0  30DF               	rrcf	223,w,c
  1503   0011D2  32E8               	rrcf	wreg,f,c
  1504   0011D4  32E8               	rrcf	wreg,f,c
  1505   0011D6  0B07               	andlw	7
  1506   0011D8  6E31               	movwf	??_gpio_pin_write_logic^0,c
  1507   0011DA  0E01               	movlw	1
  1508   0011DC  6E32               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1509   0011DE  2A31               	incf	??_gpio_pin_write_logic^0,f,c
  1510   0011E0  EFF4  F008         	goto	u914
  1511   0011E4                     u915:
  1512   0011E4  90D8               	bcf	status,0,c
  1513   0011E6  3632               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1514   0011E8                     u914:
  1515   0011E8  2E31               	decfsz	??_gpio_pin_write_logic^0,f,c
  1516   0011EA  EFF2  F008         	goto	u915
  1517   0011EE  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1518   0011F0  6ED9               	movwf	fsr2l,c
  1519   0011F2  6ADA               	clrf	fsr2h,c
  1520   0011F4  50DF               	movf	223,w,c
  1521   0011F6  0B07               	andlw	7
  1522   0011F8  0D02               	mullw	2
  1523   0011FA  50F3               	movf	243,w,c
  1524   0011FC  0F0B               	addlw	low _lat_registers
  1525   0011FE  6ED9               	movwf	fsr2l,c
  1526   001200  6ADA               	clrf	fsr2h,c
  1527   001202  CFDE F033          	movff	postinc2,??_gpio_pin_write_logic+2
  1528   001206  CFDD F034          	movff	postdec2,??_gpio_pin_write_logic+3
  1529   00120A  C033  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  1530   00120E  C034  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  1531   001212  5032               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1532   001214  12DF               	iorwf	indf2,f,c
  1533                           
  1534                           ;MCAL_Layer/GPIO/hel_gpio.c: 109:                 break;
  1535   001216  EF22  F009         	goto	l1819
  1536   00121A                     l1817:
  1537   00121A  5030               	movf	gpio_pin_write_logic@logic^0,w,c
  1538   00121C  6E31               	movwf	??_gpio_pin_write_logic^0,c
  1539   00121E  6A32               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1540                           
  1541                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1542                           ; Switch size 1, requested type "simple"
  1543                           ; Number of cases is 1, Range of values is 0 to 0
  1544                           ; switch strategies available:
  1545                           ; Name         Instructions Cycles
  1546                           ; simple_byte            4     3 (average)
  1547                           ;	Chosen strategy is simple_byte
  1548   001220  5032               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1549   001222  0A00               	xorlw	0	; case 0
  1550   001224  B4D8               	btfsc	status,2,c
  1551   001226  EF17  F009         	goto	l2333
  1552   00122A  EFB6  F008         	goto	l1809
  1553   00122E                     l2333:
  1554                           
  1555                           ; Switch size 1, requested type "simple"
  1556                           ; Number of cases is 2, Range of values is 0 to 1
  1557                           ; switch strategies available:
  1558                           ; Name         Instructions Cycles
  1559                           ; simple_byte            7     4 (average)
  1560                           ;	Chosen strategy is simple_byte
  1561   00122E  5031               	movf	??_gpio_pin_write_logic^0,w,c
  1562   001230  0A00               	xorlw	0	; case 0
  1563   001232  B4D8               	btfsc	status,2,c
  1564   001234  EFBA  F008         	goto	l1811
  1565   001238  0A01               	xorlw	1	; case 1
  1566   00123A  B4D8               	btfsc	status,2,c
  1567   00123C  EFE5  F008         	goto	l1813
  1568   001240  EFB6  F008         	goto	l1809
  1569   001244                     l1819:
  1570                           
  1571                           ;MCAL_Layer/GPIO/hel_gpio.c: 113:     return ret;
  1572   001244  5036               	movf	gpio_pin_write_logic@ret^0,w,c
  1573   001246  0012               	return		;funcret
  1574   001248                     __end_of_gpio_pin_write_logic:
  1575                           	callstack 0
  1576                           
  1577 ;; *************** function _gpio_pin_direction_intialize *****************
  1578 ;; Defined at:
  1579 ;;		line 26 in file "MCAL_Layer/GPIO/hel_gpio.c"
  1580 ;; Parameters:    Size  Location     Type
  1581 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  1582 ;;		 -> lcd_2$lcd_data(8), lcd_2(10), lcd_1$lcd_data(4), lcd_1(6), 
  1583 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  1584 ;; Auto vars:     Size  Location     Type
  1585 ;;  ret             1    6[COMRAM] unsigned char 
  1586 ;; Return value:  Size  Location     Type
  1587 ;;                  1    wreg      unsigned char 
  1588 ;; Registers used:
  1589 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1590 ;; Tracked objects:
  1591 ;;		On entry : 0/0
  1592 ;;		On exit  : 0/0
  1593 ;;		Unchanged: 0/0
  1594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1595 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1596 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1597 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1598 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1599 ;;Total ram usage:        7 bytes
  1600 ;; Hardware stack levels used: 1
  1601 ;; This function calls:
  1602 ;;		Nothing
  1603 ;; This function is called by:
  1604 ;;		_gpio_pin_intialize
  1605 ;;		_keypad_initialize
  1606 ;;		_push_button_initialize
  1607 ;; This function uses a non-reentrant model
  1608 ;;
  1609                           
  1610                           	psect	text11
  1611   001012                     __ptext11:
  1612                           	callstack 0
  1613   001012                     _gpio_pin_direction_intialize:
  1614                           	callstack 27
  1615   001012                     
  1616                           ;MCAL_Layer/GPIO/hel_gpio.c: 27:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1617   001012  0E01               	movlw	1
  1618   001014  6E35               	movwf	gpio_pin_direction_intialize@ret^0,c
  1619                           
  1620                           ;MCAL_Layer/GPIO/hel_gpio.c: 28:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1){
  1621   001016  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1622   001018  B4D8               	btfsc	status,2,c
  1623   00101A  EF11  F008         	goto	u921
  1624   00101E  EF13  F008         	goto	u920
  1625   001022                     u921:
  1626   001022  EF23  F008         	goto	l1831
  1627   001026                     u920:
  1628   001026  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1629   001028  6ED9               	movwf	fsr2l,c
  1630   00102A  6ADA               	clrf	fsr2h,c
  1631   00102C  30DF               	rrcf	223,w,c
  1632   00102E  32E8               	rrcf	wreg,f,c
  1633   001030  32E8               	rrcf	wreg,f,c
  1634   001032  0B07               	andlw	7
  1635   001034  6E30               	movwf	??_gpio_pin_direction_intialize^0,c
  1636   001036  0E07               	movlw	7
  1637   001038  6430               	cpfsgt	??_gpio_pin_direction_intialize^0,c
  1638   00103A  EF21  F008         	goto	u931
  1639   00103E  EF23  F008         	goto	u930
  1640   001042                     u931:
  1641   001042  EF7A  F008         	goto	l1839
  1642   001046                     u930:
  1643   001046                     l1831:
  1644                           
  1645                           ;MCAL_Layer/GPIO/hel_gpio.c: 29:         ret = (Std_ReturnType)0x00;
  1646   001046  0E00               	movlw	0
  1647   001048  6E35               	movwf	gpio_pin_direction_intialize@ret^0,c
  1648                           
  1649                           ;MCAL_Layer/GPIO/hel_gpio.c: 30:     }
  1650   00104A  EF9A  F008         	goto	l1841
  1651   00104E                     l1833:
  1652                           
  1653                           ;MCAL_Layer/GPIO/hel_gpio.c: 34:                 (*tris_registers[_pin_config->port] &= 
      +                          ~((uint8) 1 << _pin_config->pin));
  1654   00104E  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1655   001050  6ED9               	movwf	fsr2l,c
  1656   001052  6ADA               	clrf	fsr2h,c
  1657   001054  30DF               	rrcf	223,w,c
  1658   001056  32E8               	rrcf	wreg,f,c
  1659   001058  32E8               	rrcf	wreg,f,c
  1660   00105A  0B07               	andlw	7
  1661   00105C  6E30               	movwf	??_gpio_pin_direction_intialize^0,c
  1662   00105E  0E01               	movlw	1
  1663   001060  6E31               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  1664   001062  2A30               	incf	??_gpio_pin_direction_intialize^0,f,c
  1665   001064  EF36  F008         	goto	u944
  1666   001068                     u945:
  1667   001068  90D8               	bcf	status,0,c
  1668   00106A  3631               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  1669   00106C                     u944:
  1670   00106C  2E30               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  1671   00106E  EF34  F008         	goto	u945
  1672   001072  5031               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1673   001074  0AFF               	xorlw	255
  1674   001076  6E32               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  1675   001078  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1676   00107A  6ED9               	movwf	fsr2l,c
  1677   00107C  6ADA               	clrf	fsr2h,c
  1678   00107E  50DF               	movf	223,w,c
  1679   001080  0B07               	andlw	7
  1680   001082  0D02               	mullw	2
  1681   001084  50F3               	movf	243,w,c
  1682   001086  0F15               	addlw	low _tris_registers
  1683   001088  6ED9               	movwf	fsr2l,c
  1684   00108A  6ADA               	clrf	fsr2h,c
  1685   00108C  CFDE F033          	movff	postinc2,??_gpio_pin_direction_intialize+3
  1686   001090  CFDD F034          	movff	postdec2,??_gpio_pin_direction_intialize+4
  1687   001094  C033  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  1688   001098  C034  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  1689   00109C  5032               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  1690   00109E  16DF               	andwf	indf2,f,c
  1691                           
  1692                           ;MCAL_Layer/GPIO/hel_gpio.c: 35:                 break;
  1693   0010A0  EF9A  F008         	goto	l1841
  1694   0010A4                     l1835:
  1695                           
  1696                           ;MCAL_Layer/GPIO/hel_gpio.c: 37:                 (*tris_registers[_pin_config->port] |= 
      +                          ((uint8) 1 << _pin_config->pin));
  1697   0010A4  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1698   0010A6  6ED9               	movwf	fsr2l,c
  1699   0010A8  6ADA               	clrf	fsr2h,c
  1700   0010AA  30DF               	rrcf	223,w,c
  1701   0010AC  32E8               	rrcf	wreg,f,c
  1702   0010AE  32E8               	rrcf	wreg,f,c
  1703   0010B0  0B07               	andlw	7
  1704   0010B2  6E30               	movwf	??_gpio_pin_direction_intialize^0,c
  1705   0010B4  0E01               	movlw	1
  1706   0010B6  6E31               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  1707   0010B8  2A30               	incf	??_gpio_pin_direction_intialize^0,f,c
  1708   0010BA  EF61  F008         	goto	u954
  1709   0010BE                     u955:
  1710   0010BE  90D8               	bcf	status,0,c
  1711   0010C0  3631               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  1712   0010C2                     u954:
  1713   0010C2  2E30               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  1714   0010C4  EF5F  F008         	goto	u955
  1715   0010C8  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1716   0010CA  6ED9               	movwf	fsr2l,c
  1717   0010CC  6ADA               	clrf	fsr2h,c
  1718   0010CE  50DF               	movf	223,w,c
  1719   0010D0  0B07               	andlw	7
  1720   0010D2  0D02               	mullw	2
  1721   0010D4  50F3               	movf	243,w,c
  1722   0010D6  0F15               	addlw	low _tris_registers
  1723   0010D8  6ED9               	movwf	fsr2l,c
  1724   0010DA  6ADA               	clrf	fsr2h,c
  1725   0010DC  CFDE F032          	movff	postinc2,??_gpio_pin_direction_intialize+2
  1726   0010E0  CFDD F033          	movff	postdec2,??_gpio_pin_direction_intialize+3
  1727   0010E4  C032  FFD9         	movff	??_gpio_pin_direction_intialize+2,fsr2l
  1728   0010E8  C033  FFDA         	movff	??_gpio_pin_direction_intialize+3,fsr2h
  1729   0010EC  5031               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1730   0010EE  12DF               	iorwf	indf2,f,c
  1731                           
  1732                           ;MCAL_Layer/GPIO/hel_gpio.c: 38:                 break;
  1733   0010F0  EF9A  F008         	goto	l1841
  1734   0010F4                     l1839:
  1735   0010F4  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1736   0010F6  6ED9               	movwf	fsr2l,c
  1737   0010F8  6ADA               	clrf	fsr2h,c
  1738   0010FA  BCDF               	btfsc	indf2,6,c
  1739   0010FC  EF82  F008         	goto	u961
  1740   001100  EF85  F008         	goto	u960
  1741   001104                     u961:
  1742   001104  0E01               	movlw	1
  1743   001106  EF86  F008         	goto	u970
  1744   00110A                     u960:
  1745   00110A  0E00               	movlw	0
  1746   00110C                     u970:
  1747   00110C  6E30               	movwf	??_gpio_pin_direction_intialize^0,c
  1748   00110E  6A31               	clrf	(??_gpio_pin_direction_intialize+1)^0,c
  1749                           
  1750                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1751                           ; Switch size 1, requested type "simple"
  1752                           ; Number of cases is 1, Range of values is 0 to 0
  1753                           ; switch strategies available:
  1754                           ; Name         Instructions Cycles
  1755                           ; simple_byte            4     3 (average)
  1756                           ;	Chosen strategy is simple_byte
  1757   001110  5031               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1758   001112  0A00               	xorlw	0	; case 0
  1759   001114  B4D8               	btfsc	status,2,c
  1760   001116  EF8F  F008         	goto	l2335
  1761   00111A  EF23  F008         	goto	l1831
  1762   00111E                     l2335:
  1763                           
  1764                           ; Switch size 1, requested type "simple"
  1765                           ; Number of cases is 2, Range of values is 0 to 1
  1766                           ; switch strategies available:
  1767                           ; Name         Instructions Cycles
  1768                           ; simple_byte            7     4 (average)
  1769                           ;	Chosen strategy is simple_byte
  1770   00111E  5030               	movf	??_gpio_pin_direction_intialize^0,w,c
  1771   001120  0A00               	xorlw	0	; case 0
  1772   001122  B4D8               	btfsc	status,2,c
  1773   001124  EF27  F008         	goto	l1833
  1774   001128  0A01               	xorlw	1	; case 1
  1775   00112A  B4D8               	btfsc	status,2,c
  1776   00112C  EF52  F008         	goto	l1835
  1777   001130  EF23  F008         	goto	l1831
  1778   001134                     l1841:
  1779                           
  1780                           ;MCAL_Layer/GPIO/hel_gpio.c: 42:     return ret;
  1781   001134  5035               	movf	gpio_pin_direction_intialize@ret^0,w,c
  1782   001136  0012               	return		;funcret
  1783   001138                     __end_of_gpio_pin_direction_intialize:
  1784                           	callstack 0
  1785                           
  1786                           	psect	rparam
  1787   000000                     
  1788                           	psect	config
  1789                           
  1790                           ; Padding undefined space
  1791   300000                     	org	3145728
  1792   300000  FF                 	db	255
  1793                           
  1794                           ;Config register CONFIG1H @ 0x300001
  1795                           ;	Oscillator Selection bits
  1796                           ;	OSC = HS, HS oscillator
  1797                           ;	Fail-Safe Clock Monitor Enable bit
  1798                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1799                           ;	Internal/External Oscillator Switchover bit
  1800                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1801   300001                     	org	3145729
  1802   300001  02                 	db	2
  1803                           
  1804                           ;Config register CONFIG2L @ 0x300002
  1805                           ;	Power-up Timer Enable bit
  1806                           ;	PWRT = OFF, PWRT disabled
  1807                           ;	Brown-out Reset Enable bits
  1808                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1809                           ;	Brown Out Reset Voltage bits
  1810                           ;	BORV = 1, 
  1811   300002                     	org	3145730
  1812   300002  09                 	db	9
  1813                           
  1814                           ;Config register CONFIG2H @ 0x300003
  1815                           ;	Watchdog Timer Enable bit
  1816                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1817                           ;	Watchdog Timer Postscale Select bits
  1818                           ;	WDTPS = 32768, 1:32768
  1819   300003                     	org	3145731
  1820   300003  1E                 	db	30
  1821                           
  1822                           ; Padding undefined space
  1823   300004                     	org	3145732
  1824   300004  FF                 	db	255
  1825                           
  1826                           ;Config register CONFIG3H @ 0x300005
  1827                           ;	CCP2 MUX bit
  1828                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1829                           ;	PORTB A/D Enable bit
  1830                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1831                           ;	Low-Power Timer1 Oscillator Enable bit
  1832                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1833                           ;	MCLR Pin Enable bit
  1834                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1835   300005                     	org	3145733
  1836   300005  81                 	db	129
  1837                           
  1838                           ;Config register CONFIG4L @ 0x300006
  1839                           ;	Stack Full/Underflow Reset Enable bit
  1840                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1841                           ;	Single-Supply ICSP Enable bit
  1842                           ;	LVP = OFF, Single-Supply ICSP disabled
  1843                           ;	Extended Instruction Set Enable bit
  1844                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1845                           ;	Background Debugger Enable bit
  1846                           ;	DEBUG = 0x1, unprogrammed default
  1847   300006                     	org	3145734
  1848   300006  81                 	db	129
  1849                           
  1850                           ; Padding undefined space
  1851   300007                     	org	3145735
  1852   300007  FF                 	db	255
  1853                           
  1854                           ;Config register CONFIG5L @ 0x300008
  1855                           ;	Code Protection bit
  1856                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1857                           ;	Code Protection bit
  1858                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1859                           ;	Code Protection bit
  1860                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1861                           ;	Code Protection bit
  1862                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1863   300008                     	org	3145736
  1864   300008  0F                 	db	15
  1865                           
  1866                           ;Config register CONFIG5H @ 0x300009
  1867                           ;	Boot Block Code Protection bit
  1868                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1869                           ;	Data EEPROM Code Protection bit
  1870                           ;	CPD = OFF, Data EEPROM not code-protected
  1871   300009                     	org	3145737
  1872   300009  C0                 	db	192
  1873                           
  1874                           ;Config register CONFIG6L @ 0x30000A
  1875                           ;	Write Protection bit
  1876                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1877                           ;	Write Protection bit
  1878                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1879                           ;	Write Protection bit
  1880                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1881                           ;	Write Protection bit
  1882                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1883   30000A                     	org	3145738
  1884   30000A  0F                 	db	15
  1885                           
  1886                           ;Config register CONFIG6H @ 0x30000B
  1887                           ;	Configuration Register Write Protection bit
  1888                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1889                           ;	Boot Block Write Protection bit
  1890                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1891                           ;	Data EEPROM Write Protection bit
  1892                           ;	WRTD = OFF, Data EEPROM not write-protected
  1893   30000B                     	org	3145739
  1894   30000B  E0                 	db	224
  1895                           
  1896                           ;Config register CONFIG7L @ 0x30000C
  1897                           ;	Table Read Protection bit
  1898                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1899                           ;	Table Read Protection bit
  1900                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1901                           ;	Table Read Protection bit
  1902                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1903                           ;	Table Read Protection bit
  1904                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1905   30000C                     	org	3145740
  1906   30000C  0F                 	db	15
  1907                           
  1908                           ;Config register CONFIG7H @ 0x30000D
  1909                           ;	Boot Block Table Read Protection bit
  1910                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1911   30000D                     	org	3145741
  1912   30000D  40                 	db	64
  1913                           tosu	equ	0xFFF
  1914                           tosh	equ	0xFFE
  1915                           tosl	equ	0xFFD
  1916                           stkptr	equ	0xFFC
  1917                           pclatu	equ	0xFFB
  1918                           pclath	equ	0xFFA
  1919                           pcl	equ	0xFF9
  1920                           tblptru	equ	0xFF8
  1921                           tblptrh	equ	0xFF7
  1922                           tblptrl	equ	0xFF6
  1923                           tablat	equ	0xFF5
  1924                           prodh	equ	0xFF4
  1925                           prodl	equ	0xFF3
  1926                           indf0	equ	0xFEF
  1927                           postinc0	equ	0xFEE
  1928                           postdec0	equ	0xFED
  1929                           preinc0	equ	0xFEC
  1930                           plusw0	equ	0xFEB
  1931                           fsr0h	equ	0xFEA
  1932                           fsr0l	equ	0xFE9
  1933                           wreg	equ	0xFE8
  1934                           indf1	equ	0xFE7
  1935                           postinc1	equ	0xFE6
  1936                           postdec1	equ	0xFE5
  1937                           preinc1	equ	0xFE4
  1938                           plusw1	equ	0xFE3
  1939                           fsr1h	equ	0xFE2
  1940                           fsr1l	equ	0xFE1
  1941                           bsr	equ	0xFE0
  1942                           indf2	equ	0xFDF
  1943                           postinc2	equ	0xFDE
  1944                           postdec2	equ	0xFDD
  1945                           preinc2	equ	0xFDC
  1946                           plusw2	equ	0xFDB
  1947                           fsr2h	equ	0xFDA
  1948                           fsr2l	equ	0xFD9
  1949                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    16
    Data        46
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     27      80
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    gpio_pin_direction_intialize@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), lcd_2(COMRAM[10]), lcd_2$lcd_data(COMRAM[8]), 
		 -> led_initialize@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_intialize@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), lcd_2(COMRAM[10]), lcd_2$lcd_data(COMRAM[8]), 
		 -> led_initialize@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), lcd_2(COMRAM[10]), lcd_2$lcd_data(COMRAM[8]), 
		 -> led_initialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 
		 -> relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    lcd_4bit_initialize@_lcd_	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_8bit_initialize@_lcd_	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_char_data@_lcd_	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_char_data_position@_lcd_	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_command@_lcd_	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_enable_signal@_lcd_	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_set_cursor@_lcd_	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 


Critical Paths under _main in COMRAM

    _main->_lcd_8bit_send_char_data_position
    _lcd_8bit_send_char_data_position->_lcd_8bit_set_cursor
    _lcd_8bit_set_cursor->_lcd_8bit_send_command
    _lcd_8bit_send_char_data->_lcd_8bit_send_enable_signal
    _application_intialize->_lcd_8bit_initialize
    _lcd_8bit_initialize->_lcd_8bit_send_command
    _lcd_8bit_send_command->_lcd_8bit_send_enable_signal
    _lcd_8bit_send_enable_signal->_gpio_pin_write_logic
    _lcd_4bit_initialize->_gpio_pin_intialize
    _gpio_pin_intialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   49593
              _application_intialize
   _lcd_8bit_send_char_data_position
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_send_char_data_position                     5     1      4   23506
                                             22 COMRAM     5     1      4
            _lcd_8bit_send_char_data
                _lcd_8bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_set_cursor                                  6     3      3   12661
                                             16 COMRAM     6     3      3
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_char_data                              6     4      2   10383
                                             10 COMRAM     6     4      2
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                1     1      0   26085
                _lcd_4bit_initialize
                _lcd_8bit_initialize
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_initialize                                  4     3      1   19248
                                             16 COMRAM     4     3      1
                 _gpio_pin_intialize
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_command                                6     4      2   12207
                                             10 COMRAM     6     4      2
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (4) _lcd_8bit_send_enable_signal                          2     1      1    5112
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_initialize                                  3     2      1    6834
                                             11 COMRAM     3     2      1
                 _gpio_pin_intialize
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_intialize                                   3     2      1    6574
                                              8 COMRAM     3     2      1
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                 8     6      2    4891
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_intialize                         7     6      1     407
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_intialize
     _lcd_4bit_initialize
       _gpio_pin_intialize
         _gpio_pin_direction_intialize
         _gpio_pin_write_logic
     _lcd_8bit_initialize
       _gpio_pin_intialize
       _lcd_8bit_send_command
         _gpio_pin_write_logic
         _lcd_8bit_send_enable_signal
           _gpio_pin_write_logic
   _lcd_8bit_send_char_data_position
     _lcd_8bit_send_char_data
       _gpio_pin_write_logic
       _lcd_8bit_send_enable_signal
     _lcd_8bit_set_cursor
       _lcd_8bit_send_command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     1B      50       1       63.0%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      50      39        0.0%
DATA                 0      0      50       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Nov 14 18:29:28 2023

                                     l210 1512                                       l203 1136  
                                     l314 156A                                       l403 162E  
                                     l229 1246                                       l413 13C8  
                                     l351 1330                                       l370 15A6  
                                     l291 1660                                       l365 143E  
                                     l358 14B4                                       u920 1026  
                                     u904 1192                                       u921 1022  
                                     u905 118E                                       u930 1046  
                                     u914 11E8                                       u931 1042  
                                     u915 11E4                                       u960 110A  
                                     u944 106C                                       u880 114C  
                                     u961 1104                                       u945 1068  
                                     u881 1148                                       u970 110C  
                                     u954 10C2                                       u890 116C  
                                     u955 10BE                                       u891 1168  
                                     u980 14C6                                       u981 14C2  
                                     u990 14E6                                       u991 14E2  
                     led_initialize@F2891 0050                                       wreg 0FE8  
                   relay_initialize@F2885 004C               __end_of_lcd_8bit_set_cursor 13CA  
                                    l2011 1658                                      l2013 156C  
                                    l2007 1650                                      l2015 157C  
                                    l2009 1650                                      l2017 1584  
                                    l2019 15A4                                      l2331 13A0  
                                    l2333 122E                                      l2335 111E  
                                    l2271 1630                                      l2273 1630  
                                    l1811 1174                                      l2275 1634  
                                    l1813 11CA                                      l1805 1138  
                                    l1901 1544                                      l1831 1046  
                                    l1807 114C                                      l1911 1558  
                                    l1833 104E                                      l1841 1134  
                                    l1817 121A                                      l1809 116C  
                                    l1913 1568                                      l1921 1264  
                                    l1835 10A4                                      l1827 1012  
                                    l1819 1244                                      l1907 1548  
                                    l1851 160C                                      l1931 1288  
                                    l1923 1278                                      l1829 1026  
                                    l1861 14C6                                      l1909 1556  
                                    l1853 1618                                      l1941 12D2  
                                    l1933 128A                                      l1917 1248  
                                    l1839 10F4                                      l1863 14E6  
                                    l1855 161E                                      l1871 1440  
                                    l1951 1308                                      l1943 12D8  
                                    l1935 129A                                      l1919 125C  
                                    l1865 14EE                                      l1849 160C  
                                    l1873 1454                                      l1953 1314  
                                    l1945 12E4                                      l1937 12AA  
                                    l1929 127C                                      l1961 13CA  
                                    l1867 1510                                      l1859 14B6  
                                    l1883 146C                                      l1891 14B2  
                                    l1875 145C                                      l1955 1320  
                                    l1947 12F0                                      l1939 12B6  
                                    l1963 13DE                                      l1885 1496  
                                    l1877 1468                                      l1949 12FC  
                                    l1957 132E                                      l1973 13F6  
                                    l1981 143C                                      l1965 13E6  
                                    l1895 1514                                      l1887 1498  
                                    l1975 1420                                      l1967 13F2  
                                    l1991 1350                                      l1897 1528  
                                    l1889 14A8                                      l1977 1422  
                                    l1993 1364                                      l1985 1332  
                                    l1899 1530                                      l1979 1432  
                                    l1995 1378                                      l1987 1336  
                                    l1989 133C                                      l1997 138C  
                                    l1999 13C6                                      u1000 1454  
                                    u1001 1450                                      u1020 14A8  
                                    u1100 157C                                      u1021 14A4  
                                    u1101 1578                                      u1030 1528  
                                    u1014 1486                                      u1031 1524  
                                    u1015 1482                                      u1040 1568  
                                    u1041 1564                                      u1050 125C  
                                    u1051 1258                                      u1060 129A  
                                    u1061 1296                                      u1070 13DE  
                                    u1071 13DA        lcd_8bit_send_command@l_pin_counter 003E  
                                    u1090 1432                                      u1091 142E  
                                    u1084 1410                                      u1085 140C  
                                    _LATA 0F89                                      _LATB 0F8A  
                                    _LATC 0F8B                                      _LATD 0F8C  
                                    _LATE 0F8D                                      u1427 12A0  
                                    u1437 12BC                                      u1447 12D4  
                 ??_application_intialize 0043                                      _main 1630  
                                    fsr2h 0FDA                                      indf2 0FDF  
                                    fsr1l 0FE1                                      fsr2l 0FD9  
                                    prodl 0FF3                                      start 0000  
           __end_of_lcd_8bit_send_command 14B6                              ___param_bank 0000  
                    _gpio_pin_write_logic 1138                                     ?_main 002F  
                     relay_turn_off@F2895 004A                                     _PORTA 0F80  
                                   _PORTB 0F81                                     _PORTC 0F82  
                                   _PORTD 0F83                                     _PORTE 0F84  
                                   _TRISA 0F92                                     _TRISB 0F93  
                                   _TRISC 0F94                                     _TRISD 0F95  
                                   _TRISE 0F96                                     _lcd_1 0029  
                                   _lcd_2 001F                  ?_lcd_8bit_send_char_data 0039  
                                   tablat 0FF5                                     status 0FD8  
                         __initialization 15A8                              __end_of_main 1650  
                   ?_gpio_pin_write_logic 002F                    lcd_8bit_set_cursor@ret 0044  
                  lcd_8bit_set_cursor@row 0040                             _lat_registers 000B  
                                  ??_main 004A                             __activetblptr 0002  
                        led_turn_on@F2896 004F                                    clear_0 15CE  
                                  isa$std 0001   gpio_pin_direction_intialize@_pin_config 002F  
                            __pdataCOMRAM 0001                              __mediumconst 0000  
                                  tblptrh 0FF7                                    tblptrl 0FF6  
                                  tblptru 0FF8                lcd_8bit_send_command@_lcd_ 0039  
                              __accesstop 0080                   __end_of__initialization 15D4  
                           ___rparam_used 0001                    ??_gpio_pin_write_logic 0031  
                          __pcstackCOMRAM 002F                  lcd_8bit_initialize@_lcd_ 003F  
           __end_of_application_intialize 1662                    lcd_8bit_initialize@ret 0042  
            lcd_8bit_send_char_data@_lcd_ 0039                         led_turn_off@F2901 004E  
                    led_turn_toggle@F2906 004D       __end_of_lcd_8bit_send_enable_signal 1630  
             _lcd_8bit_send_enable_signal 160C                                _btn_values 1001  
          lcd_8bit_send_enable_signal@ret 0038                            _tris_registers 0015  
           ??_lcd_8bit_send_enable_signal 0038    lcd_8bit_initialize@l_data_pins_counter 0041  
  lcd_4bit_initialize@l_data_pins_counter 003C                                   __Hparam 0000  
                                 __Lparam 0000                     _lcd_8bit_send_command 1440  
                            __psmallconst 1000                __end_of_gpio_pin_intialize 1514  
                                 __pcinit 15A8                                   __ramtop 1000  
                                 __ptext0 1630                                   __ptext1 156C  
                                 __ptext2 1332                                   __ptext3 13CA  
                                 __ptext4 1650                                   __ptext5 1248  
                                 __ptext6 1440                                   __ptext7 160C  
                                 __ptext8 1514                                   __ptext9 14B6  
     lcd_8bit_send_char_data_position@ret 0049       lcd_8bit_send_char_data_position@row 0046  
                    end_of_initialization 15D4                             __Lmediumconst 0000  
__end_of_lcd_8bit_send_char_data_position 15A8        ??_lcd_8bit_send_char_data_position 0049  
       ?_lcd_8bit_send_char_data_position 0045          _lcd_8bit_send_char_data_position 156C  
                   gpio_pin_intialize@ret 0039                                   postdec1 0FE5  
                                 postdec2 0FDD                                   postinc0 0FEE  
                                 postinc2 0FDE                       _lcd_4bit_initialize 1514  
           gpio_pin_intialize@_pin_config 0037      __end_of_gpio_pin_direction_intialize 1138  
            _gpio_pin_direction_intialize 1012                      ?_lcd_4bit_initialize 003A  
        lcd_8bit_send_enable_signal@_lcd_ 0037                    ?_lcd_8bit_send_command 0039  
                      relay_turn_on@F2890 004B                             __pidataCOMRAM 15DE  
                     start_initialization 15A8                       _lcd_8bit_initialize 1248  
           ?_gpio_pin_direction_intialize 002F                     ??_lcd_4bit_initialize 003B  
                lcd_8bit_set_cursor@_lcd_ 003F                      ?_lcd_8bit_initialize 003F  
                 _lcd_8bit_send_char_data 13CA                       _lcd_8bit_set_cursor 1332  
                lcd_8bit_send_command@ret 003D                               __pbssCOMRAM 004A  
                    ?_lcd_8bit_set_cursor 003F           gpio_pin_direction_intialize@ret 0035  
                   ??_lcd_8bit_initialize 0040                     _application_intialize 1650  
             lcd_8bit_send_char_data@data 003A           gpio_pin_write_logic@_pin_config 002F  
               gpio_pin_write_logic@logic 0030                               __smallconst 1000  
   lcd_8bit_send_char_data_position@_lcd_ 0045                        _gpio_pin_intialize 14B6  
                   ??_lcd_8bit_set_cursor 0042            ??_gpio_pin_direction_intialize 0030  
               ??_lcd_8bit_send_char_data 003B                       ?_gpio_pin_intialize 0037  
    lcd_8bit_send_char_data@l_pin_counter 003E                      ??_gpio_pin_intialize 0038  
               lcd_8bit_set_cursor@coulmn 0041                   gpio_pin_write_logic@ret 0036  
                               copy_data0 15BC                   ??_lcd_8bit_send_command 003B  
                  ?_application_intialize 002F                                  __Hrparam 0000  
                                __Lrparam 0000           __end_of_lcd_8bit_send_char_data 1440  
                      __end_of_btn_values 1011                lcd_8bit_send_char_data@ret 003D  
                                __ptext10 1138                                  __ptext11 1012  
    lcd_8bit_send_char_data_position@data 0048                                  isa$xinst 0000  
             __end_of_lcd_4bit_initialize 156C              __end_of_gpio_pin_write_logic 1248  
            ?_lcd_8bit_send_enable_signal 0037                            _port_registers 0001  
             __end_of_lcd_8bit_initialize 1332                  lcd_4bit_initialize@_lcd_ 003A  
            lcd_8bit_send_command@command 003A    lcd_8bit_send_char_data_position@column 0047  
                  lcd_4bit_initialize@ret 003B  
