

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Nov 14 22:00:52 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    29   000000                     
    30                           ; Generated 23/03/2023 GMT
    31                           ; 
    32                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F4620 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64   000000                     
    65                           	psect	idataCOMRAM
    66   001774                     __pidataCOMRAM:
    67                           	callstack 0
    68                           
    69                           ;initializer for _port_registers
    70   001774  80                 	db	128
    71   001775  0F                 	db	15
    72   001776  81                 	db	129
    73   001777  0F                 	db	15
    74   001778  82                 	db	130
    75   001779  0F                 	db	15
    76   00177A  83                 	db	131
    77   00177B  0F                 	db	15
    78   00177C  84                 	db	132
    79   00177D  0F                 	db	15
    80                           
    81                           ;initializer for _lat_registers
    82   00177E  89                 	db	137
    83   00177F  0F                 	db	15
    84   001780  8A                 	db	138
    85   001781  0F                 	db	15
    86   001782  8B                 	db	139
    87   001783  0F                 	db	15
    88   001784  8C                 	db	140
    89   001785  0F                 	db	15
    90   001786  8D                 	db	141
    91   001787  0F                 	db	15
    92                           
    93                           ;initializer for _tris_registers
    94   001788  92                 	db	146
    95   001789  0F                 	db	15
    96   00178A  93                 	db	147
    97   00178B  0F                 	db	15
    98   00178C  94                 	db	148
    99   00178D  0F                 	db	15
   100   00178E  95                 	db	149
   101   00178F  0F                 	db	15
   102   001790  96                 	db	150
   103   001791  0F                 	db	15
   104                           
   105                           ;initializer for _lcd_2
   106   001792  32                 	db	50
   107   001793  3A                 	db	58
   108   001794  03                 	db	3
   109   001795  0B                 	db	11
   110   001796  13                 	db	19
   111   001797  1B                 	db	27
   112   001798  23                 	db	35
   113   001799  2B                 	db	43
   114   00179A  33                 	db	51
   115   00179B  3B                 	db	59
   116                           
   117                           ;initializer for _lcd_1
   118   00179C  02                 	db	2
   119   00179D  0A                 	db	10
   120   00179E  12                 	db	18
   121   00179F  1A                 	db	26
   122   0017A0  22                 	db	34
   123   0017A1  2A                 	db	42
   124                           
   125                           	psect	smallconst
   126   001000                     __psmallconst:
   127                           	callstack 0
   128   001000  00                 	db	0
   129   001001                     _btn_values:
   130                           	callstack 0
   131   001001  37                 	db	55
   132   001002  38                 	db	56
   133   001003  39                 	db	57
   134   001004  2F                 	db	47
   135   001005  34                 	db	52
   136   001006  35                 	db	53
   137   001007  36                 	db	54
   138   001008  2A                 	db	42
   139   001009  31                 	db	49
   140   00100A  32                 	db	50
   141   00100B  33                 	db	51
   142   00100C  2D                 	db	45
   143   00100D  23                 	db	35
   144   00100E  30                 	db	48
   145   00100F  3D                 	db	61
   146   001010  2B                 	db	43
   147   001011                     __end_of_btn_values:
   148                           	callstack 0
   149   000000                     _PORTE	set	3972
   150   000000                     _PORTD	set	3971
   151   000000                     _PORTC	set	3970
   152   000000                     _PORTB	set	3969
   153   000000                     _PORTA	set	3968
   154   000000                     _LATA	set	3977
   155   000000                     _TRISA	set	3986
   156   000000                     _TRISE	set	3990
   157   000000                     _TRISD	set	3989
   158   000000                     _TRISC	set	3988
   159   000000                     _TRISB	set	3987
   160   000000                     _LATE	set	3981
   161   000000                     _LATD	set	3980
   162   000000                     _LATC	set	3979
   163   000000                     _LATB	set	3978
   164   001011                     STR_2:
   165   001011  61                 	db	97	;'a'
   166   001012  73                 	db	115	;'s'
   167   001013  66                 	db	102	;'f'
   168   001014  64                 	db	100	;'d'
   169   001015  64                 	db	100	;'d'
   170   001016  73                 	db	115	;'s'
   171   001017  68                 	db	104	;'h'
   172   001018  67                 	db	103	;'g'
   173   001019  00                 	db	0
   174   00101A                     STR_1:
   175   00101A  6D                 	db	109	;'m'
   176   00101B  6F                 	db	111	;'o'
   177   00101C  68                 	db	104	;'h'
   178   00101D  61                 	db	97	;'a'
   179   00101E  6D                 	db	109	;'m'
   180   00101F  65                 	db	101	;'e'
   181   001020  64                 	db	100	;'d'
   182   001021  00                 	db	0
   183   001022  00                 	db	0	; dummy byte at the end
   184   000000                     
   185                           ; #config settings
   186                           
   187                           	psect	cinit
   188   00170A                     __pcinit:
   189                           	callstack 0
   190   00170A                     start_initialization:
   191                           	callstack 0
   192   00170A                     __initialization:
   193                           	callstack 0
   194                           
   195                           ; Initialize objects allocated to COMRAM (46 bytes)
   196                           ; load TBLPTR registers with __pidataCOMRAM
   197   00170A  0E74               	movlw	low __pidataCOMRAM
   198   00170C  6EF6               	movwf	tblptrl,c
   199   00170E  0E17               	movlw	high __pidataCOMRAM
   200   001710  6EF7               	movwf	tblptrh,c
   201   001712  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   202   001714  6EF8               	movwf	tblptru,c
   203   001716  EE00  F001         	lfsr	0,__pdataCOMRAM
   204   00171A  EE10 F02E          	lfsr	1,46
   205   00171E                     copy_data0:
   206   00171E  0009               	tblrd		*+
   207   001720  CFF5 FFEE          	movff	tablat,postinc0
   208   001724  50E5               	movf	postdec1,w,c
   209   001726  50E1               	movf	fsr1l,w,c
   210   001728  E1FA               	bnz	copy_data0
   211                           
   212                           ; Clear objects allocated to COMRAM (7 bytes)
   213   00172A  EE00  F048         	lfsr	0,__pbssCOMRAM
   214   00172E  0E07               	movlw	7
   215   001730                     clear_0:
   216   001730  6AEE               	clrf	postinc0,c
   217   001732  06E8               	decf	wreg,f,c
   218   001734  E1FD               	bnz	clear_0
   219   001736                     end_of_initialization:
   220                           	callstack 0
   221   001736                     __end_of__initialization:
   222                           	callstack 0
   223   001736  0E00               	movlw	low (__Lmediumconst shr (0+16))
   224   001738  6EF8               	movwf	tblptru,c
   225   00173A  0100               	movlb	0
   226   00173C  EFA0  F00B         	goto	_main	;jump to C main() function
   227                           
   228                           	psect	bssCOMRAM
   229   000048                     __pbssCOMRAM:
   230                           	callstack 0
   231   000048                     relay_turn_off@F2895:
   232                           	callstack 0
   233   000048                     	ds	1
   234   000049                     relay_turn_on@F2890:
   235                           	callstack 0
   236   000049                     	ds	1
   237   00004A                     relay_initialize@F2885:
   238                           	callstack 0
   239   00004A                     	ds	1
   240   00004B                     led_turn_toggle@F2906:
   241                           	callstack 0
   242   00004B                     	ds	1
   243   00004C                     led_turn_off@F2901:
   244                           	callstack 0
   245   00004C                     	ds	1
   246   00004D                     led_turn_on@F2896:
   247                           	callstack 0
   248   00004D                     	ds	1
   249   00004E                     led_initialize@F2891:
   250                           	callstack 0
   251   00004E                     	ds	1
   252                           
   253                           	psect	dataCOMRAM
   254   000001                     __pdataCOMRAM:
   255                           	callstack 0
   256   000001                     _port_registers:
   257                           	callstack 0
   258   000001                     	ds	10
   259   00000B                     _lat_registers:
   260                           	callstack 0
   261   00000B                     	ds	10
   262   000015                     _tris_registers:
   263                           	callstack 0
   264   000015                     	ds	10
   265   00001F                     _lcd_2:
   266                           	callstack 0
   267   00001F                     	ds	10
   268   000029                     _lcd_1:
   269                           	callstack 0
   270   000029                     	ds	6
   271                           
   272                           	psect	cstackCOMRAM
   273   00002F                     __pcstackCOMRAM:
   274                           	callstack 0
   275   00002F                     gpio_pin_direction_intialize@_pin_config:
   276                           	callstack 0
   277   00002F                     gpio_pin_write_logic@_pin_config:
   278                           	callstack 0
   279                           
   280                           ; 1 bytes @ 0x0
   281   00002F                     	ds	1
   282   000030                     ??_gpio_pin_direction_intialize:
   283   000030                     gpio_pin_write_logic@logic:
   284                           	callstack 0
   285                           
   286                           ; 1 bytes @ 0x1
   287   000030                     	ds	1
   288   000031                     ??_gpio_pin_write_logic:
   289                           
   290                           ; 1 bytes @ 0x2
   291   000031                     	ds	4
   292   000035                     gpio_pin_direction_intialize@ret:
   293                           	callstack 0
   294                           
   295                           ; 1 bytes @ 0x6
   296   000035                     	ds	1
   297   000036                     gpio_pin_write_logic@ret:
   298                           	callstack 0
   299                           
   300                           ; 1 bytes @ 0x7
   301   000036                     	ds	1
   302   000037                     gpio_pin_intialize@_pin_config:
   303                           	callstack 0
   304   000037                     lcd_send_4bits@_lcd_:
   305                           	callstack 0
   306   000037                     lcd_4bit_send_enable_signal@_lcd_:
   307                           	callstack 0
   308   000037                     lcd_8bit_send_enable_signal@_lcd_:
   309                           	callstack 0
   310                           
   311                           ; 1 bytes @ 0x8
   312   000037                     	ds	1
   313   000038                     ??_gpio_pin_intialize:
   314   000038                     lcd_send_4bits@_data_command:
   315                           	callstack 0
   316   000038                     lcd_4bit_send_enable_signal@ret:
   317                           	callstack 0
   318   000038                     lcd_8bit_send_enable_signal@ret:
   319                           	callstack 0
   320                           
   321                           ; 1 bytes @ 0x9
   322   000038                     	ds	1
   323   000039                     gpio_pin_intialize@ret:
   324                           	callstack 0
   325   000039                     lcd_8bit_send_command@_lcd_:
   326                           	callstack 0
   327   000039                     lcd_send_4bits@ret:
   328                           	callstack 0
   329                           
   330                           ; 1 bytes @ 0xA
   331   000039                     	ds	1
   332   00003A                     lcd_4bit_send_command@_lcd_:
   333                           	callstack 0
   334   00003A                     lcd_4bit_send_char_data@_lcd_:
   335                           	callstack 0
   336   00003A                     lcd_8bit_send_command@command:
   337                           	callstack 0
   338                           
   339                           ; 1 bytes @ 0xB
   340   00003A                     	ds	1
   341   00003B                     ??_lcd_8bit_send_command:
   342   00003B                     lcd_4bit_send_command@command:
   343                           	callstack 0
   344   00003B                     lcd_4bit_send_char_data@data:
   345                           	callstack 0
   346                           
   347                           ; 1 bytes @ 0xC
   348   00003B                     	ds	1
   349   00003C                     lcd_4bit_send_command@ret:
   350                           	callstack 0
   351   00003C                     lcd_4bit_send_char_data@ret:
   352                           	callstack 0
   353                           
   354                           ; 1 bytes @ 0xD
   355   00003C                     	ds	1
   356   00003D                     lcd_4bit_initialize@_lcd_:
   357                           	callstack 0
   358   00003D                     lcd_8bit_send_command@ret:
   359                           	callstack 0
   360   00003D                     lcd_4bit_set_cursor@_lcd_:
   361                           	callstack 0
   362                           
   363                           ; 1 bytes @ 0xE
   364   00003D                     	ds	1
   365   00003E                     ??_lcd_4bit_initialize:
   366   00003E                     lcd_8bit_send_command@l_pin_counter:
   367                           	callstack 0
   368   00003E                     lcd_4bit_set_cursor@row:
   369                           	callstack 0
   370                           
   371                           ; 1 bytes @ 0xF
   372   00003E                     	ds	1
   373   00003F                     lcd_4bit_initialize@l_data_pins_counter:
   374                           	callstack 0
   375   00003F                     lcd_8bit_initialize@_lcd_:
   376                           	callstack 0
   377   00003F                     lcd_4bit_set_cursor@coulmn:
   378                           	callstack 0
   379                           
   380                           ; 1 bytes @ 0x10
   381   00003F                     	ds	1
   382   000040                     ??_lcd_8bit_initialize:
   383   000040                     ??_lcd_4bit_set_cursor:
   384   000040                     lcd_4bit_initialize@ret:
   385                           	callstack 0
   386                           
   387                           ; 1 bytes @ 0x11
   388   000040                     	ds	1
   389   000041                     lcd_8bit_initialize@l_data_pins_counter:
   390                           	callstack 0
   391                           
   392                           ; 1 bytes @ 0x12
   393   000041                     	ds	1
   394   000042                     lcd_8bit_initialize@ret:
   395                           	callstack 0
   396   000042                     lcd_4bit_set_cursor@ret:
   397                           	callstack 0
   398                           
   399                           ; 1 bytes @ 0x13
   400   000042                     	ds	1
   401   000043                     lcd_4bit_send_string_position@_lcd_:
   402                           	callstack 0
   403                           
   404                           ; 1 bytes @ 0x14
   405   000043                     	ds	1
   406   000044                     lcd_4bit_send_string_position@row:
   407                           	callstack 0
   408                           
   409                           ; 1 bytes @ 0x15
   410   000044                     	ds	1
   411   000045                     lcd_4bit_send_string_position@column:
   412                           	callstack 0
   413                           
   414                           ; 1 bytes @ 0x16
   415   000045                     	ds	1
   416   000046                     lcd_4bit_send_string_position@str:
   417                           	callstack 0
   418                           
   419                           ; 1 bytes @ 0x17
   420   000046                     	ds	1
   421   000047                     lcd_4bit_send_string_position@ret:
   422                           	callstack 0
   423                           
   424                           ; 1 bytes @ 0x18
   425   000047                     	ds	1
   426   000048                     
   427                           ; 1 bytes @ 0x19
   428 ;;
   429 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   430 ;;
   431 ;; *************** function _main *****************
   432 ;; Defined at:
   433 ;;		line 98 in file "application.c"
   434 ;; Parameters:    Size  Location     Type
   435 ;;		None
   436 ;; Auto vars:     Size  Location     Type
   437 ;;  ret             1    0        unsigned char 
   438 ;; Return value:  Size  Location     Type
   439 ;;                  2  284[None  ] int 
   440 ;; Registers used:
   441 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   442 ;; Tracked objects:
   443 ;;		On entry : 0/0
   444 ;;		On exit  : 0/0
   445 ;;		Unchanged: 0/0
   446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   451 ;;Total ram usage:        0 bytes
   452 ;; Hardware stack levels required when called: 5
   453 ;; This function calls:
   454 ;;		_application_intialize
   455 ;;		_lcd_4bit_send_string_position
   456 ;; This function is called by:
   457 ;;		Startup code after reset
   458 ;; This function uses a non-reentrant model
   459 ;;
   460                           
   461                           	psect	text0
   462   001740                     __ptext0:
   463                           	callstack 0
   464   001740                     _main:
   465                           	callstack 26
   466   001740                     
   467                           ;application.c: 100:     application_intialize();
   468   001740  ECF5  F00B         	call	_application_intialize	;wreg free
   469   001744                     l2449:
   470   001744  0E29               	movlw	low _lcd_1
   471   001746  6E43               	movwf	lcd_4bit_send_string_position@_lcd_^0,c
   472   001748  0E01               	movlw	1
   473   00174A  6E44               	movwf	lcd_4bit_send_string_position@row^0,c
   474   00174C  0E01               	movlw	1
   475   00174E  6E45               	movwf	lcd_4bit_send_string_position@column^0,c
   476   001750  0E1A               	movlw	low STR_1
   477   001752  6E46               	movwf	lcd_4bit_send_string_position@str^0,c
   478   001754  EC9E  F00A         	call	_lcd_4bit_send_string_position	;wreg free
   479   001758  0E29               	movlw	low _lcd_1
   480   00175A  6E43               	movwf	lcd_4bit_send_string_position@_lcd_^0,c
   481   00175C  0E02               	movlw	2
   482   00175E  6E44               	movwf	lcd_4bit_send_string_position@row^0,c
   483   001760  0E01               	movlw	1
   484   001762  6E45               	movwf	lcd_4bit_send_string_position@column^0,c
   485   001764  0E11               	movlw	low STR_2
   486   001766  6E46               	movwf	lcd_4bit_send_string_position@str^0,c
   487   001768  EC9E  F00A         	call	_lcd_4bit_send_string_position	;wreg free
   488   00176C  EFA2  F00B         	goto	l2449
   489   001770  EF00  F000         	goto	start
   490   001774                     __end_of_main:
   491                           	callstack 0
   492                           
   493 ;; *************** function _lcd_4bit_send_string_position *****************
   494 ;; Defined at:
   495 ;;		line 168 in file "ECU_Layer/LCD/ecu_lcd.c"
   496 ;; Parameters:    Size  Location     Type
   497 ;;  _lcd_           1   20[COMRAM] PTR const struct .
   498 ;;		 -> lcd_1(6), 
   499 ;;  row             1   21[COMRAM] unsigned char 
   500 ;;  column          1   22[COMRAM] unsigned char 
   501 ;;  str             1   23[COMRAM] PTR unsigned char 
   502 ;;		 -> STR_2(9), STR_1(8), 
   503 ;; Auto vars:     Size  Location     Type
   504 ;;  ret             1   24[COMRAM] unsigned char 
   505 ;; Return value:  Size  Location     Type
   506 ;;                  1    wreg      unsigned char 
   507 ;; Registers used:
   508 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   509 ;; Tracked objects:
   510 ;;		On entry : 0/0
   511 ;;		On exit  : 0/0
   512 ;;		Unchanged: 0/0
   513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   514 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   515 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   517 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   518 ;;Total ram usage:        5 bytes
   519 ;; Hardware stack levels used: 1
   520 ;; Hardware stack levels required when called: 4
   521 ;; This function calls:
   522 ;;		_lcd_4bit_send_char_data
   523 ;;		_lcd_4bit_set_cursor
   524 ;; This function is called by:
   525 ;;		_main
   526 ;; This function uses a non-reentrant model
   527 ;;
   528                           
   529                           	psect	text1
   530   00153C                     __ptext1:
   531                           	callstack 0
   532   00153C                     _lcd_4bit_send_string_position:
   533                           	callstack 26
   534   00153C                     
   535                           ;ECU_Layer/LCD/ecu_lcd.c: 170:     if(((void*)0) == _lcd_){
   536   00153C  5043               	movf	lcd_4bit_send_string_position@_lcd_^0,w,c
   537   00153E  A4D8               	btfss	status,2,c
   538   001540  EFA4  F00A         	goto	u1131
   539   001544  EFA6  F00A         	goto	u1130
   540   001548                     u1131:
   541   001548  EFAA  F00A         	goto	l2159
   542   00154C                     u1130:
   543   00154C                     
   544                           ;ECU_Layer/LCD/ecu_lcd.c: 171:         ret = (Std_ReturnType)0x00;
   545   00154C  0E00               	movlw	0
   546   00154E  6E47               	movwf	lcd_4bit_send_string_position@ret^0,c
   547                           
   548                           ;ECU_Layer/LCD/ecu_lcd.c: 172:     }
   549   001550  EFD0  F00A         	goto	l2167
   550   001554                     l2159:
   551                           
   552                           ;ECU_Layer/LCD/ecu_lcd.c: 174:         ret = lcd_4bit_set_cursor(_lcd_, row , column);
   553   001554  C043  F03D         	movff	lcd_4bit_send_string_position@_lcd_,lcd_4bit_set_cursor@_lcd_
   554   001558  C044  F03E         	movff	lcd_4bit_send_string_position@row,lcd_4bit_set_cursor@row
   555   00155C  C045  F03F         	movff	lcd_4bit_send_string_position@column,lcd_4bit_set_cursor@coulmn
   556   001560  EC17  F00A         	call	_lcd_4bit_set_cursor	;wreg free
   557   001564  6E47               	movwf	lcd_4bit_send_string_position@ret^0,c
   558                           
   559                           ;ECU_Layer/LCD/ecu_lcd.c: 175:         while(*str){
   560   001566  EFC2  F00A         	goto	l2165
   561   00156A                     l2161:
   562                           
   563                           ;ECU_Layer/LCD/ecu_lcd.c: 176:             ret = lcd_4bit_send_char_data(_lcd_, *str++);
   564   00156A  C043  F03A         	movff	lcd_4bit_send_string_position@_lcd_,lcd_4bit_send_char_data@_lcd_
   565   00156E  C046  FFF6         	movff	lcd_4bit_send_string_position@str,tblptrl
   566   001572                     	if	1	;There is more than 1 active tblptr byte
   567   001572  0E10               	movlw	high __smallconst
   568   001574  6EF7               	movwf	tblptrh,c
   569   001576                     	endif
   570   001576                     	if	0	;tblptru may be non-zero
   571   001576                     	endif
   572   001576                     	if	0	;tblptru may be non-zero
   573   001576                     	endif
   574   001576  0008               	tblrd		*
   575   001578  CFF5 F03B          	movff	tablat,lcd_4bit_send_char_data@data
   576   00157C  EC01  F00B         	call	_lcd_4bit_send_char_data	;wreg free
   577   001580  6E47               	movwf	lcd_4bit_send_string_position@ret^0,c
   578   001582  2A46               	incf	lcd_4bit_send_string_position@str^0,f,c
   579   001584                     l2165:
   580                           
   581                           ;ECU_Layer/LCD/ecu_lcd.c: 175:         while(*str){
   582   001584  C046  FFF6         	movff	lcd_4bit_send_string_position@str,tblptrl
   583   001588                     	if	1	;There is more than 1 active tblptr byte
   584   001588  0E10               	movlw	high __smallconst
   585   00158A  6EF7               	movwf	tblptrh,c
   586   00158C                     	endif
   587   00158C                     	if	0	;tblptru may be non-zero
   588   00158C                     	endif
   589   00158C                     	if	0	;tblptru may be non-zero
   590   00158C                     	endif
   591   00158C  0008               	tblrd		*
   592   00158E  50F5               	movf	tablat,w,c
   593   001590  0900               	iorlw	0
   594   001592  A4D8               	btfss	status,2,c
   595   001594  EFCE  F00A         	goto	u1141
   596   001598  EFD0  F00A         	goto	u1140
   597   00159C                     u1141:
   598   00159C  EFB5  F00A         	goto	l2161
   599   0015A0                     u1140:
   600   0015A0                     l2167:
   601                           
   602                           ;ECU_Layer/LCD/ecu_lcd.c: 181:     return ret;
   603   0015A0  5047               	movf	lcd_4bit_send_string_position@ret^0,w,c
   604   0015A2  0012               	return		;funcret
   605   0015A4                     __end_of_lcd_4bit_send_string_position:
   606                           	callstack 0
   607                           
   608 ;; *************** function _lcd_4bit_set_cursor *****************
   609 ;; Defined at:
   610 ;;		line 453 in file "ECU_Layer/LCD/ecu_lcd.c"
   611 ;; Parameters:    Size  Location     Type
   612 ;;  _lcd_           1   14[COMRAM] PTR const struct .
   613 ;;		 -> lcd_1(6), 
   614 ;;  row             1   15[COMRAM] unsigned char 
   615 ;;  coulmn          1   16[COMRAM] unsigned char 
   616 ;; Auto vars:     Size  Location     Type
   617 ;;  ret             1   19[COMRAM] unsigned char 
   618 ;; Return value:  Size  Location     Type
   619 ;;                  1    wreg      unsigned char 
   620 ;; Registers used:
   621 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   622 ;; Tracked objects:
   623 ;;		On entry : 0/0
   624 ;;		On exit  : 0/0
   625 ;;		Unchanged: 0/0
   626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   627 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   628 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   629 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   630 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   631 ;;Total ram usage:        6 bytes
   632 ;; Hardware stack levels used: 1
   633 ;; Hardware stack levels required when called: 3
   634 ;; This function calls:
   635 ;;		_lcd_4bit_send_command
   636 ;; This function is called by:
   637 ;;		_lcd_4bit_send_string_position
   638 ;;		_lcd_4bit_send_char_data_position
   639 ;; This function uses a non-reentrant model
   640 ;;
   641                           
   642                           	psect	text2
   643   00142E                     __ptext2:
   644                           	callstack 0
   645   00142E                     _lcd_4bit_set_cursor:
   646                           	callstack 26
   647   00142E                     
   648                           ;ECU_Layer/LCD/ecu_lcd.c: 454:     Std_ReturnType ret = (Std_ReturnType)0x01;
   649   00142E  0E01               	movlw	1
   650   001430  6E42               	movwf	lcd_4bit_set_cursor@ret^0,c
   651   001432                     
   652                           ;ECU_Layer/LCD/ecu_lcd.c: 455:     coulmn--;
   653   001432  063F               	decf	lcd_4bit_set_cursor@coulmn^0,f,c
   654                           
   655                           ;ECU_Layer/LCD/ecu_lcd.c: 456:     switch (row){
   656   001434  EF44  F00A         	goto	l2139
   657   001438                     l2131:
   658   001438  C03D  F03A         	movff	lcd_4bit_set_cursor@_lcd_,lcd_4bit_send_command@_lcd_
   659   00143C  503F               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
   660   00143E  0F80               	addlw	128
   661   001440  6E3B               	movwf	lcd_4bit_send_command@command^0,c
   662   001442  EC2F  F00B         	call	_lcd_4bit_send_command	;wreg free
   663   001446  6E42               	movwf	lcd_4bit_set_cursor@ret^0,c
   664                           
   665                           ;ECU_Layer/LCD/ecu_lcd.c: 458:         break;
   666   001448  EF61  F00A         	goto	l2141
   667   00144C                     l2133:
   668   00144C  C03D  F03A         	movff	lcd_4bit_set_cursor@_lcd_,lcd_4bit_send_command@_lcd_
   669   001450  503F               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
   670   001452  0FC0               	addlw	192
   671   001454  6E3B               	movwf	lcd_4bit_send_command@command^0,c
   672   001456  EC2F  F00B         	call	_lcd_4bit_send_command	;wreg free
   673   00145A  6E42               	movwf	lcd_4bit_set_cursor@ret^0,c
   674                           
   675                           ;ECU_Layer/LCD/ecu_lcd.c: 460:         break;
   676   00145C  EF61  F00A         	goto	l2141
   677   001460                     l2135:
   678   001460  C03D  F03A         	movff	lcd_4bit_set_cursor@_lcd_,lcd_4bit_send_command@_lcd_
   679   001464  503F               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
   680   001466  0F94               	addlw	148
   681   001468  6E3B               	movwf	lcd_4bit_send_command@command^0,c
   682   00146A  EC2F  F00B         	call	_lcd_4bit_send_command	;wreg free
   683   00146E  6E42               	movwf	lcd_4bit_set_cursor@ret^0,c
   684                           
   685                           ;ECU_Layer/LCD/ecu_lcd.c: 462:         break;
   686   001470  EF61  F00A         	goto	l2141
   687   001474                     l2137:
   688   001474  C03D  F03A         	movff	lcd_4bit_set_cursor@_lcd_,lcd_4bit_send_command@_lcd_
   689   001478  503F               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
   690   00147A  0FD4               	addlw	212
   691   00147C  6E3B               	movwf	lcd_4bit_send_command@command^0,c
   692   00147E  EC2F  F00B         	call	_lcd_4bit_send_command	;wreg free
   693   001482  6E42               	movwf	lcd_4bit_set_cursor@ret^0,c
   694                           
   695                           ;ECU_Layer/LCD/ecu_lcd.c: 464:         break;
   696   001484  EF61  F00A         	goto	l2141
   697   001488                     l2139:
   698   001488  503E               	movf	lcd_4bit_set_cursor@row^0,w,c
   699   00148A  6E40               	movwf	??_lcd_4bit_set_cursor^0,c
   700   00148C  6A41               	clrf	(??_lcd_4bit_set_cursor+1)^0,c
   701                           
   702                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   703                           ; Switch size 1, requested type "simple"
   704                           ; Number of cases is 1, Range of values is 0 to 0
   705                           ; switch strategies available:
   706                           ; Name         Instructions Cycles
   707                           ; simple_byte            4     3 (average)
   708                           ;	Chosen strategy is simple_byte
   709   00148E  5041               	movf	(??_lcd_4bit_set_cursor+1)^0,w,c
   710   001490  0A00               	xorlw	0	; case 0
   711   001492  B4D8               	btfsc	status,2,c
   712   001494  EF4E  F00A         	goto	l2545
   713   001498  EF61  F00A         	goto	l2141
   714   00149C                     l2545:
   715                           
   716                           ; Switch size 1, requested type "simple"
   717                           ; Number of cases is 4, Range of values is 1 to 4
   718                           ; switch strategies available:
   719                           ; Name         Instructions Cycles
   720                           ; simple_byte           13     7 (average)
   721                           ;	Chosen strategy is simple_byte
   722   00149C  5040               	movf	??_lcd_4bit_set_cursor^0,w,c
   723   00149E  0A01               	xorlw	1	; case 1
   724   0014A0  B4D8               	btfsc	status,2,c
   725   0014A2  EF1C  F00A         	goto	l2131
   726   0014A6  0A03               	xorlw	3	; case 2
   727   0014A8  B4D8               	btfsc	status,2,c
   728   0014AA  EF26  F00A         	goto	l2133
   729   0014AE  0A01               	xorlw	1	; case 3
   730   0014B0  B4D8               	btfsc	status,2,c
   731   0014B2  EF30  F00A         	goto	l2135
   732   0014B6  0A07               	xorlw	7	; case 4
   733   0014B8  B4D8               	btfsc	status,2,c
   734   0014BA  EF3A  F00A         	goto	l2137
   735   0014BE  EF61  F00A         	goto	l2141
   736   0014C2                     l2141:
   737                           
   738                           ;ECU_Layer/LCD/ecu_lcd.c: 467:     return ret;
   739   0014C2  5042               	movf	lcd_4bit_set_cursor@ret^0,w,c
   740   0014C4  0012               	return		;funcret
   741   0014C6                     __end_of_lcd_4bit_set_cursor:
   742                           	callstack 0
   743                           
   744 ;; *************** function _lcd_4bit_send_char_data *****************
   745 ;; Defined at:
   746 ;;		line 94 in file "ECU_Layer/LCD/ecu_lcd.c"
   747 ;; Parameters:    Size  Location     Type
   748 ;;  _lcd_           1   11[COMRAM] PTR const struct .
   749 ;;		 -> lcd_1(6), 
   750 ;;  data            1   12[COMRAM] unsigned char 
   751 ;; Auto vars:     Size  Location     Type
   752 ;;  ret             1   13[COMRAM] unsigned char 
   753 ;; Return value:  Size  Location     Type
   754 ;;                  1    wreg      unsigned char 
   755 ;; Registers used:
   756 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   757 ;; Tracked objects:
   758 ;;		On entry : 0/0
   759 ;;		On exit  : 0/0
   760 ;;		Unchanged: 0/0
   761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   762 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   763 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   765 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   766 ;;Total ram usage:        3 bytes
   767 ;; Hardware stack levels used: 1
   768 ;; Hardware stack levels required when called: 2
   769 ;; This function calls:
   770 ;;		_gpio_pin_write_logic
   771 ;;		_lcd_4bit_send_enable_signal
   772 ;;		_lcd_send_4bits
   773 ;; This function is called by:
   774 ;;		_lcd_4bit_send_string_position
   775 ;;		_lcd_4bit_send_char_data_position
   776 ;;		_lcd_4bit_send_string
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780                           	psect	text3
   781   001602                     __ptext3:
   782                           	callstack 0
   783   001602                     _lcd_4bit_send_char_data:
   784                           	callstack 27
   785   001602                     
   786                           ;ECU_Layer/LCD/ecu_lcd.c: 96:     if(((void*)0) == _lcd_){
   787   001602  503A               	movf	lcd_4bit_send_char_data@_lcd_^0,w,c
   788   001604  A4D8               	btfss	status,2,c
   789   001606  EF07  F00B         	goto	u1121
   790   00160A  EF09  F00B         	goto	u1120
   791   00160E                     u1121:
   792   00160E  EF0D  F00B         	goto	l2121
   793   001612                     u1120:
   794   001612                     
   795                           ;ECU_Layer/LCD/ecu_lcd.c: 97:         ret = (Std_ReturnType)0x00;
   796   001612  0E00               	movlw	0
   797   001614  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
   798                           
   799                           ;ECU_Layer/LCD/ecu_lcd.c: 98:     }
   800   001616  EF2D  F00B         	goto	l2123
   801   00161A                     l2121:
   802                           
   803                           ;ECU_Layer/LCD/ecu_lcd.c: 100:         ret = gpio_pin_write_logic(&(_lcd_->lcd_rs), GPIO
      +                          _HIGH);
   804   00161A  C03A  F02F         	movff	lcd_4bit_send_char_data@_lcd_,gpio_pin_write_logic@_pin_config
   805   00161E  0E01               	movlw	1
   806   001620  6E30               	movwf	gpio_pin_write_logic@logic^0,c
   807   001622  ECA5  F008         	call	_gpio_pin_write_logic	;wreg free
   808   001626  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
   809                           
   810                           ;ECU_Layer/LCD/ecu_lcd.c: 101:         ret = lcd_send_4bits(_lcd_ , data>>4);
   811   001628  C03A  F037         	movff	lcd_4bit_send_char_data@_lcd_,lcd_send_4bits@_lcd_
   812   00162C  383B               	swapf	lcd_4bit_send_char_data@data^0,w,c
   813   00162E  0B0F               	andlw	15
   814   001630  6E38               	movwf	lcd_send_4bits@_data_command^0,c
   815   001632  EC5D  F00B         	call	_lcd_send_4bits	;wreg free
   816   001636  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
   817                           
   818                           ;ECU_Layer/LCD/ecu_lcd.c: 102:         ret = lcd_4bit_send_enable_signal(_lcd_);
   819   001638  C03A  F037         	movff	lcd_4bit_send_char_data@_lcd_,lcd_4bit_send_enable_signal@_lcd_
   820   00163C  ECE3  F00B         	call	_lcd_4bit_send_enable_signal	;wreg free
   821   001640  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
   822                           
   823                           ;ECU_Layer/LCD/ecu_lcd.c: 103:         ret = lcd_send_4bits(_lcd_ , data);
   824   001642  C03A  F037         	movff	lcd_4bit_send_char_data@_lcd_,lcd_send_4bits@_lcd_
   825   001646  C03B  F038         	movff	lcd_4bit_send_char_data@data,lcd_send_4bits@_data_command
   826   00164A  EC5D  F00B         	call	_lcd_send_4bits	;wreg free
   827   00164E  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
   828                           
   829                           ;ECU_Layer/LCD/ecu_lcd.c: 104:         ret = lcd_4bit_send_enable_signal(_lcd_);
   830   001650  C03A  F037         	movff	lcd_4bit_send_char_data@_lcd_,lcd_4bit_send_enable_signal@_lcd_
   831   001654  ECE3  F00B         	call	_lcd_4bit_send_enable_signal	;wreg free
   832   001658  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
   833   00165A                     l2123:
   834                           
   835                           ;ECU_Layer/LCD/ecu_lcd.c: 108:     return ret;
   836   00165A  503C               	movf	lcd_4bit_send_char_data@ret^0,w,c
   837   00165C  0012               	return		;funcret
   838   00165E                     __end_of_lcd_4bit_send_char_data:
   839                           	callstack 0
   840                           
   841 ;; *************** function _application_intialize *****************
   842 ;; Defined at:
   843 ;;		line 112 in file "application.c"
   844 ;; Parameters:    Size  Location     Type
   845 ;;		None
   846 ;; Auto vars:     Size  Location     Type
   847 ;;  ret             1    0        unsigned char 
   848 ;; Return value:  Size  Location     Type
   849 ;;                  1    wreg      void 
   850 ;; Registers used:
   851 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   852 ;; Tracked objects:
   853 ;;		On entry : 0/0
   854 ;;		On exit  : 0/0
   855 ;;		Unchanged: 0/0
   856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   861 ;;Total ram usage:        0 bytes
   862 ;; Hardware stack levels used: 1
   863 ;; Hardware stack levels required when called: 4
   864 ;; This function calls:
   865 ;;		_lcd_4bit_initialize
   866 ;;		_lcd_8bit_initialize
   867 ;; This function is called by:
   868 ;;		_main
   869 ;; This function uses a non-reentrant model
   870 ;;
   871                           
   872                           	psect	text4
   873   0017EA                     __ptext4:
   874                           	callstack 0
   875   0017EA                     _application_intialize:
   876                           	callstack 26
   877   0017EA  0E29               	movlw	low _lcd_1
   878   0017EC  6E3D               	movwf	lcd_4bit_initialize@_lcd_^0,c
   879   0017EE  ECA2  F009         	call	_lcd_4bit_initialize	;wreg free
   880   0017F2  0E1F               	movlw	low _lcd_2
   881   0017F4  6E3F               	movwf	lcd_8bit_initialize@_lcd_^0,c
   882   0017F6  EC2D  F009         	call	_lcd_8bit_initialize	;wreg free
   883   0017FA  0012               	return		;funcret
   884   0017FC                     __end_of_application_intialize:
   885                           	callstack 0
   886                           
   887 ;; *************** function _lcd_8bit_initialize *****************
   888 ;; Defined at:
   889 ;;		line 217 in file "ECU_Layer/LCD/ecu_lcd.c"
   890 ;; Parameters:    Size  Location     Type
   891 ;;  _lcd_           1   16[COMRAM] PTR const struct .
   892 ;;		 -> lcd_2(10), 
   893 ;; Auto vars:     Size  Location     Type
   894 ;;  ret             1   19[COMRAM] unsigned char 
   895 ;;  l_data_pins_    1   18[COMRAM] unsigned char 
   896 ;; Return value:  Size  Location     Type
   897 ;;                  1    wreg      unsigned char 
   898 ;; Registers used:
   899 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   905 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   906 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   907 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   908 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   909 ;;Total ram usage:        4 bytes
   910 ;; Hardware stack levels used: 1
   911 ;; Hardware stack levels required when called: 3
   912 ;; This function calls:
   913 ;;		_gpio_pin_intialize
   914 ;;		_lcd_8bit_send_command
   915 ;; This function is called by:
   916 ;;		_application_intialize
   917 ;; This function uses a non-reentrant model
   918 ;;
   919                           
   920                           	psect	text5
   921   00125A                     __ptext5:
   922                           	callstack 0
   923   00125A                     _lcd_8bit_initialize:
   924                           	callstack 26
   925   00125A                     
   926                           ;ECU_Layer/LCD/ecu_lcd.c: 219:     uint8 l_data_pins_counter = 0;
   927   00125A  0E00               	movlw	0
   928   00125C  6E41               	movwf	lcd_8bit_initialize@l_data_pins_counter^0,c
   929                           
   930                           ;ECU_Layer/LCD/ecu_lcd.c: 220:     if(((void*)0) == _lcd_){
   931   00125E  503F               	movf	lcd_8bit_initialize@_lcd_^0,w,c
   932   001260  A4D8               	btfss	status,2,c
   933   001262  EF35  F009         	goto	u1101
   934   001266  EF37  F009         	goto	u1100
   935   00126A                     u1101:
   936   00126A  EF3B  F009         	goto	l2077
   937   00126E                     u1100:
   938   00126E                     
   939                           ;ECU_Layer/LCD/ecu_lcd.c: 221:         ret = (Std_ReturnType)0x00;
   940   00126E  0E00               	movlw	0
   941   001270  6E42               	movwf	lcd_8bit_initialize@ret^0,c
   942                           
   943                           ;ECU_Layer/LCD/ecu_lcd.c: 222:     }
   944   001272  EFA0  F009         	goto	l2113
   945   001276                     l2077:
   946                           
   947                           ;ECU_Layer/LCD/ecu_lcd.c: 224:         ret = gpio_pin_intialize(&(_lcd_->lcd_rs));
   948   001276  C03F  F037         	movff	lcd_8bit_initialize@_lcd_,gpio_pin_intialize@_pin_config
   949   00127A  ECD2  F00A         	call	_gpio_pin_intialize	;wreg free
   950   00127E  6E42               	movwf	lcd_8bit_initialize@ret^0,c
   951                           
   952                           ;ECU_Layer/LCD/ecu_lcd.c: 225:         ret = gpio_pin_intialize(&(_lcd_->lcd_en));
   953   001280  283F               	incf	lcd_8bit_initialize@_lcd_^0,w,c
   954   001282  6E37               	movwf	gpio_pin_intialize@_pin_config^0,c
   955   001284  ECD2  F00A         	call	_gpio_pin_intialize	;wreg free
   956   001288  6E42               	movwf	lcd_8bit_initialize@ret^0,c
   957   00128A                     
   958                           ;ECU_Layer/LCD/ecu_lcd.c: 226:         for(l_data_pins_counter = 0 ; l_data_pins_counter
      +                          <8 ; l_data_pins_counter++){
   959   00128A  0E00               	movlw	0
   960   00128C  6E41               	movwf	lcd_8bit_initialize@l_data_pins_counter^0,c
   961   00128E                     l2085:
   962   00128E  503F               	movf	lcd_8bit_initialize@_lcd_^0,w,c
   963   001290  2441               	addwf	lcd_8bit_initialize@l_data_pins_counter^0,w,c
   964   001292  0F02               	addlw	2
   965   001294  6E37               	movwf	gpio_pin_intialize@_pin_config^0,c
   966   001296  ECD2  F00A         	call	_gpio_pin_intialize	;wreg free
   967   00129A                     
   968                           ;ECU_Layer/LCD/ecu_lcd.c: 228:         }
   969   00129A  2A41               	incf	lcd_8bit_initialize@l_data_pins_counter^0,f,c
   970   00129C  0E07               	movlw	7
   971   00129E  6441               	cpfsgt	lcd_8bit_initialize@l_data_pins_counter^0,c
   972   0012A0  EF54  F009         	goto	u1111
   973   0012A4  EF56  F009         	goto	u1110
   974   0012A8                     u1111:
   975   0012A8  EF47  F009         	goto	l2085
   976   0012AC                     u1110:
   977   0012AC                     
   978                           ;ECU_Layer/LCD/ecu_lcd.c: 229:         _delay((unsigned long)((20)*(4000000UL/4000.0)));
   979   0012AC  0E1A               	movlw	26
   980   0012AE  6E40               	movwf	??_lcd_8bit_initialize^0,c
   981   0012B0  0EF8               	movlw	248
   982   0012B2                     u1557:
   983   0012B2  2EE8               	decfsz	wreg,f,c
   984   0012B4  D7FE               	bra	u1557
   985   0012B6  2E40               	decfsz	??_lcd_8bit_initialize^0,f,c
   986   0012B8  D7FC               	bra	u1557
   987   0012BA  D000               	nop2	
   988   0012BC  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
   989   0012C0  0E38               	movlw	56
   990   0012C2  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   991   0012C4  EC63  F00A         	call	_lcd_8bit_send_command	;wreg free
   992   0012C8                     
   993                           ;ECU_Layer/LCD/ecu_lcd.c: 231:         _delay((unsigned long)((5)*(4000000UL/4000.0)));
   994   0012C8  0E07               	movlw	7
   995   0012CA  6E40               	movwf	??_lcd_8bit_initialize^0,c
   996   0012CC  0E7D               	movlw	125
   997   0012CE                     u1567:
   998   0012CE  2EE8               	decfsz	wreg,f,c
   999   0012D0  D7FE               	bra	u1567
  1000   0012D2  2E40               	decfsz	??_lcd_8bit_initialize^0,f,c
  1001   0012D4  D7FC               	bra	u1567
  1002   0012D6  0000               	nop	
  1003   0012D8  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
  1004   0012DC  0E38               	movlw	56
  1005   0012DE  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1006   0012E0  EC63  F00A         	call	_lcd_8bit_send_command	;wreg free
  1007   0012E4                     
  1008                           ;ECU_Layer/LCD/ecu_lcd.c: 233:         _delay((unsigned long)((150)*(4000000UL/4000000.0
      +                          )));
  1009   0012E4  0E32               	movlw	50
  1010   0012E6                     u1577:
  1011   0012E6  2EE8               	decfsz	wreg,f,c
  1012   0012E8  D7FE               	bra	u1577
  1013   0012EA  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
  1014   0012EE  0E38               	movlw	56
  1015   0012F0  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1016   0012F2  EC63  F00A         	call	_lcd_8bit_send_command	;wreg free
  1017   0012F6  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
  1018   0012FA  0E01               	movlw	1
  1019   0012FC  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1020   0012FE  EC63  F00A         	call	_lcd_8bit_send_command	;wreg free
  1021   001302  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
  1022   001306  0E02               	movlw	2
  1023   001308  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1024   00130A  EC63  F00A         	call	_lcd_8bit_send_command	;wreg free
  1025   00130E  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
  1026   001312  0E06               	movlw	6
  1027   001314  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1028   001316  EC63  F00A         	call	_lcd_8bit_send_command	;wreg free
  1029   00131A  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
  1030   00131E  0E0C               	movlw	12
  1031   001320  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1032   001322  EC63  F00A         	call	_lcd_8bit_send_command	;wreg free
  1033   001326  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
  1034   00132A  0E38               	movlw	56
  1035   00132C  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1036   00132E  EC63  F00A         	call	_lcd_8bit_send_command	;wreg free
  1037   001332                     
  1038                           ;ECU_Layer/LCD/ecu_lcd.c: 241:         ret = lcd_8bit_send_command(_lcd_, 0x80);
  1039   001332  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
  1040   001336  0E80               	movlw	128
  1041   001338  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1042   00133A  EC63  F00A         	call	_lcd_8bit_send_command	;wreg free
  1043   00133E  6E42               	movwf	lcd_8bit_initialize@ret^0,c
  1044   001340                     l2113:
  1045                           
  1046                           ;ECU_Layer/LCD/ecu_lcd.c: 245:     return ret;
  1047   001340  5042               	movf	lcd_8bit_initialize@ret^0,w,c
  1048   001342  0012               	return		;funcret
  1049   001344                     __end_of_lcd_8bit_initialize:
  1050                           	callstack 0
  1051                           
  1052 ;; *************** function _lcd_8bit_send_command *****************
  1053 ;; Defined at:
  1054 ;;		line 256 in file "ECU_Layer/LCD/ecu_lcd.c"
  1055 ;; Parameters:    Size  Location     Type
  1056 ;;  _lcd_           1   10[COMRAM] PTR const struct .
  1057 ;;		 -> lcd_2(10), 
  1058 ;;  command         1   11[COMRAM] unsigned char 
  1059 ;; Auto vars:     Size  Location     Type
  1060 ;;  l_pin_counte    1   15[COMRAM] unsigned char 
  1061 ;;  ret             1   14[COMRAM] unsigned char 
  1062 ;; Return value:  Size  Location     Type
  1063 ;;                  1    wreg      unsigned char 
  1064 ;; Registers used:
  1065 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1066 ;; Tracked objects:
  1067 ;;		On entry : 0/0
  1068 ;;		On exit  : 0/0
  1069 ;;		Unchanged: 0/0
  1070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1071 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1072 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1073 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1074 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1075 ;;Total ram usage:        6 bytes
  1076 ;; Hardware stack levels used: 1
  1077 ;; Hardware stack levels required when called: 2
  1078 ;; This function calls:
  1079 ;;		_gpio_pin_write_logic
  1080 ;;		_lcd_8bit_send_enable_signal
  1081 ;; This function is called by:
  1082 ;;		_lcd_8bit_initialize
  1083 ;;		_lcd_8bit_set_cursor
  1084 ;; This function uses a non-reentrant model
  1085 ;;
  1086                           
  1087                           	psect	text6
  1088   0014C6                     __ptext6:
  1089                           	callstack 0
  1090   0014C6                     _lcd_8bit_send_command:
  1091                           	callstack 26
  1092   0014C6                     
  1093                           ;ECU_Layer/LCD/ecu_lcd.c: 258:     uint8 l_pin_counter = 0;
  1094   0014C6  0E00               	movlw	0
  1095   0014C8  6E3E               	movwf	lcd_8bit_send_command@l_pin_counter^0,c
  1096                           
  1097                           ;ECU_Layer/LCD/ecu_lcd.c: 259:     if(((void*)0) == _lcd_){
  1098   0014CA  5039               	movf	lcd_8bit_send_command@_lcd_^0,w,c
  1099   0014CC  A4D8               	btfss	status,2,c
  1100   0014CE  EF6B  F00A         	goto	u1051
  1101   0014D2  EF6D  F00A         	goto	u1050
  1102   0014D6                     u1051:
  1103   0014D6  EF71  F00A         	goto	l2009
  1104   0014DA                     u1050:
  1105   0014DA                     
  1106                           ;ECU_Layer/LCD/ecu_lcd.c: 260:         ret = (Std_ReturnType)0x00;
  1107   0014DA  0E00               	movlw	0
  1108   0014DC  6E3D               	movwf	lcd_8bit_send_command@ret^0,c
  1109                           
  1110                           ;ECU_Layer/LCD/ecu_lcd.c: 261:     }
  1111   0014DE  EF9C  F00A         	goto	l2025
  1112   0014E2                     l2009:
  1113   0014E2  C039  F02F         	movff	lcd_8bit_send_command@_lcd_,gpio_pin_write_logic@_pin_config
  1114   0014E6  0E00               	movlw	0
  1115   0014E8  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1116   0014EA  ECA5  F008         	call	_gpio_pin_write_logic	;wreg free
  1117   0014EE                     
  1118                           ;ECU_Layer/LCD/ecu_lcd.c: 264:         for(l_pin_counter = 0 ; l_pin_counter < 8 ; l_pin
      +                          _counter++){
  1119   0014EE  0E00               	movlw	0
  1120   0014F0  6E3E               	movwf	lcd_8bit_send_command@l_pin_counter^0,c
  1121   0014F2                     l2017:
  1122   0014F2  5039               	movf	lcd_8bit_send_command@_lcd_^0,w,c
  1123   0014F4  243E               	addwf	lcd_8bit_send_command@l_pin_counter^0,w,c
  1124   0014F6  0F02               	addlw	2
  1125   0014F8  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1126   0014FA  C03E  F03B         	movff	lcd_8bit_send_command@l_pin_counter,??_lcd_8bit_send_command
  1127   0014FE  C03A  F03C         	movff	lcd_8bit_send_command@command,??_lcd_8bit_send_command+1
  1128   001502  2A3B               	incf	??_lcd_8bit_send_command^0,f,c
  1129   001504  EF86  F00A         	goto	u1064
  1130   001508                     u1065:
  1131   001508  90D8               	bcf	status,0,c
  1132   00150A  323C               	rrcf	(??_lcd_8bit_send_command+1)^0,f,c
  1133   00150C                     u1064:
  1134   00150C  2E3B               	decfsz	??_lcd_8bit_send_command^0,f,c
  1135   00150E  EF84  F00A         	goto	u1065
  1136   001512  503C               	movf	(??_lcd_8bit_send_command+1)^0,w,c
  1137   001514  0B01               	andlw	1
  1138   001516  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1139   001518  ECA5  F008         	call	_gpio_pin_write_logic	;wreg free
  1140   00151C                     
  1141                           ;ECU_Layer/LCD/ecu_lcd.c: 266:         }
  1142   00151C  2A3E               	incf	lcd_8bit_send_command@l_pin_counter^0,f,c
  1143   00151E  0E07               	movlw	7
  1144   001520  643E               	cpfsgt	lcd_8bit_send_command@l_pin_counter^0,c
  1145   001522  EF95  F00A         	goto	u1071
  1146   001526  EF97  F00A         	goto	u1070
  1147   00152A                     u1071:
  1148   00152A  EF79  F00A         	goto	l2017
  1149   00152E                     u1070:
  1150   00152E                     
  1151                           ;ECU_Layer/LCD/ecu_lcd.c: 267:         ret = lcd_8bit_send_enable_signal(_lcd_);
  1152   00152E  C039  F037         	movff	lcd_8bit_send_command@_lcd_,lcd_8bit_send_enable_signal@_lcd_
  1153   001532  ECD1  F00B         	call	_lcd_8bit_send_enable_signal	;wreg free
  1154   001536  6E3D               	movwf	lcd_8bit_send_command@ret^0,c
  1155   001538                     l2025:
  1156                           
  1157                           ;ECU_Layer/LCD/ecu_lcd.c: 271:     return ret;
  1158   001538  503D               	movf	lcd_8bit_send_command@ret^0,w,c
  1159   00153A  0012               	return		;funcret
  1160   00153C                     __end_of_lcd_8bit_send_command:
  1161                           	callstack 0
  1162                           
  1163 ;; *************** function _lcd_8bit_send_enable_signal *****************
  1164 ;; Defined at:
  1165 ;;		line 428 in file "ECU_Layer/LCD/ecu_lcd.c"
  1166 ;; Parameters:    Size  Location     Type
  1167 ;;  _lcd_           1    8[COMRAM] PTR const struct .
  1168 ;;		 -> lcd_2(10), 
  1169 ;; Auto vars:     Size  Location     Type
  1170 ;;  ret             1    9[COMRAM] unsigned char 
  1171 ;; Return value:  Size  Location     Type
  1172 ;;                  1    wreg      unsigned char 
  1173 ;; Registers used:
  1174 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1175 ;; Tracked objects:
  1176 ;;		On entry : 0/0
  1177 ;;		On exit  : 0/0
  1178 ;;		Unchanged: 0/0
  1179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1180 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1181 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1183 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1184 ;;Total ram usage:        2 bytes
  1185 ;; Hardware stack levels used: 1
  1186 ;; Hardware stack levels required when called: 1
  1187 ;; This function calls:
  1188 ;;		_gpio_pin_write_logic
  1189 ;; This function is called by:
  1190 ;;		_lcd_8bit_send_command
  1191 ;;		_lcd_8bit_send_char_data
  1192 ;; This function uses a non-reentrant model
  1193 ;;
  1194                           
  1195                           	psect	text7
  1196   0017A2                     __ptext7:
  1197                           	callstack 0
  1198   0017A2                     _lcd_8bit_send_enable_signal:
  1199                           	callstack 26
  1200   0017A2  2837               	incf	lcd_8bit_send_enable_signal@_lcd_^0,w,c
  1201   0017A4  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1202   0017A6  0E01               	movlw	1
  1203   0017A8  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1204   0017AA  ECA5  F008         	call	_gpio_pin_write_logic	;wreg free
  1205   0017AE                     
  1206                           ;ECU_Layer/LCD/ecu_lcd.c: 431:     _delay((unsigned long)((5)*(4000000UL/4000000.0)));
  1207   0017AE  D000               	nop2		;2 cycle nop
  1208   0017B0  D000               	nop2		;2 cycle nop
  1209   0017B2  0000               	nop	
  1210   0017B4                     
  1211                           ;ECU_Layer/LCD/ecu_lcd.c: 432:     ret = gpio_pin_write_logic(&(_lcd_->lcd_en), GPIO_LOW
      +                          );
  1212   0017B4  2837               	incf	lcd_8bit_send_enable_signal@_lcd_^0,w,c
  1213   0017B6  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1214   0017B8  0E00               	movlw	0
  1215   0017BA  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1216   0017BC  ECA5  F008         	call	_gpio_pin_write_logic	;wreg free
  1217   0017C0  6E38               	movwf	lcd_8bit_send_enable_signal@ret^0,c
  1218                           
  1219                           ;ECU_Layer/LCD/ecu_lcd.c: 433:     return ret;
  1220   0017C2  5038               	movf	lcd_8bit_send_enable_signal@ret^0,w,c
  1221   0017C4  0012               	return		;funcret
  1222   0017C6                     __end_of_lcd_8bit_send_enable_signal:
  1223                           	callstack 0
  1224                           
  1225 ;; *************** function _lcd_4bit_initialize *****************
  1226 ;; Defined at:
  1227 ;;		line 28 in file "ECU_Layer/LCD/ecu_lcd.c"
  1228 ;; Parameters:    Size  Location     Type
  1229 ;;  _lcd_           1   14[COMRAM] PTR const struct .
  1230 ;;		 -> lcd_1(6), 
  1231 ;; Auto vars:     Size  Location     Type
  1232 ;;  ret             1   17[COMRAM] unsigned char 
  1233 ;;  l_data_pins_    1   16[COMRAM] unsigned char 
  1234 ;; Return value:  Size  Location     Type
  1235 ;;                  1    wreg      unsigned char 
  1236 ;; Registers used:
  1237 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1238 ;; Tracked objects:
  1239 ;;		On entry : 0/0
  1240 ;;		On exit  : 0/0
  1241 ;;		Unchanged: 0/0
  1242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1243 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1244 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1245 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1246 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1247 ;;Total ram usage:        4 bytes
  1248 ;; Hardware stack levels used: 1
  1249 ;; Hardware stack levels required when called: 3
  1250 ;; This function calls:
  1251 ;;		_gpio_pin_intialize
  1252 ;;		_lcd_4bit_send_command
  1253 ;; This function is called by:
  1254 ;;		_application_intialize
  1255 ;; This function uses a non-reentrant model
  1256 ;;
  1257                           
  1258                           	psect	text8
  1259   001344                     __ptext8:
  1260                           	callstack 0
  1261   001344                     _lcd_4bit_initialize:
  1262                           	callstack 26
  1263   001344                     
  1264                           ;ECU_Layer/LCD/ecu_lcd.c: 30:     uint8 l_data_pins_counter = 0;
  1265   001344  0E00               	movlw	0
  1266   001346  6E3F               	movwf	lcd_4bit_initialize@l_data_pins_counter^0,c
  1267                           
  1268                           ;ECU_Layer/LCD/ecu_lcd.c: 31:     if(((void*)0) == _lcd_){
  1269   001348  503D               	movf	lcd_4bit_initialize@_lcd_^0,w,c
  1270   00134A  A4D8               	btfss	status,2,c
  1271   00134C  EFAA  F009         	goto	u1081
  1272   001350  EFAC  F009         	goto	u1080
  1273   001354                     u1081:
  1274   001354  EFB0  F009         	goto	l2033
  1275   001358                     u1080:
  1276   001358                     
  1277                           ;ECU_Layer/LCD/ecu_lcd.c: 32:         ret = (Std_ReturnType)0x00;
  1278   001358  0E00               	movlw	0
  1279   00135A  6E40               	movwf	lcd_4bit_initialize@ret^0,c
  1280                           
  1281                           ;ECU_Layer/LCD/ecu_lcd.c: 33:     }
  1282   00135C  EF15  F00A         	goto	l2069
  1283   001360                     l2033:
  1284                           
  1285                           ;ECU_Layer/LCD/ecu_lcd.c: 35:         ret = gpio_pin_intialize(&(_lcd_->lcd_rs));
  1286   001360  C03D  F037         	movff	lcd_4bit_initialize@_lcd_,gpio_pin_intialize@_pin_config
  1287   001364  ECD2  F00A         	call	_gpio_pin_intialize	;wreg free
  1288   001368  6E40               	movwf	lcd_4bit_initialize@ret^0,c
  1289                           
  1290                           ;ECU_Layer/LCD/ecu_lcd.c: 36:         ret = gpio_pin_intialize(&(_lcd_->lcd_en));
  1291   00136A  283D               	incf	lcd_4bit_initialize@_lcd_^0,w,c
  1292   00136C  6E37               	movwf	gpio_pin_intialize@_pin_config^0,c
  1293   00136E  ECD2  F00A         	call	_gpio_pin_intialize	;wreg free
  1294   001372  6E40               	movwf	lcd_4bit_initialize@ret^0,c
  1295   001374                     
  1296                           ;ECU_Layer/LCD/ecu_lcd.c: 37:         for(l_data_pins_counter = 0 ; l_data_pins_counter<
      +                          4 ; l_data_pins_counter++){
  1297   001374  0E00               	movlw	0
  1298   001376  6E3F               	movwf	lcd_4bit_initialize@l_data_pins_counter^0,c
  1299   001378                     l2041:
  1300   001378  503D               	movf	lcd_4bit_initialize@_lcd_^0,w,c
  1301   00137A  243F               	addwf	lcd_4bit_initialize@l_data_pins_counter^0,w,c
  1302   00137C  0F02               	addlw	2
  1303   00137E  6E37               	movwf	gpio_pin_intialize@_pin_config^0,c
  1304   001380  ECD2  F00A         	call	_gpio_pin_intialize	;wreg free
  1305   001384                     
  1306                           ;ECU_Layer/LCD/ecu_lcd.c: 39:         }
  1307   001384  2A3F               	incf	lcd_4bit_initialize@l_data_pins_counter^0,f,c
  1308   001386  0E03               	movlw	3
  1309   001388  643F               	cpfsgt	lcd_4bit_initialize@l_data_pins_counter^0,c
  1310   00138A  EFC9  F009         	goto	u1091
  1311   00138E  EFCB  F009         	goto	u1090
  1312   001392                     u1091:
  1313   001392  EFBC  F009         	goto	l2041
  1314   001396                     u1090:
  1315   001396                     
  1316                           ;ECU_Layer/LCD/ecu_lcd.c: 41:         _delay((unsigned long)((20)*(4000000UL/4000.0)));
  1317   001396  0E1A               	movlw	26
  1318   001398  6E3E               	movwf	??_lcd_4bit_initialize^0,c
  1319   00139A  0EF8               	movlw	248
  1320   00139C                     u1587:
  1321   00139C  2EE8               	decfsz	wreg,f,c
  1322   00139E  D7FE               	bra	u1587
  1323   0013A0  2E3E               	decfsz	??_lcd_4bit_initialize^0,f,c
  1324   0013A2  D7FC               	bra	u1587
  1325   0013A4  D000               	nop2	
  1326   0013A6  C03D  F03A         	movff	lcd_4bit_initialize@_lcd_,lcd_4bit_send_command@_lcd_
  1327   0013AA  0E38               	movlw	56
  1328   0013AC  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1329   0013AE  EC2F  F00B         	call	_lcd_4bit_send_command	;wreg free
  1330   0013B2                     
  1331                           ;ECU_Layer/LCD/ecu_lcd.c: 43:         _delay((unsigned long)((5)*(4000000UL/4000.0)));
  1332   0013B2  0E07               	movlw	7
  1333   0013B4  6E3E               	movwf	??_lcd_4bit_initialize^0,c
  1334   0013B6  0E7D               	movlw	125
  1335   0013B8                     u1597:
  1336   0013B8  2EE8               	decfsz	wreg,f,c
  1337   0013BA  D7FE               	bra	u1597
  1338   0013BC  2E3E               	decfsz	??_lcd_4bit_initialize^0,f,c
  1339   0013BE  D7FC               	bra	u1597
  1340   0013C0  0000               	nop	
  1341   0013C2  C03D  F03A         	movff	lcd_4bit_initialize@_lcd_,lcd_4bit_send_command@_lcd_
  1342   0013C6  0E38               	movlw	56
  1343   0013C8  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1344   0013CA  EC2F  F00B         	call	_lcd_4bit_send_command	;wreg free
  1345   0013CE                     
  1346                           ;ECU_Layer/LCD/ecu_lcd.c: 45:         _delay((unsigned long)((150)*(4000000UL/4000000.0)
      +                          ));
  1347   0013CE  0E32               	movlw	50
  1348   0013D0                     u1607:
  1349   0013D0  2EE8               	decfsz	wreg,f,c
  1350   0013D2  D7FE               	bra	u1607
  1351   0013D4  C03D  F03A         	movff	lcd_4bit_initialize@_lcd_,lcd_4bit_send_command@_lcd_
  1352   0013D8  0E38               	movlw	56
  1353   0013DA  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1354   0013DC  EC2F  F00B         	call	_lcd_4bit_send_command	;wreg free
  1355   0013E0  C03D  F03A         	movff	lcd_4bit_initialize@_lcd_,lcd_4bit_send_command@_lcd_
  1356   0013E4  0E01               	movlw	1
  1357   0013E6  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1358   0013E8  EC2F  F00B         	call	_lcd_4bit_send_command	;wreg free
  1359   0013EC  C03D  F03A         	movff	lcd_4bit_initialize@_lcd_,lcd_4bit_send_command@_lcd_
  1360   0013F0  0E02               	movlw	2
  1361   0013F2  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1362   0013F4  EC2F  F00B         	call	_lcd_4bit_send_command	;wreg free
  1363   0013F8  C03D  F03A         	movff	lcd_4bit_initialize@_lcd_,lcd_4bit_send_command@_lcd_
  1364   0013FC  0E06               	movlw	6
  1365   0013FE  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1366   001400  EC2F  F00B         	call	_lcd_4bit_send_command	;wreg free
  1367   001404  C03D  F03A         	movff	lcd_4bit_initialize@_lcd_,lcd_4bit_send_command@_lcd_
  1368   001408  0E0C               	movlw	12
  1369   00140A  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1370   00140C  EC2F  F00B         	call	_lcd_4bit_send_command	;wreg free
  1371   001410  C03D  F03A         	movff	lcd_4bit_initialize@_lcd_,lcd_4bit_send_command@_lcd_
  1372   001414  0E28               	movlw	40
  1373   001416  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1374   001418  EC2F  F00B         	call	_lcd_4bit_send_command	;wreg free
  1375   00141C                     
  1376                           ;ECU_Layer/LCD/ecu_lcd.c: 53:         ret = lcd_4bit_send_command(_lcd_, 0x80);
  1377   00141C  C03D  F03A         	movff	lcd_4bit_initialize@_lcd_,lcd_4bit_send_command@_lcd_
  1378   001420  0E80               	movlw	128
  1379   001422  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1380   001424  EC2F  F00B         	call	_lcd_4bit_send_command	;wreg free
  1381   001428  6E40               	movwf	lcd_4bit_initialize@ret^0,c
  1382   00142A                     l2069:
  1383                           
  1384                           ;ECU_Layer/LCD/ecu_lcd.c: 58:     return ret;
  1385   00142A  5040               	movf	lcd_4bit_initialize@ret^0,w,c
  1386   00142C  0012               	return		;funcret
  1387   00142E                     __end_of_lcd_4bit_initialize:
  1388                           	callstack 0
  1389                           
  1390 ;; *************** function _lcd_4bit_send_command *****************
  1391 ;; Defined at:
  1392 ;;		line 69 in file "ECU_Layer/LCD/ecu_lcd.c"
  1393 ;; Parameters:    Size  Location     Type
  1394 ;;  _lcd_           1   11[COMRAM] PTR const struct .
  1395 ;;		 -> lcd_1(6), 
  1396 ;;  command         1   12[COMRAM] unsigned char 
  1397 ;; Auto vars:     Size  Location     Type
  1398 ;;  ret             1   13[COMRAM] unsigned char 
  1399 ;; Return value:  Size  Location     Type
  1400 ;;                  1    wreg      unsigned char 
  1401 ;; Registers used:
  1402 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1403 ;; Tracked objects:
  1404 ;;		On entry : 0/0
  1405 ;;		On exit  : 0/0
  1406 ;;		Unchanged: 0/0
  1407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1408 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1409 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1411 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1412 ;;Total ram usage:        3 bytes
  1413 ;; Hardware stack levels used: 1
  1414 ;; Hardware stack levels required when called: 2
  1415 ;; This function calls:
  1416 ;;		_gpio_pin_write_logic
  1417 ;;		_lcd_4bit_send_enable_signal
  1418 ;;		_lcd_send_4bits
  1419 ;; This function is called by:
  1420 ;;		_lcd_4bit_initialize
  1421 ;;		_lcd_4bit_set_cursor
  1422 ;; This function uses a non-reentrant model
  1423 ;;
  1424                           
  1425                           	psect	text9
  1426   00165E                     __ptext9:
  1427                           	callstack 0
  1428   00165E                     _lcd_4bit_send_command:
  1429                           	callstack 26
  1430   00165E                     
  1431                           ;ECU_Layer/LCD/ecu_lcd.c: 71:     if(((void*)0) == _lcd_){
  1432   00165E  503A               	movf	lcd_4bit_send_command@_lcd_^0,w,c
  1433   001660  A4D8               	btfss	status,2,c
  1434   001662  EF35  F00B         	goto	u1041
  1435   001666  EF37  F00B         	goto	u1040
  1436   00166A                     u1041:
  1437   00166A  EF3B  F00B         	goto	l1999
  1438   00166E                     u1040:
  1439   00166E                     
  1440                           ;ECU_Layer/LCD/ecu_lcd.c: 72:         ret = (Std_ReturnType)0x00;
  1441   00166E  0E00               	movlw	0
  1442   001670  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  1443                           
  1444                           ;ECU_Layer/LCD/ecu_lcd.c: 73:     }
  1445   001672  EF5B  F00B         	goto	l2001
  1446   001676                     l1999:
  1447                           
  1448                           ;ECU_Layer/LCD/ecu_lcd.c: 75:         ret = gpio_pin_write_logic(&(_lcd_->lcd_rs), GPIO_
      +                          LOW);
  1449   001676  C03A  F02F         	movff	lcd_4bit_send_command@_lcd_,gpio_pin_write_logic@_pin_config
  1450   00167A  0E00               	movlw	0
  1451   00167C  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1452   00167E  ECA5  F008         	call	_gpio_pin_write_logic	;wreg free
  1453   001682  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  1454                           
  1455                           ;ECU_Layer/LCD/ecu_lcd.c: 76:         ret = lcd_send_4bits(_lcd_ , command>>4);
  1456   001684  C03A  F037         	movff	lcd_4bit_send_command@_lcd_,lcd_send_4bits@_lcd_
  1457   001688  383B               	swapf	lcd_4bit_send_command@command^0,w,c
  1458   00168A  0B0F               	andlw	15
  1459   00168C  6E38               	movwf	lcd_send_4bits@_data_command^0,c
  1460   00168E  EC5D  F00B         	call	_lcd_send_4bits	;wreg free
  1461   001692  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  1462                           
  1463                           ;ECU_Layer/LCD/ecu_lcd.c: 77:         ret = lcd_4bit_send_enable_signal(_lcd_);
  1464   001694  C03A  F037         	movff	lcd_4bit_send_command@_lcd_,lcd_4bit_send_enable_signal@_lcd_
  1465   001698  ECE3  F00B         	call	_lcd_4bit_send_enable_signal	;wreg free
  1466   00169C  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  1467                           
  1468                           ;ECU_Layer/LCD/ecu_lcd.c: 78:         ret = lcd_send_4bits(_lcd_ , command);
  1469   00169E  C03A  F037         	movff	lcd_4bit_send_command@_lcd_,lcd_send_4bits@_lcd_
  1470   0016A2  C03B  F038         	movff	lcd_4bit_send_command@command,lcd_send_4bits@_data_command
  1471   0016A6  EC5D  F00B         	call	_lcd_send_4bits	;wreg free
  1472   0016AA  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  1473                           
  1474                           ;ECU_Layer/LCD/ecu_lcd.c: 79:         ret = lcd_4bit_send_enable_signal(_lcd_);
  1475   0016AC  C03A  F037         	movff	lcd_4bit_send_command@_lcd_,lcd_4bit_send_enable_signal@_lcd_
  1476   0016B0  ECE3  F00B         	call	_lcd_4bit_send_enable_signal	;wreg free
  1477   0016B4  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  1478   0016B6                     l2001:
  1479                           
  1480                           ;ECU_Layer/LCD/ecu_lcd.c: 83:     return ret;
  1481   0016B6  503C               	movf	lcd_4bit_send_command@ret^0,w,c
  1482   0016B8  0012               	return		;funcret
  1483   0016BA                     __end_of_lcd_4bit_send_command:
  1484                           	callstack 0
  1485                           
  1486 ;; *************** function _lcd_send_4bits *****************
  1487 ;; Defined at:
  1488 ;;		line 409 in file "ECU_Layer/LCD/ecu_lcd.c"
  1489 ;; Parameters:    Size  Location     Type
  1490 ;;  _lcd_           1    8[COMRAM] PTR const struct .
  1491 ;;		 -> lcd_1(6), 
  1492 ;;  _data_comman    1    9[COMRAM] unsigned char 
  1493 ;; Auto vars:     Size  Location     Type
  1494 ;;  ret             1   10[COMRAM] unsigned char 
  1495 ;; Return value:  Size  Location     Type
  1496 ;;                  1    wreg      unsigned char 
  1497 ;; Registers used:
  1498 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1499 ;; Tracked objects:
  1500 ;;		On entry : 0/0
  1501 ;;		On exit  : 0/0
  1502 ;;		Unchanged: 0/0
  1503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1504 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1505 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1507 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1508 ;;Total ram usage:        3 bytes
  1509 ;; Hardware stack levels used: 1
  1510 ;; Hardware stack levels required when called: 1
  1511 ;; This function calls:
  1512 ;;		_gpio_pin_write_logic
  1513 ;; This function is called by:
  1514 ;;		_lcd_4bit_send_command
  1515 ;;		_lcd_4bit_send_char_data
  1516 ;; This function uses a non-reentrant model
  1517 ;;
  1518                           
  1519                           	psect	text10
  1520   0016BA                     __ptext10:
  1521                           	callstack 0
  1522   0016BA                     _lcd_send_4bits:
  1523                           	callstack 26
  1524   0016BA  5037               	movf	lcd_send_4bits@_lcd_^0,w,c
  1525   0016BC  0F02               	addlw	2
  1526   0016BE  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1527   0016C0  5038               	movf	lcd_send_4bits@_data_command^0,w,c
  1528   0016C2  0B01               	andlw	1
  1529   0016C4  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1530   0016C6  ECA5  F008         	call	_gpio_pin_write_logic	;wreg free
  1531   0016CA  5037               	movf	lcd_send_4bits@_lcd_^0,w,c
  1532   0016CC  0F03               	addlw	3
  1533   0016CE  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1534   0016D0  90D8               	bcf	status,0,c
  1535   0016D2  3038               	rrcf	lcd_send_4bits@_data_command^0,w,c
  1536   0016D4  0B01               	andlw	1
  1537   0016D6  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1538   0016D8  ECA5  F008         	call	_gpio_pin_write_logic	;wreg free
  1539   0016DC  5037               	movf	lcd_send_4bits@_lcd_^0,w,c
  1540   0016DE  0F04               	addlw	4
  1541   0016E0  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1542   0016E2  4038               	rrncf	lcd_send_4bits@_data_command^0,w,c
  1543   0016E4  42E8               	rrncf	wreg,f,c
  1544   0016E6  0B3F               	andlw	63
  1545   0016E8  0B01               	andlw	1
  1546   0016EA  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1547   0016EC  ECA5  F008         	call	_gpio_pin_write_logic	;wreg free
  1548   0016F0                     
  1549                           ;ECU_Layer/LCD/ecu_lcd.c: 414:     ret = gpio_pin_write_logic(&(_lcd_->lcd_data[3]), (_d
      +                          ata_command >> 3) & (uint8)0x01);
  1550   0016F0  5037               	movf	lcd_send_4bits@_lcd_^0,w,c
  1551   0016F2  0F05               	addlw	5
  1552   0016F4  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1553   0016F6  3838               	swapf	lcd_send_4bits@_data_command^0,w,c
  1554   0016F8  46E8               	rlncf	wreg,f,c
  1555   0016FA  0B1F               	andlw	31
  1556   0016FC  0B01               	andlw	1
  1557   0016FE  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1558   001700  ECA5  F008         	call	_gpio_pin_write_logic	;wreg free
  1559   001704  6E39               	movwf	lcd_send_4bits@ret^0,c
  1560                           
  1561                           ;ECU_Layer/LCD/ecu_lcd.c: 416:     return ret;
  1562   001706  5039               	movf	lcd_send_4bits@ret^0,w,c
  1563   001708  0012               	return		;funcret
  1564   00170A                     __end_of_lcd_send_4bits:
  1565                           	callstack 0
  1566                           
  1567 ;; *************** function _lcd_4bit_send_enable_signal *****************
  1568 ;; Defined at:
  1569 ;;		line 420 in file "ECU_Layer/LCD/ecu_lcd.c"
  1570 ;; Parameters:    Size  Location     Type
  1571 ;;  _lcd_           1    8[COMRAM] PTR const struct .
  1572 ;;		 -> lcd_1(6), 
  1573 ;; Auto vars:     Size  Location     Type
  1574 ;;  ret             1    9[COMRAM] unsigned char 
  1575 ;; Return value:  Size  Location     Type
  1576 ;;                  1    wreg      unsigned char 
  1577 ;; Registers used:
  1578 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1579 ;; Tracked objects:
  1580 ;;		On entry : 0/0
  1581 ;;		On exit  : 0/0
  1582 ;;		Unchanged: 0/0
  1583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1584 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1585 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1587 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1588 ;;Total ram usage:        2 bytes
  1589 ;; Hardware stack levels used: 1
  1590 ;; Hardware stack levels required when called: 1
  1591 ;; This function calls:
  1592 ;;		_gpio_pin_write_logic
  1593 ;; This function is called by:
  1594 ;;		_lcd_4bit_send_command
  1595 ;;		_lcd_4bit_send_char_data
  1596 ;; This function uses a non-reentrant model
  1597 ;;
  1598                           
  1599                           	psect	text11
  1600   0017C6                     __ptext11:
  1601                           	callstack 0
  1602   0017C6                     _lcd_4bit_send_enable_signal:
  1603                           	callstack 26
  1604   0017C6  2837               	incf	lcd_4bit_send_enable_signal@_lcd_^0,w,c
  1605   0017C8  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1606   0017CA  0E01               	movlw	1
  1607   0017CC  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1608   0017CE  ECA5  F008         	call	_gpio_pin_write_logic	;wreg free
  1609   0017D2                     
  1610                           ;ECU_Layer/LCD/ecu_lcd.c: 423:     _delay((unsigned long)((5)*(4000000UL/4000000.0)));
  1611   0017D2  D000               	nop2		;2 cycle nop
  1612   0017D4  D000               	nop2		;2 cycle nop
  1613   0017D6  0000               	nop	
  1614   0017D8                     
  1615                           ;ECU_Layer/LCD/ecu_lcd.c: 424:     ret = gpio_pin_write_logic(&(_lcd_->lcd_en), GPIO_LOW
      +                          );
  1616   0017D8  2837               	incf	lcd_4bit_send_enable_signal@_lcd_^0,w,c
  1617   0017DA  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1618   0017DC  0E00               	movlw	0
  1619   0017DE  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1620   0017E0  ECA5  F008         	call	_gpio_pin_write_logic	;wreg free
  1621   0017E4  6E38               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  1622                           
  1623                           ;ECU_Layer/LCD/ecu_lcd.c: 425:     return ret;
  1624   0017E6  5038               	movf	lcd_4bit_send_enable_signal@ret^0,w,c
  1625   0017E8  0012               	return		;funcret
  1626   0017EA                     __end_of_lcd_4bit_send_enable_signal:
  1627                           	callstack 0
  1628                           
  1629 ;; *************** function _gpio_pin_intialize *****************
  1630 ;; Defined at:
  1631 ;;		line 54 in file "MCAL_Layer/GPIO/hel_gpio.c"
  1632 ;; Parameters:    Size  Location     Type
  1633 ;;  _pin_config     1    8[COMRAM] PTR const struct .
  1634 ;;		 -> lcd_2$lcd_data(8), lcd_2(10), lcd_1$lcd_data(4), lcd_1(6), 
  1635 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  1636 ;; Auto vars:     Size  Location     Type
  1637 ;;  ret             1   10[COMRAM] unsigned char 
  1638 ;; Return value:  Size  Location     Type
  1639 ;;                  1    wreg      unsigned char 
  1640 ;; Registers used:
  1641 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1642 ;; Tracked objects:
  1643 ;;		On entry : 0/0
  1644 ;;		On exit  : 0/0
  1645 ;;		Unchanged: 0/0
  1646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1647 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1648 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1649 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1650 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1651 ;;Total ram usage:        3 bytes
  1652 ;; Hardware stack levels used: 1
  1653 ;; Hardware stack levels required when called: 1
  1654 ;; This function calls:
  1655 ;;		_gpio_pin_direction_intialize
  1656 ;;		_gpio_pin_write_logic
  1657 ;; This function is called by:
  1658 ;;		_lcd_4bit_initialize
  1659 ;;		_lcd_8bit_initialize
  1660 ;;		_seven_segment_intialize
  1661 ;;		_dc_motor_initialize
  1662 ;;		_keypad_initialize
  1663 ;;		_led_initialize
  1664 ;;		_relay_initialize
  1665 ;; This function uses a non-reentrant model
  1666 ;;
  1667                           
  1668                           	psect	text12
  1669   0015A4                     __ptext12:
  1670                           	callstack 0
  1671   0015A4                     _gpio_pin_intialize:
  1672                           	callstack 27
  1673   0015A4                     
  1674                           ;MCAL_Layer/GPIO/hel_gpio.c: 56:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1){
  1675   0015A4  5037               	movf	gpio_pin_intialize@_pin_config^0,w,c
  1676   0015A6  B4D8               	btfsc	status,2,c
  1677   0015A8  EFD8  F00A         	goto	u1021
  1678   0015AC  EFDA  F00A         	goto	u1020
  1679   0015B0                     u1021:
  1680   0015B0  EFEA  F00A         	goto	l1987
  1681   0015B4                     u1020:
  1682   0015B4  5037               	movf	gpio_pin_intialize@_pin_config^0,w,c
  1683   0015B6  6ED9               	movwf	fsr2l,c
  1684   0015B8  6ADA               	clrf	fsr2h,c
  1685   0015BA  30DF               	rrcf	223,w,c
  1686   0015BC  32E8               	rrcf	wreg,f,c
  1687   0015BE  32E8               	rrcf	wreg,f,c
  1688   0015C0  0B07               	andlw	7
  1689   0015C2  6E38               	movwf	??_gpio_pin_intialize^0,c
  1690   0015C4  0E07               	movlw	7
  1691   0015C6  6438               	cpfsgt	??_gpio_pin_intialize^0,c
  1692   0015C8  EFE8  F00A         	goto	u1031
  1693   0015CC  EFEA  F00A         	goto	u1030
  1694   0015D0                     u1031:
  1695   0015D0  EFEE  F00A         	goto	l1989
  1696   0015D4                     u1030:
  1697   0015D4                     l1987:
  1698                           
  1699                           ;MCAL_Layer/GPIO/hel_gpio.c: 57:         ret = (Std_ReturnType)0x00;
  1700   0015D4  0E00               	movlw	0
  1701   0015D6  6E39               	movwf	gpio_pin_intialize@ret^0,c
  1702                           
  1703                           ;MCAL_Layer/GPIO/hel_gpio.c: 58:     }
  1704   0015D8  EFFF  F00A         	goto	l1991
  1705   0015DC                     l1989:
  1706                           
  1707                           ;MCAL_Layer/GPIO/hel_gpio.c: 60:         ret = gpio_pin_direction_intialize(_pin_config)
      +                          ;
  1708   0015DC  C037  F02F         	movff	gpio_pin_intialize@_pin_config,gpio_pin_direction_intialize@_pin_config
  1709   0015E0  EC12  F008         	call	_gpio_pin_direction_intialize	;wreg free
  1710   0015E4  6E39               	movwf	gpio_pin_intialize@ret^0,c
  1711                           
  1712                           ;MCAL_Layer/GPIO/hel_gpio.c: 61:         ret = gpio_pin_write_logic(_pin_config, _pin_co
      +                          nfig->logic);
  1713   0015E6  C037  F02F         	movff	gpio_pin_intialize@_pin_config,gpio_pin_write_logic@_pin_config
  1714   0015EA  5037               	movf	gpio_pin_intialize@_pin_config^0,w,c
  1715   0015EC  6ED9               	movwf	fsr2l,c
  1716   0015EE  6ADA               	clrf	fsr2h,c
  1717   0015F0  0E00               	movlw	0
  1718   0015F2  BEDF               	btfsc	indf2,7,c
  1719   0015F4  0E01               	movlw	1
  1720   0015F6  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1721   0015F8  ECA5  F008         	call	_gpio_pin_write_logic	;wreg free
  1722   0015FC  6E39               	movwf	gpio_pin_intialize@ret^0,c
  1723   0015FE                     l1991:
  1724                           
  1725                           ;MCAL_Layer/GPIO/hel_gpio.c: 63:     return ret;
  1726   0015FE  5039               	movf	gpio_pin_intialize@ret^0,w,c
  1727   001600  0012               	return		;funcret
  1728   001602                     __end_of_gpio_pin_intialize:
  1729                           	callstack 0
  1730                           
  1731 ;; *************** function _gpio_pin_write_logic *****************
  1732 ;; Defined at:
  1733 ;;		line 97 in file "MCAL_Layer/GPIO/hel_gpio.c"
  1734 ;; Parameters:    Size  Location     Type
  1735 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  1736 ;;		 -> lcd_2$lcd_data(8), lcd_2(10), lcd_1$lcd_data(4), lcd_1(6), 
  1737 ;;		 -> relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), relay_initialize@pin_obj(1), led_turn_off@pin_obj(1), 
  1738 ;;		 -> led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
  1739 ;;  logic           1    1[COMRAM] enum E2811
  1740 ;; Auto vars:     Size  Location     Type
  1741 ;;  ret             1    7[COMRAM] unsigned char 
  1742 ;; Return value:  Size  Location     Type
  1743 ;;                  1    wreg      unsigned char 
  1744 ;; Registers used:
  1745 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1746 ;; Tracked objects:
  1747 ;;		On entry : 0/0
  1748 ;;		On exit  : 0/0
  1749 ;;		Unchanged: 0/0
  1750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1751 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1752 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1753 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1754 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1755 ;;Total ram usage:        8 bytes
  1756 ;; Hardware stack levels used: 1
  1757 ;; This function calls:
  1758 ;;		Nothing
  1759 ;; This function is called by:
  1760 ;;		_gpio_pin_intialize
  1761 ;;		_lcd_4bit_send_command
  1762 ;;		_lcd_4bit_send_char_data
  1763 ;;		_lcd_8bit_send_command
  1764 ;;		_lcd_send_4bits
  1765 ;;		_lcd_4bit_send_enable_signal
  1766 ;;		_lcd_8bit_send_enable_signal
  1767 ;;		_seven_segment_write_number
  1768 ;;		_dc_motor_move_right
  1769 ;;		_dc_motor_move_left
  1770 ;;		_dc_motor_stop
  1771 ;;		_keypad_get_value
  1772 ;;		_led_turn_on
  1773 ;;		_led_turn_off
  1774 ;;		_relay_turn_on
  1775 ;;		_relay_turn_off
  1776 ;;		_lcd_8bit_send_char_data
  1777 ;; This function uses a non-reentrant model
  1778 ;;
  1779                           
  1780                           	psect	text13
  1781   00114A                     __ptext13:
  1782                           	callstack 0
  1783   00114A                     _gpio_pin_write_logic:
  1784                           	callstack 26
  1785   00114A                     
  1786                           ;MCAL_Layer/GPIO/hel_gpio.c: 98:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1787   00114A  0E01               	movlw	1
  1788   00114C  6E36               	movwf	gpio_pin_write_logic@ret^0,c
  1789                           
  1790                           ;MCAL_Layer/GPIO/hel_gpio.c: 99:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1){
  1791   00114E  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1792   001150  B4D8               	btfsc	status,2,c
  1793   001152  EFAD  F008         	goto	u921
  1794   001156  EFAF  F008         	goto	u920
  1795   00115A                     u921:
  1796   00115A  EFBF  F008         	goto	l1911
  1797   00115E                     u920:
  1798   00115E  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1799   001160  6ED9               	movwf	fsr2l,c
  1800   001162  6ADA               	clrf	fsr2h,c
  1801   001164  30DF               	rrcf	223,w,c
  1802   001166  32E8               	rrcf	wreg,f,c
  1803   001168  32E8               	rrcf	wreg,f,c
  1804   00116A  0B07               	andlw	7
  1805   00116C  6E31               	movwf	??_gpio_pin_write_logic^0,c
  1806   00116E  0E07               	movlw	7
  1807   001170  6431               	cpfsgt	??_gpio_pin_write_logic^0,c
  1808   001172  EFBD  F008         	goto	u931
  1809   001176  EFBF  F008         	goto	u930
  1810   00117A                     u931:
  1811   00117A  EF16  F009         	goto	l1919
  1812   00117E                     u930:
  1813   00117E                     l1911:
  1814                           
  1815                           ;MCAL_Layer/GPIO/hel_gpio.c: 100:         ret = (Std_ReturnType)0x00;
  1816   00117E  0E00               	movlw	0
  1817   001180  6E36               	movwf	gpio_pin_write_logic@ret^0,c
  1818                           
  1819                           ;MCAL_Layer/GPIO/hel_gpio.c: 101:     }
  1820   001182  EF2B  F009         	goto	l1921
  1821   001186                     l1913:
  1822                           
  1823                           ;MCAL_Layer/GPIO/hel_gpio.c: 105:                 (*lat_registers[_pin_config->port] &= 
      +                          ~((uint8) 1 << _pin_config->pin));
  1824   001186  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1825   001188  6ED9               	movwf	fsr2l,c
  1826   00118A  6ADA               	clrf	fsr2h,c
  1827   00118C  30DF               	rrcf	223,w,c
  1828   00118E  32E8               	rrcf	wreg,f,c
  1829   001190  32E8               	rrcf	wreg,f,c
  1830   001192  0B07               	andlw	7
  1831   001194  6E31               	movwf	??_gpio_pin_write_logic^0,c
  1832   001196  0E01               	movlw	1
  1833   001198  6E32               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1834   00119A  2A31               	incf	??_gpio_pin_write_logic^0,f,c
  1835   00119C  EFD2  F008         	goto	u944
  1836   0011A0                     u945:
  1837   0011A0  90D8               	bcf	status,0,c
  1838   0011A2  3632               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1839   0011A4                     u944:
  1840   0011A4  2E31               	decfsz	??_gpio_pin_write_logic^0,f,c
  1841   0011A6  EFD0  F008         	goto	u945
  1842   0011AA  5032               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1843   0011AC  0AFF               	xorlw	255
  1844   0011AE  6E33               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1845   0011B0  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1846   0011B2  6ED9               	movwf	fsr2l,c
  1847   0011B4  6ADA               	clrf	fsr2h,c
  1848   0011B6  50DF               	movf	223,w,c
  1849   0011B8  0B07               	andlw	7
  1850   0011BA  0D02               	mullw	2
  1851   0011BC  50F3               	movf	243,w,c
  1852   0011BE  0F0B               	addlw	low _lat_registers
  1853   0011C0  6ED9               	movwf	fsr2l,c
  1854   0011C2  6ADA               	clrf	fsr2h,c
  1855   0011C4  CFDE F034          	movff	postinc2,??_gpio_pin_write_logic+3
  1856   0011C8  CFDD F035          	movff	postdec2,??_gpio_pin_write_logic+4
  1857   0011CC  C034  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1858   0011D0  C035  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1859   0011D4  5033               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1860   0011D6  16DF               	andwf	indf2,f,c
  1861                           
  1862                           ;MCAL_Layer/GPIO/hel_gpio.c: 106:                 break;
  1863   0011D8  EF2B  F009         	goto	l1921
  1864   0011DC                     l1915:
  1865                           
  1866                           ;MCAL_Layer/GPIO/hel_gpio.c: 108:                 (*lat_registers[_pin_config->port] |= 
      +                          ((uint8) 1 << _pin_config->pin));
  1867   0011DC  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1868   0011DE  6ED9               	movwf	fsr2l,c
  1869   0011E0  6ADA               	clrf	fsr2h,c
  1870   0011E2  30DF               	rrcf	223,w,c
  1871   0011E4  32E8               	rrcf	wreg,f,c
  1872   0011E6  32E8               	rrcf	wreg,f,c
  1873   0011E8  0B07               	andlw	7
  1874   0011EA  6E31               	movwf	??_gpio_pin_write_logic^0,c
  1875   0011EC  0E01               	movlw	1
  1876   0011EE  6E32               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1877   0011F0  2A31               	incf	??_gpio_pin_write_logic^0,f,c
  1878   0011F2  EFFD  F008         	goto	u954
  1879   0011F6                     u955:
  1880   0011F6  90D8               	bcf	status,0,c
  1881   0011F8  3632               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1882   0011FA                     u954:
  1883   0011FA  2E31               	decfsz	??_gpio_pin_write_logic^0,f,c
  1884   0011FC  EFFB  F008         	goto	u955
  1885   001200  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1886   001202  6ED9               	movwf	fsr2l,c
  1887   001204  6ADA               	clrf	fsr2h,c
  1888   001206  50DF               	movf	223,w,c
  1889   001208  0B07               	andlw	7
  1890   00120A  0D02               	mullw	2
  1891   00120C  50F3               	movf	243,w,c
  1892   00120E  0F0B               	addlw	low _lat_registers
  1893   001210  6ED9               	movwf	fsr2l,c
  1894   001212  6ADA               	clrf	fsr2h,c
  1895   001214  CFDE F033          	movff	postinc2,??_gpio_pin_write_logic+2
  1896   001218  CFDD F034          	movff	postdec2,??_gpio_pin_write_logic+3
  1897   00121C  C033  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  1898   001220  C034  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  1899   001224  5032               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1900   001226  12DF               	iorwf	indf2,f,c
  1901                           
  1902                           ;MCAL_Layer/GPIO/hel_gpio.c: 109:                 break;
  1903   001228  EF2B  F009         	goto	l1921
  1904   00122C                     l1919:
  1905   00122C  5030               	movf	gpio_pin_write_logic@logic^0,w,c
  1906   00122E  6E31               	movwf	??_gpio_pin_write_logic^0,c
  1907   001230  6A32               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1908                           
  1909                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1910                           ; Switch size 1, requested type "simple"
  1911                           ; Number of cases is 1, Range of values is 0 to 0
  1912                           ; switch strategies available:
  1913                           ; Name         Instructions Cycles
  1914                           ; simple_byte            4     3 (average)
  1915                           ;	Chosen strategy is simple_byte
  1916   001232  5032               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1917   001234  0A00               	xorlw	0	; case 0
  1918   001236  B4D8               	btfsc	status,2,c
  1919   001238  EF20  F009         	goto	l2547
  1920   00123C  EFBF  F008         	goto	l1911
  1921   001240                     l2547:
  1922                           
  1923                           ; Switch size 1, requested type "simple"
  1924                           ; Number of cases is 2, Range of values is 0 to 1
  1925                           ; switch strategies available:
  1926                           ; Name         Instructions Cycles
  1927                           ; simple_byte            7     4 (average)
  1928                           ;	Chosen strategy is simple_byte
  1929   001240  5031               	movf	??_gpio_pin_write_logic^0,w,c
  1930   001242  0A00               	xorlw	0	; case 0
  1931   001244  B4D8               	btfsc	status,2,c
  1932   001246  EFC3  F008         	goto	l1913
  1933   00124A  0A01               	xorlw	1	; case 1
  1934   00124C  B4D8               	btfsc	status,2,c
  1935   00124E  EFEE  F008         	goto	l1915
  1936   001252  EFBF  F008         	goto	l1911
  1937   001256                     l1921:
  1938                           
  1939                           ;MCAL_Layer/GPIO/hel_gpio.c: 113:     return ret;
  1940   001256  5036               	movf	gpio_pin_write_logic@ret^0,w,c
  1941   001258  0012               	return		;funcret
  1942   00125A                     __end_of_gpio_pin_write_logic:
  1943                           	callstack 0
  1944                           
  1945 ;; *************** function _gpio_pin_direction_intialize *****************
  1946 ;; Defined at:
  1947 ;;		line 26 in file "MCAL_Layer/GPIO/hel_gpio.c"
  1948 ;; Parameters:    Size  Location     Type
  1949 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  1950 ;;		 -> lcd_2$lcd_data(8), lcd_2(10), lcd_1$lcd_data(4), lcd_1(6), 
  1951 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  1952 ;; Auto vars:     Size  Location     Type
  1953 ;;  ret             1    6[COMRAM] unsigned char 
  1954 ;; Return value:  Size  Location     Type
  1955 ;;                  1    wreg      unsigned char 
  1956 ;; Registers used:
  1957 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1958 ;; Tracked objects:
  1959 ;;		On entry : 0/0
  1960 ;;		On exit  : 0/0
  1961 ;;		Unchanged: 0/0
  1962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1963 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1964 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1965 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1966 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1967 ;;Total ram usage:        7 bytes
  1968 ;; Hardware stack levels used: 1
  1969 ;; This function calls:
  1970 ;;		Nothing
  1971 ;; This function is called by:
  1972 ;;		_gpio_pin_intialize
  1973 ;;		_keypad_initialize
  1974 ;;		_push_button_initialize
  1975 ;; This function uses a non-reentrant model
  1976 ;;
  1977                           
  1978                           	psect	text14
  1979   001024                     __ptext14:
  1980                           	callstack 0
  1981   001024                     _gpio_pin_direction_intialize:
  1982                           	callstack 27
  1983   001024                     
  1984                           ;MCAL_Layer/GPIO/hel_gpio.c: 27:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1985   001024  0E01               	movlw	1
  1986   001026  6E35               	movwf	gpio_pin_direction_intialize@ret^0,c
  1987                           
  1988                           ;MCAL_Layer/GPIO/hel_gpio.c: 28:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1){
  1989   001028  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1990   00102A  B4D8               	btfsc	status,2,c
  1991   00102C  EF1A  F008         	goto	u961
  1992   001030  EF1C  F008         	goto	u960
  1993   001034                     u961:
  1994   001034  EF2C  F008         	goto	l1933
  1995   001038                     u960:
  1996   001038  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1997   00103A  6ED9               	movwf	fsr2l,c
  1998   00103C  6ADA               	clrf	fsr2h,c
  1999   00103E  30DF               	rrcf	223,w,c
  2000   001040  32E8               	rrcf	wreg,f,c
  2001   001042  32E8               	rrcf	wreg,f,c
  2002   001044  0B07               	andlw	7
  2003   001046  6E30               	movwf	??_gpio_pin_direction_intialize^0,c
  2004   001048  0E07               	movlw	7
  2005   00104A  6430               	cpfsgt	??_gpio_pin_direction_intialize^0,c
  2006   00104C  EF2A  F008         	goto	u971
  2007   001050  EF2C  F008         	goto	u970
  2008   001054                     u971:
  2009   001054  EF83  F008         	goto	l1941
  2010   001058                     u970:
  2011   001058                     l1933:
  2012                           
  2013                           ;MCAL_Layer/GPIO/hel_gpio.c: 29:         ret = (Std_ReturnType)0x00;
  2014   001058  0E00               	movlw	0
  2015   00105A  6E35               	movwf	gpio_pin_direction_intialize@ret^0,c
  2016                           
  2017                           ;MCAL_Layer/GPIO/hel_gpio.c: 30:     }
  2018   00105C  EFA3  F008         	goto	l1943
  2019   001060                     l1935:
  2020                           
  2021                           ;MCAL_Layer/GPIO/hel_gpio.c: 34:                 (*tris_registers[_pin_config->port] &= 
      +                          ~((uint8) 1 << _pin_config->pin));
  2022   001060  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2023   001062  6ED9               	movwf	fsr2l,c
  2024   001064  6ADA               	clrf	fsr2h,c
  2025   001066  30DF               	rrcf	223,w,c
  2026   001068  32E8               	rrcf	wreg,f,c
  2027   00106A  32E8               	rrcf	wreg,f,c
  2028   00106C  0B07               	andlw	7
  2029   00106E  6E30               	movwf	??_gpio_pin_direction_intialize^0,c
  2030   001070  0E01               	movlw	1
  2031   001072  6E31               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  2032   001074  2A30               	incf	??_gpio_pin_direction_intialize^0,f,c
  2033   001076  EF3F  F008         	goto	u984
  2034   00107A                     u985:
  2035   00107A  90D8               	bcf	status,0,c
  2036   00107C  3631               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  2037   00107E                     u984:
  2038   00107E  2E30               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  2039   001080  EF3D  F008         	goto	u985
  2040   001084  5031               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  2041   001086  0AFF               	xorlw	255
  2042   001088  6E32               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  2043   00108A  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2044   00108C  6ED9               	movwf	fsr2l,c
  2045   00108E  6ADA               	clrf	fsr2h,c
  2046   001090  50DF               	movf	223,w,c
  2047   001092  0B07               	andlw	7
  2048   001094  0D02               	mullw	2
  2049   001096  50F3               	movf	243,w,c
  2050   001098  0F15               	addlw	low _tris_registers
  2051   00109A  6ED9               	movwf	fsr2l,c
  2052   00109C  6ADA               	clrf	fsr2h,c
  2053   00109E  CFDE F033          	movff	postinc2,??_gpio_pin_direction_intialize+3
  2054   0010A2  CFDD F034          	movff	postdec2,??_gpio_pin_direction_intialize+4
  2055   0010A6  C033  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  2056   0010AA  C034  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  2057   0010AE  5032               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  2058   0010B0  16DF               	andwf	indf2,f,c
  2059                           
  2060                           ;MCAL_Layer/GPIO/hel_gpio.c: 35:                 break;
  2061   0010B2  EFA3  F008         	goto	l1943
  2062   0010B6                     l1937:
  2063                           
  2064                           ;MCAL_Layer/GPIO/hel_gpio.c: 37:                 (*tris_registers[_pin_config->port] |= 
      +                          ((uint8) 1 << _pin_config->pin));
  2065   0010B6  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2066   0010B8  6ED9               	movwf	fsr2l,c
  2067   0010BA  6ADA               	clrf	fsr2h,c
  2068   0010BC  30DF               	rrcf	223,w,c
  2069   0010BE  32E8               	rrcf	wreg,f,c
  2070   0010C0  32E8               	rrcf	wreg,f,c
  2071   0010C2  0B07               	andlw	7
  2072   0010C4  6E30               	movwf	??_gpio_pin_direction_intialize^0,c
  2073   0010C6  0E01               	movlw	1
  2074   0010C8  6E31               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  2075   0010CA  2A30               	incf	??_gpio_pin_direction_intialize^0,f,c
  2076   0010CC  EF6A  F008         	goto	u994
  2077   0010D0                     u995:
  2078   0010D0  90D8               	bcf	status,0,c
  2079   0010D2  3631               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  2080   0010D4                     u994:
  2081   0010D4  2E30               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  2082   0010D6  EF68  F008         	goto	u995
  2083   0010DA  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2084   0010DC  6ED9               	movwf	fsr2l,c
  2085   0010DE  6ADA               	clrf	fsr2h,c
  2086   0010E0  50DF               	movf	223,w,c
  2087   0010E2  0B07               	andlw	7
  2088   0010E4  0D02               	mullw	2
  2089   0010E6  50F3               	movf	243,w,c
  2090   0010E8  0F15               	addlw	low _tris_registers
  2091   0010EA  6ED9               	movwf	fsr2l,c
  2092   0010EC  6ADA               	clrf	fsr2h,c
  2093   0010EE  CFDE F032          	movff	postinc2,??_gpio_pin_direction_intialize+2
  2094   0010F2  CFDD F033          	movff	postdec2,??_gpio_pin_direction_intialize+3
  2095   0010F6  C032  FFD9         	movff	??_gpio_pin_direction_intialize+2,fsr2l
  2096   0010FA  C033  FFDA         	movff	??_gpio_pin_direction_intialize+3,fsr2h
  2097   0010FE  5031               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  2098   001100  12DF               	iorwf	indf2,f,c
  2099                           
  2100                           ;MCAL_Layer/GPIO/hel_gpio.c: 38:                 break;
  2101   001102  EFA3  F008         	goto	l1943
  2102   001106                     l1941:
  2103   001106  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2104   001108  6ED9               	movwf	fsr2l,c
  2105   00110A  6ADA               	clrf	fsr2h,c
  2106   00110C  BCDF               	btfsc	indf2,6,c
  2107   00110E  EF8B  F008         	goto	u1001
  2108   001112  EF8E  F008         	goto	u1000
  2109   001116                     u1001:
  2110   001116  0E01               	movlw	1
  2111   001118  EF8F  F008         	goto	u1010
  2112   00111C                     u1000:
  2113   00111C  0E00               	movlw	0
  2114   00111E                     u1010:
  2115   00111E  6E30               	movwf	??_gpio_pin_direction_intialize^0,c
  2116   001120  6A31               	clrf	(??_gpio_pin_direction_intialize+1)^0,c
  2117                           
  2118                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2119                           ; Switch size 1, requested type "simple"
  2120                           ; Number of cases is 1, Range of values is 0 to 0
  2121                           ; switch strategies available:
  2122                           ; Name         Instructions Cycles
  2123                           ; simple_byte            4     3 (average)
  2124                           ;	Chosen strategy is simple_byte
  2125   001122  5031               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  2126   001124  0A00               	xorlw	0	; case 0
  2127   001126  B4D8               	btfsc	status,2,c
  2128   001128  EF98  F008         	goto	l2549
  2129   00112C  EF2C  F008         	goto	l1933
  2130   001130                     l2549:
  2131                           
  2132                           ; Switch size 1, requested type "simple"
  2133                           ; Number of cases is 2, Range of values is 0 to 1
  2134                           ; switch strategies available:
  2135                           ; Name         Instructions Cycles
  2136                           ; simple_byte            7     4 (average)
  2137                           ;	Chosen strategy is simple_byte
  2138   001130  5030               	movf	??_gpio_pin_direction_intialize^0,w,c
  2139   001132  0A00               	xorlw	0	; case 0
  2140   001134  B4D8               	btfsc	status,2,c
  2141   001136  EF30  F008         	goto	l1935
  2142   00113A  0A01               	xorlw	1	; case 1
  2143   00113C  B4D8               	btfsc	status,2,c
  2144   00113E  EF5B  F008         	goto	l1937
  2145   001142  EF2C  F008         	goto	l1933
  2146   001146                     l1943:
  2147                           
  2148                           ;MCAL_Layer/GPIO/hel_gpio.c: 42:     return ret;
  2149   001146  5035               	movf	gpio_pin_direction_intialize@ret^0,w,c
  2150   001148  0012               	return		;funcret
  2151   00114A                     __end_of_gpio_pin_direction_intialize:
  2152                           	callstack 0
  2153                           
  2154                           	psect	rparam
  2155   000000                     
  2156                           	psect	config
  2157                           
  2158                           ; Padding undefined space
  2159   300000                     	org	3145728
  2160   300000  FF                 	db	255
  2161                           
  2162                           ;Config register CONFIG1H @ 0x300001
  2163                           ;	Oscillator Selection bits
  2164                           ;	OSC = HS, HS oscillator
  2165                           ;	Fail-Safe Clock Monitor Enable bit
  2166                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2167                           ;	Internal/External Oscillator Switchover bit
  2168                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2169   300001                     	org	3145729
  2170   300001  02                 	db	2
  2171                           
  2172                           ;Config register CONFIG2L @ 0x300002
  2173                           ;	Power-up Timer Enable bit
  2174                           ;	PWRT = OFF, PWRT disabled
  2175                           ;	Brown-out Reset Enable bits
  2176                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2177                           ;	Brown Out Reset Voltage bits
  2178                           ;	BORV = 1, 
  2179   300002                     	org	3145730
  2180   300002  09                 	db	9
  2181                           
  2182                           ;Config register CONFIG2H @ 0x300003
  2183                           ;	Watchdog Timer Enable bit
  2184                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2185                           ;	Watchdog Timer Postscale Select bits
  2186                           ;	WDTPS = 32768, 1:32768
  2187   300003                     	org	3145731
  2188   300003  1E                 	db	30
  2189                           
  2190                           ; Padding undefined space
  2191   300004                     	org	3145732
  2192   300004  FF                 	db	255
  2193                           
  2194                           ;Config register CONFIG3H @ 0x300005
  2195                           ;	CCP2 MUX bit
  2196                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2197                           ;	PORTB A/D Enable bit
  2198                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2199                           ;	Low-Power Timer1 Oscillator Enable bit
  2200                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2201                           ;	MCLR Pin Enable bit
  2202                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2203   300005                     	org	3145733
  2204   300005  81                 	db	129
  2205                           
  2206                           ;Config register CONFIG4L @ 0x300006
  2207                           ;	Stack Full/Underflow Reset Enable bit
  2208                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2209                           ;	Single-Supply ICSP Enable bit
  2210                           ;	LVP = OFF, Single-Supply ICSP disabled
  2211                           ;	Extended Instruction Set Enable bit
  2212                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2213                           ;	Background Debugger Enable bit
  2214                           ;	DEBUG = 0x1, unprogrammed default
  2215   300006                     	org	3145734
  2216   300006  81                 	db	129
  2217                           
  2218                           ; Padding undefined space
  2219   300007                     	org	3145735
  2220   300007  FF                 	db	255
  2221                           
  2222                           ;Config register CONFIG5L @ 0x300008
  2223                           ;	Code Protection bit
  2224                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2225                           ;	Code Protection bit
  2226                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2227                           ;	Code Protection bit
  2228                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2229                           ;	Code Protection bit
  2230                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2231   300008                     	org	3145736
  2232   300008  0F                 	db	15
  2233                           
  2234                           ;Config register CONFIG5H @ 0x300009
  2235                           ;	Boot Block Code Protection bit
  2236                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2237                           ;	Data EEPROM Code Protection bit
  2238                           ;	CPD = OFF, Data EEPROM not code-protected
  2239   300009                     	org	3145737
  2240   300009  C0                 	db	192
  2241                           
  2242                           ;Config register CONFIG6L @ 0x30000A
  2243                           ;	Write Protection bit
  2244                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2245                           ;	Write Protection bit
  2246                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2247                           ;	Write Protection bit
  2248                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2249                           ;	Write Protection bit
  2250                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2251   30000A                     	org	3145738
  2252   30000A  0F                 	db	15
  2253                           
  2254                           ;Config register CONFIG6H @ 0x30000B
  2255                           ;	Configuration Register Write Protection bit
  2256                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2257                           ;	Boot Block Write Protection bit
  2258                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2259                           ;	Data EEPROM Write Protection bit
  2260                           ;	WRTD = OFF, Data EEPROM not write-protected
  2261   30000B                     	org	3145739
  2262   30000B  E0                 	db	224
  2263                           
  2264                           ;Config register CONFIG7L @ 0x30000C
  2265                           ;	Table Read Protection bit
  2266                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2267                           ;	Table Read Protection bit
  2268                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2269                           ;	Table Read Protection bit
  2270                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2271                           ;	Table Read Protection bit
  2272                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2273   30000C                     	org	3145740
  2274   30000C  0F                 	db	15
  2275                           
  2276                           ;Config register CONFIG7H @ 0x30000D
  2277                           ;	Boot Block Table Read Protection bit
  2278                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2279   30000D                     	org	3145741
  2280   30000D  40                 	db	64
  2281                           tosu	equ	0xFFF
  2282                           tosh	equ	0xFFE
  2283                           tosl	equ	0xFFD
  2284                           stkptr	equ	0xFFC
  2285                           pclatu	equ	0xFFB
  2286                           pclath	equ	0xFFA
  2287                           pcl	equ	0xFF9
  2288                           tblptru	equ	0xFF8
  2289                           tblptrh	equ	0xFF7
  2290                           tblptrl	equ	0xFF6
  2291                           tablat	equ	0xFF5
  2292                           prodh	equ	0xFF4
  2293                           prodl	equ	0xFF3
  2294                           indf0	equ	0xFEF
  2295                           postinc0	equ	0xFEE
  2296                           postdec0	equ	0xFED
  2297                           preinc0	equ	0xFEC
  2298                           plusw0	equ	0xFEB
  2299                           fsr0h	equ	0xFEA
  2300                           fsr0l	equ	0xFE9
  2301                           wreg	equ	0xFE8
  2302                           indf1	equ	0xFE7
  2303                           postinc1	equ	0xFE6
  2304                           postdec1	equ	0xFE5
  2305                           preinc1	equ	0xFE4
  2306                           plusw1	equ	0xFE3
  2307                           fsr1h	equ	0xFE2
  2308                           fsr1l	equ	0xFE1
  2309                           bsr	equ	0xFE0
  2310                           indf2	equ	0xFDF
  2311                           postinc2	equ	0xFDE
  2312                           postdec2	equ	0xFDD
  2313                           preinc2	equ	0xFDC
  2314                           plusw2	equ	0xFDB
  2315                           fsr2h	equ	0xFDA
  2316                           fsr2l	equ	0xFD9
  2317                           status	equ	0xFD8

Data Sizes:
    Strings     17
    Constant    16
    Data        46
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     25      78
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    gpio_pin_direction_intialize@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), lcd_2(COMRAM[10]), lcd_2$lcd_data(COMRAM[8]), 
		 -> led_initialize@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_intialize@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), lcd_2(COMRAM[10]), lcd_2$lcd_data(COMRAM[8]), 
		 -> led_initialize@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), lcd_2(COMRAM[10]), lcd_2$lcd_data(COMRAM[8]), 
		 -> led_initialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 
		 -> relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    lcd_4bit_initialize@_lcd_	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_char_data@_lcd_	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_command@_lcd_	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_enable_signal@_lcd_	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_string_position@_lcd_	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_string_position@str	PTR unsigned char  size(1) Largest target is 9
		 -> STR_1(CODE[8]), STR_2(CODE[9]), 

    lcd_4bit_set_cursor@_lcd_	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_8bit_initialize@_lcd_	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_command@_lcd_	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_enable_signal@_lcd_	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_send_4bits@_lcd_	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 


Critical Paths under _main in COMRAM

    _main->_lcd_4bit_send_string_position
    _lcd_4bit_send_string_position->_lcd_4bit_set_cursor
    _lcd_4bit_set_cursor->_lcd_4bit_send_command
    _lcd_4bit_send_char_data->_lcd_send_4bits
    _application_intialize->_lcd_8bit_initialize
    _lcd_8bit_initialize->_lcd_8bit_send_command
    _lcd_8bit_send_command->_lcd_8bit_send_enable_signal
    _lcd_8bit_send_enable_signal->_gpio_pin_write_logic
    _lcd_4bit_initialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_4bit_send_enable_signal->_gpio_pin_write_logic
    _gpio_pin_intialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   80360
              _application_intialize
      _lcd_4bit_send_string_position
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string_position                        5     1      4   36027
                                             20 COMRAM     5     1      4
            _lcd_4bit_send_char_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_set_cursor                                  6     3      3   18720
                                             14 COMRAM     6     3      3
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_char_data                              3     1      2   16518
                                             11 COMRAM     3     1      2
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                1     1      0   44330
                _lcd_4bit_initialize
                _lcd_8bit_initialize
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_initialize                                  4     3      1   19248
                                             16 COMRAM     4     3      1
                 _gpio_pin_intialize
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_command                                6     4      2   12207
                                             10 COMRAM     6     4      2
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (4) _lcd_8bit_send_enable_signal                          2     1      1    5112
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_initialize                                  4     3      1   25079
                                             14 COMRAM     4     3      1
                 _gpio_pin_intialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                3     1      2   18038
                                             11 COMRAM     3     1      2
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       3     1      2    5702
                                              8 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_enable_signal                          2     1      1    5264
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_intialize                                   3     2      1    6574
                                              8 COMRAM     3     2      1
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                 8     6      2    4891
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_intialize                         7     6      1     407
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_intialize
     _lcd_4bit_initialize
       _gpio_pin_intialize
         _gpio_pin_direction_intialize
         _gpio_pin_write_logic
       _lcd_4bit_send_command
         _gpio_pin_write_logic
         _lcd_4bit_send_enable_signal
           _gpio_pin_write_logic
         _lcd_send_4bits
           _gpio_pin_write_logic
     _lcd_8bit_initialize
       _gpio_pin_intialize
       _lcd_8bit_send_command
         _gpio_pin_write_logic
         _lcd_8bit_send_enable_signal
           _gpio_pin_write_logic
   _lcd_4bit_send_string_position
     _lcd_4bit_send_char_data
       _gpio_pin_write_logic
       _lcd_4bit_send_enable_signal
       _lcd_send_4bits
     _lcd_4bit_set_cursor
       _lcd_4bit_send_command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     19      4E       1       61.4%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4E      39        0.0%
DATA                 0      0      4E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Nov 14 22:00:52 2023

     lcd_4bit_send_string_position@_lcd_ 0043                          ?_lcd_send_4bits 0037  
        ??_lcd_4bit_send_string_position 0047      lcd_4bit_send_string_position@column 0045  
                                    l210 1600                                      l203 1148  
                                    l323 16B8                                      l229 1258  
                                    l413 1708                                      l318 142C  
                                    l416 17E8                                      l328 165C  
                                    l361 1342                                      l419 17C4  
                                    l291 17FA                                      l349 15A2  
                                    l439 14C4                                      l368 153A  
                                    u920 115E                                      u921 115A  
                                    u930 117E                                      u931 117A  
                                    u960 1038                                      u944 11A4  
                                    u961 1034                                      u945 11A0  
                                    u970 1058                                      u954 11FA  
                                    u971 1054                                      u955 11F6  
                                    u984 107E                                      u985 107A  
                                    u994 10D4                                      u995 10D0  
    __end_of_lcd_4bit_send_enable_signal 17EA              _lcd_4bit_send_enable_signal 17C6  
                    led_initialize@F2891 004E                                      wreg 0FE8  
                  relay_initialize@F2885 004A              lcd_send_4bits@_data_command 0038  
                                   l2001 16B6                                     l2011 14EE  
                                   l2021 151E                                     l2005 14C6  
                                   l2101 12F6                                     l2031 1358  
                                   l2023 152E                                     l2007 14DA  
                                   l2111 1332                                     l2103 1302  
                                   l2041 1378                                     l2033 1360  
                                   l2017 14F2                                     l2025 1538  
                                   l2009 14E2                                     l2105 130E  
                                   l2113 1340                                     l2121 161A  
                                   l2051 13B2                                     l2043 1384  
                                   l2035 1374                                     l2019 151C  
                                   l2107 131A                                     l2123 165A  
                                   l2131 1438                                     l2061 13F8  
                                   l2053 13CE                                     l2045 1386  
                                   l2029 1344                                     l2109 1326  
                                   l2117 1602                                     l2133 144C  
                                   l2141 14C2                                     l2063 1404  
                                   l2055 13D4                                     l2047 1396  
                                   l2151 17EA                                     l2119 1612  
                                   l2135 1460                                     l2127 142E  
                                   l2065 1410                                     l2057 13E0  
                                   l2049 13A6                                     l2073 125A  
                                   l2153 17F2                                     l2137 1474  
                                   l2129 1432                                     l2161 156A  
                                   l2067 141C                                     l2059 13EC  
                                   l2091 12AC                                     l2075 126E  
                                   l2139 1488                                     l2163 1582  
                                   l2155 153C                                     l2069 142A  
                                   l2093 12BC                                     l2085 128E  
                                   l2077 1276                                     l2149 17EA  
                                   l2165 1584                                     l2157 154C  
                                   l2095 12C8                                     l2087 129A  
                                   l2079 128A                                     l2167 15A0  
                                   l2159 1554                                     l2097 12E4  
                                   l2089 129C                                     l2099 12EA  
                                   l2451 1758                                     l2445 1740  
                                   l1911 117E                                     l2447 1740  
                                   l1913 1186                                     l1921 1256  
                                   l2545 149C                                     l2449 1744  
                                   l1931 1038                                     l2547 1240  
                                   l1915 11DC                                     l1907 114A  
                                   l2549 1130                                     l1941 1106  
                                   l1933 1058                                     l1909 115E  
                                   l1935 1060                                     l1943 1146  
                                   l1919 122C                                     l1951 16BA  
                                   l1937 10B6                                     l1929 1024  
                                   l1953 16BA                                     l1963 17C6  
                                   l1955 16CA                                     l1965 17C6  
                                   l1957 16DC                                     l1973 17A2  
                                   l1991 15FE                                     l1983 15A4  
                                   l1967 17D2                                     l1959 16F0  
                                   l1975 17A2                                     l1985 15B4  
                                   l1969 17D8                                     l1977 17AE  
                                   l1987 15D4                                     l1995 165E  
                                   l1979 17B4                                     l1989 15DC  
                                   l1997 166E                                     l1999 1676  
                                   STR_1 101A                                     STR_2 1011  
                                   u1000 111C                                     u1001 1116  
                                   u1010 111E                                     u1020 15B4  
                                   u1100 126E                                     u1021 15B0  
                                   u1101 126A                                     u1030 15D4  
                                   u1110 12AC                                     u1031 15D0  
                                   u1111 12A8                                     u1040 166E  
                                   u1120 1612                                     u1041 166A  
                                   u1121 160E                                     u1050 14DA  
                                   u1130 154C                                     u1051 14D6  
                                   u1131 1548                                     u1140 15A0  
                                   u1141 159C                                     u1070 152E  
                                   u1071 152A                                     u1080 1358  
                                   u1064 150C       lcd_8bit_send_command@l_pin_counter 003E  
                                   u1081 1354                                     u1065 1508  
                                   u1090 1396                                     u1091 1392  
                                   _LATA 0F89                                     _LATB 0F8A  
                                   _LATC 0F8B                                     _LATD 0F8C  
                                   _LATE 0F8D                                     u1607 13D0  
                                   u1557 12B2                                     u1567 12CE  
                                   u1577 12E6                                     u1587 139C  
                                   u1597 13B8                  ??_application_intialize 0043  
          ??_lcd_4bit_send_enable_signal 0038                                     _main 1740  
                                   fsr2h 0FDA                                     indf2 0FDF  
                                   fsr1l 0FE1                                     fsr2l 0FD9  
                                   prodl 0FF3                                     start 0000  
          __end_of_lcd_8bit_send_command 153C                             ___param_bank 0000  
                  _lcd_4bit_send_command 165E                     _gpio_pin_write_logic 114A  
                                  ?_main 002F                      relay_turn_off@F2895 0048  
                                  _PORTA 0F80                                    _PORTB 0F81  
                                  _PORTC 0F82                                    _PORTD 0F83  
                                  _PORTE 0F84                                    _TRISA 0F92  
                                  _TRISB 0F93                                    _TRISC 0F94  
                                  _TRISD 0F95                                    _TRISE 0F96  
              lcd_4bit_set_cursor@coulmn 003F                                    _lcd_1 0029  
                                  _lcd_2 001F                                    tablat 0FF5  
                                  status 0FD8                          __initialization 170A  
                           __end_of_main 1774                    ?_gpio_pin_write_logic 002F  
                          _lat_registers 000B                                   ??_main 0048  
                          __activetblptr 0002                         led_turn_on@F2896 004D  
  __end_of_lcd_4bit_send_string_position 15A4            _lcd_4bit_send_string_position 153C  
                 ?_lcd_4bit_send_command 003A                                   clear_0 1730  
                                 isa$std 0001  gpio_pin_direction_intialize@_pin_config 002F  
                           __pdataCOMRAM 0001                             __mediumconst 0000  
                                 tblptrh 0FF7                                   tblptrl 0FF6  
                                 tblptru 0FF8               lcd_8bit_send_command@_lcd_ 0039  
               lcd_4bit_set_cursor@_lcd_ 003D                               __accesstop 0080  
                __end_of__initialization 1736                            ___rparam_used 0001  
                       ??_lcd_send_4bits 0039                  _lcd_4bit_send_char_data 1602  
                 ??_gpio_pin_write_logic 0031                           __pcstackCOMRAM 002F  
               lcd_4bit_send_command@ret 003C           ?_lcd_4bit_send_string_position 0043  
               lcd_8bit_initialize@_lcd_ 003F            __end_of_application_intialize 17FC  
                 lcd_8bit_initialize@ret 0042                        led_turn_off@F2901 004C  
                   led_turn_toggle@F2906 004B      __end_of_lcd_8bit_send_enable_signal 17C6  
            _lcd_8bit_send_enable_signal 17A2                               _btn_values 1001  
         lcd_8bit_send_enable_signal@ret 0038                           _tris_registers 0015  
              ??_lcd_4bit_send_char_data 003C            ??_lcd_8bit_send_enable_signal 0038  
 lcd_8bit_initialize@l_data_pins_counter 0041   lcd_4bit_initialize@l_data_pins_counter 003F  
                                __Hparam 0000                                  __Lparam 0000  
                  _lcd_8bit_send_command 14C6                             __psmallconst 1000  
             __end_of_gpio_pin_intialize 1602                                  __pcinit 170A  
                                __ramtop 1000                                  __ptext0 1740  
                                __ptext1 153C                                  __ptext2 142E  
                                __ptext3 1602                                  __ptext4 17EA  
                                __ptext5 125A                                  __ptext6 14C6  
                                __ptext7 17A2                                  __ptext8 1344  
                                __ptext9 165E                     end_of_initialization 1736  
                      lcd_send_4bits@ret 0039                            __Lmediumconst 0000  
                ??_lcd_4bit_send_command 003C                    gpio_pin_intialize@ret 0039  
                                postdec1 0FE5                                  postdec2 0FDD  
                                postinc0 0FEE                                  postinc2 0FDE  
                    _lcd_4bit_initialize 1344          __end_of_lcd_4bit_send_char_data 165E  
          gpio_pin_intialize@_pin_config 0037               lcd_4bit_send_char_data@ret 003C  
   __end_of_gpio_pin_direction_intialize 114A             _gpio_pin_direction_intialize 1024  
       lcd_4bit_send_string_position@ret 0047         lcd_4bit_send_string_position@row 0044  
       lcd_4bit_send_string_position@str 0046                     ?_lcd_4bit_initialize 003D  
       lcd_8bit_send_enable_signal@_lcd_ 0037                      _lcd_4bit_set_cursor 142E  
                 ?_lcd_8bit_send_command 0039                       relay_turn_on@F2890 0049  
                          __pidataCOMRAM 1774                      start_initialization 170A  
           ?_lcd_4bit_send_enable_signal 0037                     ?_lcd_4bit_set_cursor 003D  
                    _lcd_8bit_initialize 125A            ?_gpio_pin_direction_intialize 002F  
                  ??_lcd_4bit_initialize 003E                     ?_lcd_8bit_initialize 003F  
           lcd_4bit_send_command@command 003B                 lcd_8bit_send_command@ret 003D  
                            __pbssCOMRAM 0048                    ??_lcd_4bit_set_cursor 0040  
        gpio_pin_direction_intialize@ret 0035                    ??_lcd_8bit_initialize 0040  
                  _application_intialize 17EA         lcd_4bit_send_enable_signal@_lcd_ 0037  
        gpio_pin_write_logic@_pin_config 002F                gpio_pin_write_logic@logic 0030  
                            __smallconst 1000                       _gpio_pin_intialize 15A4  
         ??_gpio_pin_direction_intialize 0030                      ?_gpio_pin_intialize 0037  
          __end_of_lcd_4bit_send_command 16BA                     ??_gpio_pin_intialize 0038  
                    lcd_send_4bits@_lcd_ 0037                  gpio_pin_write_logic@ret 0036  
               ?_lcd_4bit_send_char_data 003A                                copy_data0 171E  
                ??_lcd_8bit_send_command 003B                   ?_application_intialize 002F  
                               __Hrparam 0000                                 __Lrparam 0000  
                 lcd_4bit_set_cursor@ret 0042                   lcd_4bit_set_cursor@row 003E  
                     __end_of_btn_values 1011                                 __ptext10 16BA  
                               __ptext11 17C6                                 __ptext12 15A4  
                               __ptext13 114A                                 __ptext14 1024  
                               isa$xinst 0000                           _lcd_send_4bits 16BA  
            __end_of_lcd_4bit_initialize 142E               lcd_4bit_send_command@_lcd_ 003A  
           __end_of_gpio_pin_write_logic 125A             ?_lcd_8bit_send_enable_signal 0037  
         lcd_4bit_send_enable_signal@ret 0038                   __end_of_lcd_send_4bits 170A  
            __end_of_lcd_4bit_set_cursor 14C6                           _port_registers 0001  
           lcd_4bit_send_char_data@_lcd_ 003A              __end_of_lcd_8bit_initialize 1344  
               lcd_4bit_initialize@_lcd_ 003D             lcd_8bit_send_command@command 003A  
            lcd_4bit_send_char_data@data 003B                   lcd_4bit_initialize@ret 0040  
