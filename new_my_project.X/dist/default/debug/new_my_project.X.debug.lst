

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Nov 14 21:52:34 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    27   000000                     
    28                           ; Generated 23/03/2023 GMT
    29                           ; 
    30                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F4620 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62   000000                     
    63                           	psect	idataCOMRAM
    64   00162E                     __pidataCOMRAM:
    65                           	callstack 0
    66                           
    67                           ;initializer for _port_registers
    68   00162E  80                 	db	128
    69   00162F  0F                 	db	15
    70   001630  81                 	db	129
    71   001631  0F                 	db	15
    72   001632  82                 	db	130
    73   001633  0F                 	db	15
    74   001634  83                 	db	131
    75   001635  0F                 	db	15
    76   001636  84                 	db	132
    77   001637  0F                 	db	15
    78                           
    79                           ;initializer for _lat_registers
    80   001638  89                 	db	137
    81   001639  0F                 	db	15
    82   00163A  8A                 	db	138
    83   00163B  0F                 	db	15
    84   00163C  8B                 	db	139
    85   00163D  0F                 	db	15
    86   00163E  8C                 	db	140
    87   00163F  0F                 	db	15
    88   001640  8D                 	db	141
    89   001641  0F                 	db	15
    90                           
    91                           ;initializer for _tris_registers
    92   001642  92                 	db	146
    93   001643  0F                 	db	15
    94   001644  93                 	db	147
    95   001645  0F                 	db	15
    96   001646  94                 	db	148
    97   001647  0F                 	db	15
    98   001648  95                 	db	149
    99   001649  0F                 	db	15
   100   00164A  96                 	db	150
   101   00164B  0F                 	db	15
   102                           
   103                           ;initializer for _lcd_2
   104   00164C  32                 	db	50
   105   00164D  3A                 	db	58
   106   00164E  03                 	db	3
   107   00164F  0B                 	db	11
   108   001650  13                 	db	19
   109   001651  1B                 	db	27
   110   001652  23                 	db	35
   111   001653  2B                 	db	43
   112   001654  33                 	db	51
   113   001655  3B                 	db	59
   114                           
   115                           ;initializer for _lcd_1
   116   001656  02                 	db	2
   117   001657  0A                 	db	10
   118   001658  12                 	db	18
   119   001659  1A                 	db	26
   120   00165A  22                 	db	34
   121   00165B  2A                 	db	42
   122                           
   123                           	psect	smallconst
   124   001000                     __psmallconst:
   125                           	callstack 0
   126   001000  00                 	db	0
   127   001001                     _btn_values:
   128                           	callstack 0
   129   001001  37                 	db	55
   130   001002  38                 	db	56
   131   001003  39                 	db	57
   132   001004  2F                 	db	47
   133   001005  34                 	db	52
   134   001006  35                 	db	53
   135   001007  36                 	db	54
   136   001008  2A                 	db	42
   137   001009  31                 	db	49
   138   00100A  32                 	db	50
   139   00100B  33                 	db	51
   140   00100C  2D                 	db	45
   141   00100D  23                 	db	35
   142   00100E  30                 	db	48
   143   00100F  3D                 	db	61
   144   001010  2B                 	db	43
   145   001011                     __end_of_btn_values:
   146                           	callstack 0
   147   000000                     _PORTE	set	3972
   148   000000                     _PORTD	set	3971
   149   000000                     _PORTC	set	3970
   150   000000                     _PORTB	set	3969
   151   000000                     _PORTA	set	3968
   152   000000                     _LATA	set	3977
   153   000000                     _TRISA	set	3986
   154   000000                     _TRISE	set	3990
   155   000000                     _TRISD	set	3989
   156   000000                     _TRISC	set	3988
   157   000000                     _TRISB	set	3987
   158   000000                     _LATE	set	3981
   159   000000                     _LATD	set	3980
   160   000000                     _LATC	set	3979
   161   000000                     _LATB	set	3978
   162   001011  00                 	db	0	; dummy byte at the end
   163   000000                     
   164                           ; #config settings
   165                           
   166                           	psect	cinit
   167   0015F8                     __pcinit:
   168                           	callstack 0
   169   0015F8                     start_initialization:
   170                           	callstack 0
   171   0015F8                     __initialization:
   172                           	callstack 0
   173                           
   174                           ; Initialize objects allocated to COMRAM (46 bytes)
   175                           ; load TBLPTR registers with __pidataCOMRAM
   176   0015F8  0E2E               	movlw	low __pidataCOMRAM
   177   0015FA  6EF6               	movwf	tblptrl,c
   178   0015FC  0E16               	movlw	high __pidataCOMRAM
   179   0015FE  6EF7               	movwf	tblptrh,c
   180   001600  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   181   001602  6EF8               	movwf	tblptru,c
   182   001604  EE00  F001         	lfsr	0,__pdataCOMRAM
   183   001608  EE10 F02E          	lfsr	1,46
   184   00160C                     copy_data0:
   185   00160C  0009               	tblrd		*+
   186   00160E  CFF5 FFEE          	movff	tablat,postinc0
   187   001612  50E5               	movf	postdec1,w,c
   188   001614  50E1               	movf	fsr1l,w,c
   189   001616  E1FA               	bnz	copy_data0
   190                           
   191                           ; Clear objects allocated to COMRAM (7 bytes)
   192   001618  EE00  F043         	lfsr	0,__pbssCOMRAM
   193   00161C  0E07               	movlw	7
   194   00161E                     clear_0:
   195   00161E  6AEE               	clrf	postinc0,c
   196   001620  06E8               	decf	wreg,f,c
   197   001622  E1FD               	bnz	clear_0
   198   001624                     end_of_initialization:
   199                           	callstack 0
   200   001624                     __end_of__initialization:
   201                           	callstack 0
   202   001624  0E00               	movlw	low (__Lmediumconst shr (0+16))
   203   001626  6EF8               	movwf	tblptru,c
   204   001628  0100               	movlb	0
   205   00162A  EF52  F00B         	goto	_main	;jump to C main() function
   206                           
   207                           	psect	bssCOMRAM
   208   000043                     __pbssCOMRAM:
   209                           	callstack 0
   210   000043                     relay_turn_off@F2895:
   211                           	callstack 0
   212   000043                     	ds	1
   213   000044                     relay_turn_on@F2890:
   214                           	callstack 0
   215   000044                     	ds	1
   216   000045                     relay_initialize@F2885:
   217                           	callstack 0
   218   000045                     	ds	1
   219   000046                     led_turn_toggle@F2906:
   220                           	callstack 0
   221   000046                     	ds	1
   222   000047                     led_turn_off@F2901:
   223                           	callstack 0
   224   000047                     	ds	1
   225   000048                     led_turn_on@F2896:
   226                           	callstack 0
   227   000048                     	ds	1
   228   000049                     led_initialize@F2891:
   229                           	callstack 0
   230   000049                     	ds	1
   231                           
   232                           	psect	dataCOMRAM
   233   000001                     __pdataCOMRAM:
   234                           	callstack 0
   235   000001                     _port_registers:
   236                           	callstack 0
   237   000001                     	ds	10
   238   00000B                     _lat_registers:
   239                           	callstack 0
   240   00000B                     	ds	10
   241   000015                     _tris_registers:
   242                           	callstack 0
   243   000015                     	ds	10
   244   00001F                     _lcd_2:
   245                           	callstack 0
   246   00001F                     	ds	10
   247   000029                     _lcd_1:
   248                           	callstack 0
   249   000029                     	ds	6
   250                           
   251                           	psect	cstackCOMRAM
   252   00002F                     __pcstackCOMRAM:
   253                           	callstack 0
   254   00002F                     gpio_pin_direction_intialize@_pin_config:
   255                           	callstack 0
   256   00002F                     gpio_pin_write_logic@_pin_config:
   257                           	callstack 0
   258                           
   259                           ; 1 bytes @ 0x0
   260   00002F                     	ds	1
   261   000030                     ??_gpio_pin_direction_intialize:
   262   000030                     gpio_pin_write_logic@logic:
   263                           	callstack 0
   264                           
   265                           ; 1 bytes @ 0x1
   266   000030                     	ds	1
   267   000031                     ??_gpio_pin_write_logic:
   268                           
   269                           ; 1 bytes @ 0x2
   270   000031                     	ds	4
   271   000035                     gpio_pin_direction_intialize@ret:
   272                           	callstack 0
   273                           
   274                           ; 1 bytes @ 0x6
   275   000035                     	ds	1
   276   000036                     gpio_pin_write_logic@ret:
   277                           	callstack 0
   278                           
   279                           ; 1 bytes @ 0x7
   280   000036                     	ds	1
   281   000037                     gpio_pin_intialize@_pin_config:
   282                           	callstack 0
   283   000037                     lcd_send_4bits@_lcd_:
   284                           	callstack 0
   285   000037                     lcd_4bit_send_enable_signal@_lcd_:
   286                           	callstack 0
   287   000037                     lcd_8bit_send_enable_signal@_lcd_:
   288                           	callstack 0
   289                           
   290                           ; 1 bytes @ 0x8
   291   000037                     	ds	1
   292   000038                     ??_gpio_pin_intialize:
   293   000038                     lcd_send_4bits@_data_command:
   294                           	callstack 0
   295   000038                     lcd_4bit_send_enable_signal@ret:
   296                           	callstack 0
   297   000038                     lcd_8bit_send_enable_signal@ret:
   298                           	callstack 0
   299                           
   300                           ; 1 bytes @ 0x9
   301   000038                     	ds	1
   302   000039                     gpio_pin_intialize@ret:
   303                           	callstack 0
   304   000039                     lcd_8bit_send_command@_lcd_:
   305                           	callstack 0
   306   000039                     lcd_send_4bits@ret:
   307                           	callstack 0
   308                           
   309                           ; 1 bytes @ 0xA
   310   000039                     	ds	1
   311   00003A                     lcd_4bit_send_command@_lcd_:
   312                           	callstack 0
   313   00003A                     lcd_4bit_send_char_data@_lcd_:
   314                           	callstack 0
   315   00003A                     lcd_8bit_send_command@command:
   316                           	callstack 0
   317                           
   318                           ; 1 bytes @ 0xB
   319   00003A                     	ds	1
   320   00003B                     ??_lcd_8bit_send_command:
   321   00003B                     lcd_4bit_send_command@command:
   322                           	callstack 0
   323   00003B                     lcd_4bit_send_char_data@data:
   324                           	callstack 0
   325                           
   326                           ; 1 bytes @ 0xC
   327   00003B                     	ds	1
   328   00003C                     lcd_4bit_send_command@ret:
   329                           	callstack 0
   330   00003C                     lcd_4bit_send_char_data@ret:
   331                           	callstack 0
   332                           
   333                           ; 1 bytes @ 0xD
   334   00003C                     	ds	1
   335   00003D                     lcd_4bit_initialize@_lcd_:
   336                           	callstack 0
   337   00003D                     lcd_8bit_send_command@ret:
   338                           	callstack 0
   339                           
   340                           ; 1 bytes @ 0xE
   341   00003D                     	ds	1
   342   00003E                     ??_lcd_4bit_initialize:
   343   00003E                     lcd_8bit_send_command@l_pin_counter:
   344                           	callstack 0
   345                           
   346                           ; 1 bytes @ 0xF
   347   00003E                     	ds	1
   348   00003F                     lcd_4bit_initialize@l_data_pins_counter:
   349                           	callstack 0
   350   00003F                     lcd_8bit_initialize@_lcd_:
   351                           	callstack 0
   352                           
   353                           ; 1 bytes @ 0x10
   354   00003F                     	ds	1
   355   000040                     ??_lcd_8bit_initialize:
   356   000040                     lcd_4bit_initialize@ret:
   357                           	callstack 0
   358                           
   359                           ; 1 bytes @ 0x11
   360   000040                     	ds	1
   361   000041                     lcd_8bit_initialize@l_data_pins_counter:
   362                           	callstack 0
   363                           
   364                           ; 1 bytes @ 0x12
   365   000041                     	ds	1
   366   000042                     lcd_8bit_initialize@ret:
   367                           	callstack 0
   368                           
   369                           ; 1 bytes @ 0x13
   370   000042                     	ds	1
   371   000043                     
   372                           ; 1 bytes @ 0x14
   373 ;;
   374 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   375 ;;
   376 ;; *************** function _main *****************
   377 ;; Defined at:
   378 ;;		line 98 in file "application.c"
   379 ;; Parameters:    Size  Location     Type
   380 ;;		None
   381 ;; Auto vars:     Size  Location     Type
   382 ;;  ret             1    0        unsigned char 
   383 ;; Return value:  Size  Location     Type
   384 ;;                  2  284[None  ] int 
   385 ;; Registers used:
   386 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   387 ;; Tracked objects:
   388 ;;		On entry : 0/0
   389 ;;		On exit  : 0/0
   390 ;;		Unchanged: 0/0
   391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   396 ;;Total ram usage:        0 bytes
   397 ;; Hardware stack levels required when called: 5
   398 ;; This function calls:
   399 ;;		_application_intialize
   400 ;;		_lcd_4bit_send_char_data
   401 ;; This function is called by:
   402 ;;		Startup code after reset
   403 ;; This function uses a non-reentrant model
   404 ;;
   405                           
   406                           	psect	text0
   407   0016A4                     __ptext0:
   408                           	callstack 0
   409   0016A4                     _main:
   410                           	callstack 26
   411   0016A4                     
   412                           ;application.c: 100:     application_intialize();
   413   0016A4  EC5E  F00B         	call	_application_intialize	;wreg free
   414   0016A8  0E29               	movlw	low _lcd_1
   415   0016AA  6E3A               	movwf	lcd_4bit_send_char_data@_lcd_^0,c
   416   0016AC  0E61               	movlw	97
   417   0016AE  6E3B               	movwf	lcd_4bit_send_char_data@data^0,c
   418   0016B0  EC78  F00A         	call	_lcd_4bit_send_char_data	;wreg free
   419   0016B4                     l285:
   420   0016B4  EF5A  F00B         	goto	l285
   421   0016B8  EF00  F000         	goto	start
   422   0016BC                     __end_of_main:
   423                           	callstack 0
   424                           
   425 ;; *************** function _lcd_4bit_send_char_data *****************
   426 ;; Defined at:
   427 ;;		line 93 in file "ECU_Layer/LCD/ecu_lcd.c"
   428 ;; Parameters:    Size  Location     Type
   429 ;;  _lcd_           1   11[COMRAM] PTR const struct .
   430 ;;		 -> lcd_1(6), 
   431 ;;  data            1   12[COMRAM] unsigned char 
   432 ;; Auto vars:     Size  Location     Type
   433 ;;  ret             1   13[COMRAM] unsigned char 
   434 ;; Return value:  Size  Location     Type
   435 ;;                  1    wreg      unsigned char 
   436 ;; Registers used:
   437 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   438 ;; Tracked objects:
   439 ;;		On entry : 0/0
   440 ;;		On exit  : 0/0
   441 ;;		Unchanged: 0/0
   442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   443 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   444 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   446 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   447 ;;Total ram usage:        3 bytes
   448 ;; Hardware stack levels used: 1
   449 ;; Hardware stack levels required when called: 2
   450 ;; This function calls:
   451 ;;		_gpio_pin_write_logic
   452 ;;		_lcd_4bit_send_enable_signal
   453 ;;		_lcd_send_4bits
   454 ;; This function is called by:
   455 ;;		_main
   456 ;; This function uses a non-reentrant model
   457 ;;
   458                           
   459                           	psect	text1
   460   0014F0                     __ptext1:
   461                           	callstack 0
   462   0014F0                     _lcd_4bit_send_char_data:
   463                           	callstack 28
   464   0014F0                     
   465                           ;ECU_Layer/LCD/ecu_lcd.c: 95:     if(((void*)0) == _lcd_){
   466   0014F0  503A               	movf	lcd_4bit_send_char_data@_lcd_^0,w,c
   467   0014F2  A4D8               	btfss	status,2,c
   468   0014F4  EF7E  F00A         	goto	u1101
   469   0014F8  EF80  F00A         	goto	u1100
   470   0014FC                     u1101:
   471   0014FC  EF84  F00A         	goto	l2061
   472   001500                     u1100:
   473   001500                     
   474                           ;ECU_Layer/LCD/ecu_lcd.c: 96:         ret = (Std_ReturnType)0x00;
   475   001500  0E00               	movlw	0
   476   001502  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
   477                           
   478                           ;ECU_Layer/LCD/ecu_lcd.c: 97:     }
   479   001504  EFA4  F00A         	goto	l2063
   480   001508                     l2061:
   481                           
   482                           ;ECU_Layer/LCD/ecu_lcd.c: 99:         ret = gpio_pin_write_logic(&(_lcd_->lcd_rs), GPIO_
      +                          HIGH);
   483   001508  C03A  F02F         	movff	lcd_4bit_send_char_data@_lcd_,gpio_pin_write_logic@_pin_config
   484   00150C  0E01               	movlw	1
   485   00150E  6E30               	movwf	gpio_pin_write_logic@logic^0,c
   486   001510  EC9C  F008         	call	_gpio_pin_write_logic	;wreg free
   487   001514  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
   488                           
   489                           ;ECU_Layer/LCD/ecu_lcd.c: 100:         ret = lcd_send_4bits(_lcd_ , data>>4);
   490   001516  C03A  F037         	movff	lcd_4bit_send_char_data@_lcd_,lcd_send_4bits@_lcd_
   491   00151A  383B               	swapf	lcd_4bit_send_char_data@data^0,w,c
   492   00151C  0B0F               	andlw	15
   493   00151E  6E38               	movwf	lcd_send_4bits@_data_command^0,c
   494   001520  ECD4  F00A         	call	_lcd_send_4bits	;wreg free
   495   001524  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
   496                           
   497                           ;ECU_Layer/LCD/ecu_lcd.c: 101:         ret = lcd_4bit_send_enable_signal(_lcd_);
   498   001526  C03A  F037         	movff	lcd_4bit_send_char_data@_lcd_,lcd_4bit_send_enable_signal@_lcd_
   499   00152A  EC40  F00B         	call	_lcd_4bit_send_enable_signal	;wreg free
   500   00152E  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
   501                           
   502                           ;ECU_Layer/LCD/ecu_lcd.c: 102:         ret = lcd_send_4bits(_lcd_ , data);
   503   001530  C03A  F037         	movff	lcd_4bit_send_char_data@_lcd_,lcd_send_4bits@_lcd_
   504   001534  C03B  F038         	movff	lcd_4bit_send_char_data@data,lcd_send_4bits@_data_command
   505   001538  ECD4  F00A         	call	_lcd_send_4bits	;wreg free
   506   00153C  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
   507                           
   508                           ;ECU_Layer/LCD/ecu_lcd.c: 103:         ret = lcd_4bit_send_enable_signal(_lcd_);
   509   00153E  C03A  F037         	movff	lcd_4bit_send_char_data@_lcd_,lcd_4bit_send_enable_signal@_lcd_
   510   001542  EC40  F00B         	call	_lcd_4bit_send_enable_signal	;wreg free
   511   001546  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
   512   001548                     l2063:
   513                           
   514                           ;ECU_Layer/LCD/ecu_lcd.c: 107:     return ret;
   515   001548  503C               	movf	lcd_4bit_send_char_data@ret^0,w,c
   516   00154A  0012               	return		;funcret
   517   00154C                     __end_of_lcd_4bit_send_char_data:
   518                           	callstack 0
   519                           
   520 ;; *************** function _application_intialize *****************
   521 ;; Defined at:
   522 ;;		line 111 in file "application.c"
   523 ;; Parameters:    Size  Location     Type
   524 ;;		None
   525 ;; Auto vars:     Size  Location     Type
   526 ;;  ret             1    0        unsigned char 
   527 ;; Return value:  Size  Location     Type
   528 ;;                  1    wreg      void 
   529 ;; Registers used:
   530 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   531 ;; Tracked objects:
   532 ;;		On entry : 0/0
   533 ;;		On exit  : 0/0
   534 ;;		Unchanged: 0/0
   535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   540 ;;Total ram usage:        0 bytes
   541 ;; Hardware stack levels used: 1
   542 ;; Hardware stack levels required when called: 4
   543 ;; This function calls:
   544 ;;		_lcd_4bit_initialize
   545 ;;		_lcd_8bit_initialize
   546 ;; This function is called by:
   547 ;;		_main
   548 ;; This function uses a non-reentrant model
   549 ;;
   550                           
   551                           	psect	text2
   552   0016BC                     __ptext2:
   553                           	callstack 0
   554   0016BC                     _application_intialize:
   555                           	callstack 26
   556   0016BC  0E29               	movlw	low _lcd_1
   557   0016BE  6E3D               	movwf	lcd_4bit_initialize@_lcd_^0,c
   558   0016C0  EC99  F009         	call	_lcd_4bit_initialize	;wreg free
   559   0016C4  0E1F               	movlw	low _lcd_2
   560   0016C6  6E3F               	movwf	lcd_8bit_initialize@_lcd_^0,c
   561   0016C8  EC24  F009         	call	_lcd_8bit_initialize	;wreg free
   562   0016CC  0012               	return		;funcret
   563   0016CE                     __end_of_application_intialize:
   564                           	callstack 0
   565                           
   566 ;; *************** function _lcd_8bit_initialize *****************
   567 ;; Defined at:
   568 ;;		line 210 in file "ECU_Layer/LCD/ecu_lcd.c"
   569 ;; Parameters:    Size  Location     Type
   570 ;;  _lcd_           1   16[COMRAM] PTR const struct .
   571 ;;		 -> lcd_2(10), 
   572 ;; Auto vars:     Size  Location     Type
   573 ;;  ret             1   19[COMRAM] unsigned char 
   574 ;;  l_data_pins_    1   18[COMRAM] unsigned char 
   575 ;; Return value:  Size  Location     Type
   576 ;;                  1    wreg      unsigned char 
   577 ;; Registers used:
   578 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   579 ;; Tracked objects:
   580 ;;		On entry : 0/0
   581 ;;		On exit  : 0/0
   582 ;;		Unchanged: 0/0
   583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   584 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   585 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   586 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   587 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   588 ;;Total ram usage:        4 bytes
   589 ;; Hardware stack levels used: 1
   590 ;; Hardware stack levels required when called: 3
   591 ;; This function calls:
   592 ;;		_gpio_pin_intialize
   593 ;;		_lcd_8bit_send_command
   594 ;; This function is called by:
   595 ;;		_application_intialize
   596 ;; This function uses a non-reentrant model
   597 ;;
   598                           
   599                           	psect	text3
   600   001248                     __ptext3:
   601                           	callstack 0
   602   001248                     _lcd_8bit_initialize:
   603                           	callstack 26
   604   001248                     
   605                           ;ECU_Layer/LCD/ecu_lcd.c: 212:     uint8 l_data_pins_counter = 0;
   606   001248  0E00               	movlw	0
   607   00124A  6E41               	movwf	lcd_8bit_initialize@l_data_pins_counter^0,c
   608                           
   609                           ;ECU_Layer/LCD/ecu_lcd.c: 213:     if(((void*)0) == _lcd_){
   610   00124C  503F               	movf	lcd_8bit_initialize@_lcd_^0,w,c
   611   00124E  A4D8               	btfss	status,2,c
   612   001250  EF2C  F009         	goto	u1081
   613   001254  EF2E  F009         	goto	u1080
   614   001258                     u1081:
   615   001258  EF32  F009         	goto	l2011
   616   00125C                     u1080:
   617   00125C                     
   618                           ;ECU_Layer/LCD/ecu_lcd.c: 214:         ret = (Std_ReturnType)0x00;
   619   00125C  0E00               	movlw	0
   620   00125E  6E42               	movwf	lcd_8bit_initialize@ret^0,c
   621                           
   622                           ;ECU_Layer/LCD/ecu_lcd.c: 215:     }
   623   001260  EF97  F009         	goto	l2047
   624   001264                     l2011:
   625                           
   626                           ;ECU_Layer/LCD/ecu_lcd.c: 217:         ret = gpio_pin_intialize(&(_lcd_->lcd_rs));
   627   001264  C03F  F037         	movff	lcd_8bit_initialize@_lcd_,gpio_pin_intialize@_pin_config
   628   001268  EC49  F00A         	call	_gpio_pin_intialize	;wreg free
   629   00126C  6E42               	movwf	lcd_8bit_initialize@ret^0,c
   630                           
   631                           ;ECU_Layer/LCD/ecu_lcd.c: 218:         ret = gpio_pin_intialize(&(_lcd_->lcd_en));
   632   00126E  283F               	incf	lcd_8bit_initialize@_lcd_^0,w,c
   633   001270  6E37               	movwf	gpio_pin_intialize@_pin_config^0,c
   634   001272  EC49  F00A         	call	_gpio_pin_intialize	;wreg free
   635   001276  6E42               	movwf	lcd_8bit_initialize@ret^0,c
   636   001278                     
   637                           ;ECU_Layer/LCD/ecu_lcd.c: 219:         for(l_data_pins_counter = 0 ; l_data_pins_counter
      +                          <8 ; l_data_pins_counter++){
   638   001278  0E00               	movlw	0
   639   00127A  6E41               	movwf	lcd_8bit_initialize@l_data_pins_counter^0,c
   640   00127C                     l2019:
   641   00127C  503F               	movf	lcd_8bit_initialize@_lcd_^0,w,c
   642   00127E  2441               	addwf	lcd_8bit_initialize@l_data_pins_counter^0,w,c
   643   001280  0F02               	addlw	2
   644   001282  6E37               	movwf	gpio_pin_intialize@_pin_config^0,c
   645   001284  EC49  F00A         	call	_gpio_pin_intialize	;wreg free
   646   001288                     
   647                           ;ECU_Layer/LCD/ecu_lcd.c: 221:         }
   648   001288  2A41               	incf	lcd_8bit_initialize@l_data_pins_counter^0,f,c
   649   00128A  0E07               	movlw	7
   650   00128C  6441               	cpfsgt	lcd_8bit_initialize@l_data_pins_counter^0,c
   651   00128E  EF4B  F009         	goto	u1091
   652   001292  EF4D  F009         	goto	u1090
   653   001296                     u1091:
   654   001296  EF3E  F009         	goto	l2019
   655   00129A                     u1090:
   656   00129A                     
   657                           ;ECU_Layer/LCD/ecu_lcd.c: 222:         _delay((unsigned long)((20)*(4000000UL/4000.0)));
   658   00129A  0E1A               	movlw	26
   659   00129C  6E40               	movwf	??_lcd_8bit_initialize^0,c
   660   00129E  0EF8               	movlw	248
   661   0012A0                     u1487:
   662   0012A0  2EE8               	decfsz	wreg,f,c
   663   0012A2  D7FE               	bra	u1487
   664   0012A4  2E40               	decfsz	??_lcd_8bit_initialize^0,f,c
   665   0012A6  D7FC               	bra	u1487
   666   0012A8  D000               	nop2	
   667   0012AA  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
   668   0012AE  0E38               	movlw	56
   669   0012B0  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   670   0012B2  EC0E  F00A         	call	_lcd_8bit_send_command	;wreg free
   671   0012B6                     
   672                           ;ECU_Layer/LCD/ecu_lcd.c: 224:         _delay((unsigned long)((5)*(4000000UL/4000.0)));
   673   0012B6  0E07               	movlw	7
   674   0012B8  6E40               	movwf	??_lcd_8bit_initialize^0,c
   675   0012BA  0E7D               	movlw	125
   676   0012BC                     u1497:
   677   0012BC  2EE8               	decfsz	wreg,f,c
   678   0012BE  D7FE               	bra	u1497
   679   0012C0  2E40               	decfsz	??_lcd_8bit_initialize^0,f,c
   680   0012C2  D7FC               	bra	u1497
   681   0012C4  0000               	nop	
   682   0012C6  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
   683   0012CA  0E38               	movlw	56
   684   0012CC  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   685   0012CE  EC0E  F00A         	call	_lcd_8bit_send_command	;wreg free
   686   0012D2                     
   687                           ;ECU_Layer/LCD/ecu_lcd.c: 226:         _delay((unsigned long)((150)*(4000000UL/4000000.0
      +                          )));
   688   0012D2  0E32               	movlw	50
   689   0012D4                     u1507:
   690   0012D4  2EE8               	decfsz	wreg,f,c
   691   0012D6  D7FE               	bra	u1507
   692   0012D8  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
   693   0012DC  0E38               	movlw	56
   694   0012DE  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   695   0012E0  EC0E  F00A         	call	_lcd_8bit_send_command	;wreg free
   696   0012E4  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
   697   0012E8  0E01               	movlw	1
   698   0012EA  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   699   0012EC  EC0E  F00A         	call	_lcd_8bit_send_command	;wreg free
   700   0012F0  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
   701   0012F4  0E02               	movlw	2
   702   0012F6  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   703   0012F8  EC0E  F00A         	call	_lcd_8bit_send_command	;wreg free
   704   0012FC  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
   705   001300  0E06               	movlw	6
   706   001302  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   707   001304  EC0E  F00A         	call	_lcd_8bit_send_command	;wreg free
   708   001308  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
   709   00130C  0E0C               	movlw	12
   710   00130E  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   711   001310  EC0E  F00A         	call	_lcd_8bit_send_command	;wreg free
   712   001314  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
   713   001318  0E38               	movlw	56
   714   00131A  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   715   00131C  EC0E  F00A         	call	_lcd_8bit_send_command	;wreg free
   716   001320                     
   717                           ;ECU_Layer/LCD/ecu_lcd.c: 234:         ret = lcd_8bit_send_command(_lcd_, 0x80);
   718   001320  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
   719   001324  0E80               	movlw	128
   720   001326  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   721   001328  EC0E  F00A         	call	_lcd_8bit_send_command	;wreg free
   722   00132C  6E42               	movwf	lcd_8bit_initialize@ret^0,c
   723   00132E                     l2047:
   724                           
   725                           ;ECU_Layer/LCD/ecu_lcd.c: 238:     return ret;
   726   00132E  5042               	movf	lcd_8bit_initialize@ret^0,w,c
   727   001330  0012               	return		;funcret
   728   001332                     __end_of_lcd_8bit_initialize:
   729                           	callstack 0
   730                           
   731 ;; *************** function _lcd_8bit_send_command *****************
   732 ;; Defined at:
   733 ;;		line 249 in file "ECU_Layer/LCD/ecu_lcd.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;  _lcd_           1   10[COMRAM] PTR const struct .
   736 ;;		 -> lcd_2(10), 
   737 ;;  command         1   11[COMRAM] unsigned char 
   738 ;; Auto vars:     Size  Location     Type
   739 ;;  l_pin_counte    1   15[COMRAM] unsigned char 
   740 ;;  ret             1   14[COMRAM] unsigned char 
   741 ;; Return value:  Size  Location     Type
   742 ;;                  1    wreg      unsigned char 
   743 ;; Registers used:
   744 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   745 ;; Tracked objects:
   746 ;;		On entry : 0/0
   747 ;;		On exit  : 0/0
   748 ;;		Unchanged: 0/0
   749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   750 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   751 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   752 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   753 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   754 ;;Total ram usage:        6 bytes
   755 ;; Hardware stack levels used: 1
   756 ;; Hardware stack levels required when called: 2
   757 ;; This function calls:
   758 ;;		_gpio_pin_write_logic
   759 ;;		_lcd_8bit_send_enable_signal
   760 ;; This function is called by:
   761 ;;		_lcd_8bit_initialize
   762 ;;		_lcd_8bit_set_cursor
   763 ;; This function uses a non-reentrant model
   764 ;;
   765                           
   766                           	psect	text4
   767   00141C                     __ptext4:
   768                           	callstack 0
   769   00141C                     _lcd_8bit_send_command:
   770                           	callstack 26
   771   00141C                     
   772                           ;ECU_Layer/LCD/ecu_lcd.c: 251:     uint8 l_pin_counter = 0;
   773   00141C  0E00               	movlw	0
   774   00141E  6E3E               	movwf	lcd_8bit_send_command@l_pin_counter^0,c
   775                           
   776                           ;ECU_Layer/LCD/ecu_lcd.c: 252:     if(((void*)0) == _lcd_){
   777   001420  5039               	movf	lcd_8bit_send_command@_lcd_^0,w,c
   778   001422  A4D8               	btfss	status,2,c
   779   001424  EF16  F00A         	goto	u1031
   780   001428  EF18  F00A         	goto	u1030
   781   00142C                     u1031:
   782   00142C  EF1C  F00A         	goto	l1943
   783   001430                     u1030:
   784   001430                     
   785                           ;ECU_Layer/LCD/ecu_lcd.c: 253:         ret = (Std_ReturnType)0x00;
   786   001430  0E00               	movlw	0
   787   001432  6E3D               	movwf	lcd_8bit_send_command@ret^0,c
   788                           
   789                           ;ECU_Layer/LCD/ecu_lcd.c: 254:     }
   790   001434  EF47  F00A         	goto	l1959
   791   001438                     l1943:
   792   001438  C039  F02F         	movff	lcd_8bit_send_command@_lcd_,gpio_pin_write_logic@_pin_config
   793   00143C  0E00               	movlw	0
   794   00143E  6E30               	movwf	gpio_pin_write_logic@logic^0,c
   795   001440  EC9C  F008         	call	_gpio_pin_write_logic	;wreg free
   796   001444                     
   797                           ;ECU_Layer/LCD/ecu_lcd.c: 257:         for(l_pin_counter = 0 ; l_pin_counter < 8 ; l_pin
      +                          _counter++){
   798   001444  0E00               	movlw	0
   799   001446  6E3E               	movwf	lcd_8bit_send_command@l_pin_counter^0,c
   800   001448                     l1951:
   801   001448  5039               	movf	lcd_8bit_send_command@_lcd_^0,w,c
   802   00144A  243E               	addwf	lcd_8bit_send_command@l_pin_counter^0,w,c
   803   00144C  0F02               	addlw	2
   804   00144E  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
   805   001450  C03E  F03B         	movff	lcd_8bit_send_command@l_pin_counter,??_lcd_8bit_send_command
   806   001454  C03A  F03C         	movff	lcd_8bit_send_command@command,??_lcd_8bit_send_command+1
   807   001458  2A3B               	incf	??_lcd_8bit_send_command^0,f,c
   808   00145A  EF31  F00A         	goto	u1044
   809   00145E                     u1045:
   810   00145E  90D8               	bcf	status,0,c
   811   001460  323C               	rrcf	(??_lcd_8bit_send_command+1)^0,f,c
   812   001462                     u1044:
   813   001462  2E3B               	decfsz	??_lcd_8bit_send_command^0,f,c
   814   001464  EF2F  F00A         	goto	u1045
   815   001468  503C               	movf	(??_lcd_8bit_send_command+1)^0,w,c
   816   00146A  0B01               	andlw	1
   817   00146C  6E30               	movwf	gpio_pin_write_logic@logic^0,c
   818   00146E  EC9C  F008         	call	_gpio_pin_write_logic	;wreg free
   819   001472                     
   820                           ;ECU_Layer/LCD/ecu_lcd.c: 259:         }
   821   001472  2A3E               	incf	lcd_8bit_send_command@l_pin_counter^0,f,c
   822   001474  0E07               	movlw	7
   823   001476  643E               	cpfsgt	lcd_8bit_send_command@l_pin_counter^0,c
   824   001478  EF40  F00A         	goto	u1051
   825   00147C  EF42  F00A         	goto	u1050
   826   001480                     u1051:
   827   001480  EF24  F00A         	goto	l1951
   828   001484                     u1050:
   829   001484                     
   830                           ;ECU_Layer/LCD/ecu_lcd.c: 260:         ret = lcd_8bit_send_enable_signal(_lcd_);
   831   001484  C039  F037         	movff	lcd_8bit_send_command@_lcd_,lcd_8bit_send_enable_signal@_lcd_
   832   001488  EC2E  F00B         	call	_lcd_8bit_send_enable_signal	;wreg free
   833   00148C  6E3D               	movwf	lcd_8bit_send_command@ret^0,c
   834   00148E                     l1959:
   835                           
   836                           ;ECU_Layer/LCD/ecu_lcd.c: 264:     return ret;
   837   00148E  503D               	movf	lcd_8bit_send_command@ret^0,w,c
   838   001490  0012               	return		;funcret
   839   001492                     __end_of_lcd_8bit_send_command:
   840                           	callstack 0
   841                           
   842 ;; *************** function _lcd_8bit_send_enable_signal *****************
   843 ;; Defined at:
   844 ;;		line 421 in file "ECU_Layer/LCD/ecu_lcd.c"
   845 ;; Parameters:    Size  Location     Type
   846 ;;  _lcd_           1    8[COMRAM] PTR const struct .
   847 ;;		 -> lcd_2(10), 
   848 ;; Auto vars:     Size  Location     Type
   849 ;;  ret             1    9[COMRAM] unsigned char 
   850 ;; Return value:  Size  Location     Type
   851 ;;                  1    wreg      unsigned char 
   852 ;; Registers used:
   853 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   854 ;; Tracked objects:
   855 ;;		On entry : 0/0
   856 ;;		On exit  : 0/0
   857 ;;		Unchanged: 0/0
   858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   859 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   860 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   862 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   863 ;;Total ram usage:        2 bytes
   864 ;; Hardware stack levels used: 1
   865 ;; Hardware stack levels required when called: 1
   866 ;; This function calls:
   867 ;;		_gpio_pin_write_logic
   868 ;; This function is called by:
   869 ;;		_lcd_8bit_send_command
   870 ;;		_lcd_8bit_send_char_data
   871 ;; This function uses a non-reentrant model
   872 ;;
   873                           
   874                           	psect	text5
   875   00165C                     __ptext5:
   876                           	callstack 0
   877   00165C                     _lcd_8bit_send_enable_signal:
   878                           	callstack 26
   879   00165C  2837               	incf	lcd_8bit_send_enable_signal@_lcd_^0,w,c
   880   00165E  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
   881   001660  0E01               	movlw	1
   882   001662  6E30               	movwf	gpio_pin_write_logic@logic^0,c
   883   001664  EC9C  F008         	call	_gpio_pin_write_logic	;wreg free
   884   001668                     
   885                           ;ECU_Layer/LCD/ecu_lcd.c: 424:     _delay((unsigned long)((5)*(4000000UL/4000000.0)));
   886   001668  D000               	nop2		;2 cycle nop
   887   00166A  D000               	nop2		;2 cycle nop
   888   00166C  0000               	nop	
   889   00166E                     
   890                           ;ECU_Layer/LCD/ecu_lcd.c: 425:     ret = gpio_pin_write_logic(&(_lcd_->lcd_en), GPIO_LOW
      +                          );
   891   00166E  2837               	incf	lcd_8bit_send_enable_signal@_lcd_^0,w,c
   892   001670  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
   893   001672  0E00               	movlw	0
   894   001674  6E30               	movwf	gpio_pin_write_logic@logic^0,c
   895   001676  EC9C  F008         	call	_gpio_pin_write_logic	;wreg free
   896   00167A  6E38               	movwf	lcd_8bit_send_enable_signal@ret^0,c
   897                           
   898                           ;ECU_Layer/LCD/ecu_lcd.c: 426:     return ret;
   899   00167C  5038               	movf	lcd_8bit_send_enable_signal@ret^0,w,c
   900   00167E  0012               	return		;funcret
   901   001680                     __end_of_lcd_8bit_send_enable_signal:
   902                           	callstack 0
   903                           
   904 ;; *************** function _lcd_4bit_initialize *****************
   905 ;; Defined at:
   906 ;;		line 27 in file "ECU_Layer/LCD/ecu_lcd.c"
   907 ;; Parameters:    Size  Location     Type
   908 ;;  _lcd_           1   14[COMRAM] PTR const struct .
   909 ;;		 -> lcd_1(6), 
   910 ;; Auto vars:     Size  Location     Type
   911 ;;  ret             1   17[COMRAM] unsigned char 
   912 ;;  l_data_pins_    1   16[COMRAM] unsigned char 
   913 ;; Return value:  Size  Location     Type
   914 ;;                  1    wreg      unsigned char 
   915 ;; Registers used:
   916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   917 ;; Tracked objects:
   918 ;;		On entry : 0/0
   919 ;;		On exit  : 0/0
   920 ;;		Unchanged: 0/0
   921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   922 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   923 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   924 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   925 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   926 ;;Total ram usage:        4 bytes
   927 ;; Hardware stack levels used: 1
   928 ;; Hardware stack levels required when called: 3
   929 ;; This function calls:
   930 ;;		_gpio_pin_intialize
   931 ;;		_lcd_4bit_send_command
   932 ;; This function is called by:
   933 ;;		_application_intialize
   934 ;; This function uses a non-reentrant model
   935 ;;
   936                           
   937                           	psect	text6
   938   001332                     __ptext6:
   939                           	callstack 0
   940   001332                     _lcd_4bit_initialize:
   941                           	callstack 26
   942   001332                     
   943                           ;ECU_Layer/LCD/ecu_lcd.c: 29:     uint8 l_data_pins_counter = 0;
   944   001332  0E00               	movlw	0
   945   001334  6E3F               	movwf	lcd_4bit_initialize@l_data_pins_counter^0,c
   946                           
   947                           ;ECU_Layer/LCD/ecu_lcd.c: 30:     if(((void*)0) == _lcd_){
   948   001336  503D               	movf	lcd_4bit_initialize@_lcd_^0,w,c
   949   001338  A4D8               	btfss	status,2,c
   950   00133A  EFA1  F009         	goto	u1061
   951   00133E  EFA3  F009         	goto	u1060
   952   001342                     u1061:
   953   001342  EFA7  F009         	goto	l1967
   954   001346                     u1060:
   955   001346                     
   956                           ;ECU_Layer/LCD/ecu_lcd.c: 31:         ret = (Std_ReturnType)0x00;
   957   001346  0E00               	movlw	0
   958   001348  6E40               	movwf	lcd_4bit_initialize@ret^0,c
   959                           
   960                           ;ECU_Layer/LCD/ecu_lcd.c: 32:     }
   961   00134A  EF0C  F00A         	goto	l2003
   962   00134E                     l1967:
   963                           
   964                           ;ECU_Layer/LCD/ecu_lcd.c: 34:         ret = gpio_pin_intialize(&(_lcd_->lcd_rs));
   965   00134E  C03D  F037         	movff	lcd_4bit_initialize@_lcd_,gpio_pin_intialize@_pin_config
   966   001352  EC49  F00A         	call	_gpio_pin_intialize	;wreg free
   967   001356  6E40               	movwf	lcd_4bit_initialize@ret^0,c
   968                           
   969                           ;ECU_Layer/LCD/ecu_lcd.c: 35:         ret = gpio_pin_intialize(&(_lcd_->lcd_en));
   970   001358  283D               	incf	lcd_4bit_initialize@_lcd_^0,w,c
   971   00135A  6E37               	movwf	gpio_pin_intialize@_pin_config^0,c
   972   00135C  EC49  F00A         	call	_gpio_pin_intialize	;wreg free
   973   001360  6E40               	movwf	lcd_4bit_initialize@ret^0,c
   974   001362                     
   975                           ;ECU_Layer/LCD/ecu_lcd.c: 36:         for(l_data_pins_counter = 0 ; l_data_pins_counter<
      +                          4 ; l_data_pins_counter++){
   976   001362  0E00               	movlw	0
   977   001364  6E3F               	movwf	lcd_4bit_initialize@l_data_pins_counter^0,c
   978   001366                     l1975:
   979   001366  503D               	movf	lcd_4bit_initialize@_lcd_^0,w,c
   980   001368  243F               	addwf	lcd_4bit_initialize@l_data_pins_counter^0,w,c
   981   00136A  0F02               	addlw	2
   982   00136C  6E37               	movwf	gpio_pin_intialize@_pin_config^0,c
   983   00136E  EC49  F00A         	call	_gpio_pin_intialize	;wreg free
   984   001372                     
   985                           ;ECU_Layer/LCD/ecu_lcd.c: 38:         }
   986   001372  2A3F               	incf	lcd_4bit_initialize@l_data_pins_counter^0,f,c
   987   001374  0E03               	movlw	3
   988   001376  643F               	cpfsgt	lcd_4bit_initialize@l_data_pins_counter^0,c
   989   001378  EFC0  F009         	goto	u1071
   990   00137C  EFC2  F009         	goto	u1070
   991   001380                     u1071:
   992   001380  EFB3  F009         	goto	l1975
   993   001384                     u1070:
   994   001384                     
   995                           ;ECU_Layer/LCD/ecu_lcd.c: 40:         _delay((unsigned long)((20)*(4000000UL/4000.0)));
   996   001384  0E1A               	movlw	26
   997   001386  6E3E               	movwf	??_lcd_4bit_initialize^0,c
   998   001388  0EF8               	movlw	248
   999   00138A                     u1517:
  1000   00138A  2EE8               	decfsz	wreg,f,c
  1001   00138C  D7FE               	bra	u1517
  1002   00138E  2E3E               	decfsz	??_lcd_4bit_initialize^0,f,c
  1003   001390  D7FC               	bra	u1517
  1004   001392  D000               	nop2	
  1005   001394  C03D  F03A         	movff	lcd_4bit_initialize@_lcd_,lcd_4bit_send_command@_lcd_
  1006   001398  0E38               	movlw	56
  1007   00139A  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1008   00139C  ECA6  F00A         	call	_lcd_4bit_send_command	;wreg free
  1009   0013A0                     
  1010                           ;ECU_Layer/LCD/ecu_lcd.c: 42:         _delay((unsigned long)((5)*(4000000UL/4000.0)));
  1011   0013A0  0E07               	movlw	7
  1012   0013A2  6E3E               	movwf	??_lcd_4bit_initialize^0,c
  1013   0013A4  0E7D               	movlw	125
  1014   0013A6                     u1527:
  1015   0013A6  2EE8               	decfsz	wreg,f,c
  1016   0013A8  D7FE               	bra	u1527
  1017   0013AA  2E3E               	decfsz	??_lcd_4bit_initialize^0,f,c
  1018   0013AC  D7FC               	bra	u1527
  1019   0013AE  0000               	nop	
  1020   0013B0  C03D  F03A         	movff	lcd_4bit_initialize@_lcd_,lcd_4bit_send_command@_lcd_
  1021   0013B4  0E38               	movlw	56
  1022   0013B6  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1023   0013B8  ECA6  F00A         	call	_lcd_4bit_send_command	;wreg free
  1024   0013BC                     
  1025                           ;ECU_Layer/LCD/ecu_lcd.c: 44:         _delay((unsigned long)((150)*(4000000UL/4000000.0)
      +                          ));
  1026   0013BC  0E32               	movlw	50
  1027   0013BE                     u1537:
  1028   0013BE  2EE8               	decfsz	wreg,f,c
  1029   0013C0  D7FE               	bra	u1537
  1030   0013C2  C03D  F03A         	movff	lcd_4bit_initialize@_lcd_,lcd_4bit_send_command@_lcd_
  1031   0013C6  0E38               	movlw	56
  1032   0013C8  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1033   0013CA  ECA6  F00A         	call	_lcd_4bit_send_command	;wreg free
  1034   0013CE  C03D  F03A         	movff	lcd_4bit_initialize@_lcd_,lcd_4bit_send_command@_lcd_
  1035   0013D2  0E01               	movlw	1
  1036   0013D4  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1037   0013D6  ECA6  F00A         	call	_lcd_4bit_send_command	;wreg free
  1038   0013DA  C03D  F03A         	movff	lcd_4bit_initialize@_lcd_,lcd_4bit_send_command@_lcd_
  1039   0013DE  0E02               	movlw	2
  1040   0013E0  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1041   0013E2  ECA6  F00A         	call	_lcd_4bit_send_command	;wreg free
  1042   0013E6  C03D  F03A         	movff	lcd_4bit_initialize@_lcd_,lcd_4bit_send_command@_lcd_
  1043   0013EA  0E06               	movlw	6
  1044   0013EC  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1045   0013EE  ECA6  F00A         	call	_lcd_4bit_send_command	;wreg free
  1046   0013F2  C03D  F03A         	movff	lcd_4bit_initialize@_lcd_,lcd_4bit_send_command@_lcd_
  1047   0013F6  0E0C               	movlw	12
  1048   0013F8  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1049   0013FA  ECA6  F00A         	call	_lcd_4bit_send_command	;wreg free
  1050   0013FE  C03D  F03A         	movff	lcd_4bit_initialize@_lcd_,lcd_4bit_send_command@_lcd_
  1051   001402  0E28               	movlw	40
  1052   001404  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1053   001406  ECA6  F00A         	call	_lcd_4bit_send_command	;wreg free
  1054   00140A                     
  1055                           ;ECU_Layer/LCD/ecu_lcd.c: 52:         ret = lcd_4bit_send_command(_lcd_, 0x80);
  1056   00140A  C03D  F03A         	movff	lcd_4bit_initialize@_lcd_,lcd_4bit_send_command@_lcd_
  1057   00140E  0E80               	movlw	128
  1058   001410  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1059   001412  ECA6  F00A         	call	_lcd_4bit_send_command	;wreg free
  1060   001416  6E40               	movwf	lcd_4bit_initialize@ret^0,c
  1061   001418                     l2003:
  1062                           
  1063                           ;ECU_Layer/LCD/ecu_lcd.c: 57:     return ret;
  1064   001418  5040               	movf	lcd_4bit_initialize@ret^0,w,c
  1065   00141A  0012               	return		;funcret
  1066   00141C                     __end_of_lcd_4bit_initialize:
  1067                           	callstack 0
  1068                           
  1069 ;; *************** function _lcd_4bit_send_command *****************
  1070 ;; Defined at:
  1071 ;;		line 68 in file "ECU_Layer/LCD/ecu_lcd.c"
  1072 ;; Parameters:    Size  Location     Type
  1073 ;;  _lcd_           1   11[COMRAM] PTR const struct .
  1074 ;;		 -> lcd_1(6), 
  1075 ;;  command         1   12[COMRAM] unsigned char 
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;  ret             1   13[COMRAM] unsigned char 
  1078 ;; Return value:  Size  Location     Type
  1079 ;;                  1    wreg      unsigned char 
  1080 ;; Registers used:
  1081 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1082 ;; Tracked objects:
  1083 ;;		On entry : 0/0
  1084 ;;		On exit  : 0/0
  1085 ;;		Unchanged: 0/0
  1086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1087 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1088 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1090 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1091 ;;Total ram usage:        3 bytes
  1092 ;; Hardware stack levels used: 1
  1093 ;; Hardware stack levels required when called: 2
  1094 ;; This function calls:
  1095 ;;		_gpio_pin_write_logic
  1096 ;;		_lcd_4bit_send_enable_signal
  1097 ;;		_lcd_send_4bits
  1098 ;; This function is called by:
  1099 ;;		_lcd_4bit_initialize
  1100 ;; This function uses a non-reentrant model
  1101 ;;
  1102                           
  1103                           	psect	text7
  1104   00154C                     __ptext7:
  1105                           	callstack 0
  1106   00154C                     _lcd_4bit_send_command:
  1107                           	callstack 26
  1108   00154C                     
  1109                           ;ECU_Layer/LCD/ecu_lcd.c: 70:     if(((void*)0) == _lcd_){
  1110   00154C  503A               	movf	lcd_4bit_send_command@_lcd_^0,w,c
  1111   00154E  A4D8               	btfss	status,2,c
  1112   001550  EFAC  F00A         	goto	u1021
  1113   001554  EFAE  F00A         	goto	u1020
  1114   001558                     u1021:
  1115   001558  EFB2  F00A         	goto	l1933
  1116   00155C                     u1020:
  1117   00155C                     
  1118                           ;ECU_Layer/LCD/ecu_lcd.c: 71:         ret = (Std_ReturnType)0x00;
  1119   00155C  0E00               	movlw	0
  1120   00155E  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  1121                           
  1122                           ;ECU_Layer/LCD/ecu_lcd.c: 72:     }
  1123   001560  EFD2  F00A         	goto	l1935
  1124   001564                     l1933:
  1125                           
  1126                           ;ECU_Layer/LCD/ecu_lcd.c: 74:         ret = gpio_pin_write_logic(&(_lcd_->lcd_rs), GPIO_
      +                          LOW);
  1127   001564  C03A  F02F         	movff	lcd_4bit_send_command@_lcd_,gpio_pin_write_logic@_pin_config
  1128   001568  0E00               	movlw	0
  1129   00156A  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1130   00156C  EC9C  F008         	call	_gpio_pin_write_logic	;wreg free
  1131   001570  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  1132                           
  1133                           ;ECU_Layer/LCD/ecu_lcd.c: 75:         ret = lcd_send_4bits(_lcd_ , command>>4);
  1134   001572  C03A  F037         	movff	lcd_4bit_send_command@_lcd_,lcd_send_4bits@_lcd_
  1135   001576  383B               	swapf	lcd_4bit_send_command@command^0,w,c
  1136   001578  0B0F               	andlw	15
  1137   00157A  6E38               	movwf	lcd_send_4bits@_data_command^0,c
  1138   00157C  ECD4  F00A         	call	_lcd_send_4bits	;wreg free
  1139   001580  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  1140                           
  1141                           ;ECU_Layer/LCD/ecu_lcd.c: 76:         ret = lcd_4bit_send_enable_signal(_lcd_);
  1142   001582  C03A  F037         	movff	lcd_4bit_send_command@_lcd_,lcd_4bit_send_enable_signal@_lcd_
  1143   001586  EC40  F00B         	call	_lcd_4bit_send_enable_signal	;wreg free
  1144   00158A  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  1145                           
  1146                           ;ECU_Layer/LCD/ecu_lcd.c: 77:         ret = lcd_send_4bits(_lcd_ , command);
  1147   00158C  C03A  F037         	movff	lcd_4bit_send_command@_lcd_,lcd_send_4bits@_lcd_
  1148   001590  C03B  F038         	movff	lcd_4bit_send_command@command,lcd_send_4bits@_data_command
  1149   001594  ECD4  F00A         	call	_lcd_send_4bits	;wreg free
  1150   001598  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  1151                           
  1152                           ;ECU_Layer/LCD/ecu_lcd.c: 78:         ret = lcd_4bit_send_enable_signal(_lcd_);
  1153   00159A  C03A  F037         	movff	lcd_4bit_send_command@_lcd_,lcd_4bit_send_enable_signal@_lcd_
  1154   00159E  EC40  F00B         	call	_lcd_4bit_send_enable_signal	;wreg free
  1155   0015A2  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  1156   0015A4                     l1935:
  1157                           
  1158                           ;ECU_Layer/LCD/ecu_lcd.c: 82:     return ret;
  1159   0015A4  503C               	movf	lcd_4bit_send_command@ret^0,w,c
  1160   0015A6  0012               	return		;funcret
  1161   0015A8                     __end_of_lcd_4bit_send_command:
  1162                           	callstack 0
  1163                           
  1164 ;; *************** function _lcd_send_4bits *****************
  1165 ;; Defined at:
  1166 ;;		line 402 in file "ECU_Layer/LCD/ecu_lcd.c"
  1167 ;; Parameters:    Size  Location     Type
  1168 ;;  _lcd_           1    8[COMRAM] PTR const struct .
  1169 ;;		 -> lcd_1(6), 
  1170 ;;  _data_comman    1    9[COMRAM] unsigned char 
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;  ret             1   10[COMRAM] unsigned char 
  1173 ;; Return value:  Size  Location     Type
  1174 ;;                  1    wreg      unsigned char 
  1175 ;; Registers used:
  1176 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1182 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1183 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1185 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1186 ;;Total ram usage:        3 bytes
  1187 ;; Hardware stack levels used: 1
  1188 ;; Hardware stack levels required when called: 1
  1189 ;; This function calls:
  1190 ;;		_gpio_pin_write_logic
  1191 ;; This function is called by:
  1192 ;;		_lcd_4bit_send_command
  1193 ;;		_lcd_4bit_send_char_data
  1194 ;; This function uses a non-reentrant model
  1195 ;;
  1196                           
  1197                           	psect	text8
  1198   0015A8                     __ptext8:
  1199                           	callstack 0
  1200   0015A8                     _lcd_send_4bits:
  1201                           	callstack 28
  1202   0015A8  5037               	movf	lcd_send_4bits@_lcd_^0,w,c
  1203   0015AA  0F02               	addlw	2
  1204   0015AC  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1205   0015AE  5038               	movf	lcd_send_4bits@_data_command^0,w,c
  1206   0015B0  0B01               	andlw	1
  1207   0015B2  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1208   0015B4  EC9C  F008         	call	_gpio_pin_write_logic	;wreg free
  1209   0015B8  5037               	movf	lcd_send_4bits@_lcd_^0,w,c
  1210   0015BA  0F03               	addlw	3
  1211   0015BC  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1212   0015BE  90D8               	bcf	status,0,c
  1213   0015C0  3038               	rrcf	lcd_send_4bits@_data_command^0,w,c
  1214   0015C2  0B01               	andlw	1
  1215   0015C4  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1216   0015C6  EC9C  F008         	call	_gpio_pin_write_logic	;wreg free
  1217   0015CA  5037               	movf	lcd_send_4bits@_lcd_^0,w,c
  1218   0015CC  0F04               	addlw	4
  1219   0015CE  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1220   0015D0  4038               	rrncf	lcd_send_4bits@_data_command^0,w,c
  1221   0015D2  42E8               	rrncf	wreg,f,c
  1222   0015D4  0B3F               	andlw	63
  1223   0015D6  0B01               	andlw	1
  1224   0015D8  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1225   0015DA  EC9C  F008         	call	_gpio_pin_write_logic	;wreg free
  1226   0015DE                     
  1227                           ;ECU_Layer/LCD/ecu_lcd.c: 407:     ret = gpio_pin_write_logic(&(_lcd_->lcd_data[3]), (_d
      +                          ata_command >> 3) & (uint8)0x01);
  1228   0015DE  5037               	movf	lcd_send_4bits@_lcd_^0,w,c
  1229   0015E0  0F05               	addlw	5
  1230   0015E2  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1231   0015E4  3838               	swapf	lcd_send_4bits@_data_command^0,w,c
  1232   0015E6  46E8               	rlncf	wreg,f,c
  1233   0015E8  0B1F               	andlw	31
  1234   0015EA  0B01               	andlw	1
  1235   0015EC  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1236   0015EE  EC9C  F008         	call	_gpio_pin_write_logic	;wreg free
  1237   0015F2  6E39               	movwf	lcd_send_4bits@ret^0,c
  1238                           
  1239                           ;ECU_Layer/LCD/ecu_lcd.c: 409:     return ret;
  1240   0015F4  5039               	movf	lcd_send_4bits@ret^0,w,c
  1241   0015F6  0012               	return		;funcret
  1242   0015F8                     __end_of_lcd_send_4bits:
  1243                           	callstack 0
  1244                           
  1245 ;; *************** function _lcd_4bit_send_enable_signal *****************
  1246 ;; Defined at:
  1247 ;;		line 413 in file "ECU_Layer/LCD/ecu_lcd.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;  _lcd_           1    8[COMRAM] PTR const struct .
  1250 ;;		 -> lcd_1(6), 
  1251 ;; Auto vars:     Size  Location     Type
  1252 ;;  ret             1    9[COMRAM] unsigned char 
  1253 ;; Return value:  Size  Location     Type
  1254 ;;                  1    wreg      unsigned char 
  1255 ;; Registers used:
  1256 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1257 ;; Tracked objects:
  1258 ;;		On entry : 0/0
  1259 ;;		On exit  : 0/0
  1260 ;;		Unchanged: 0/0
  1261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1262 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1263 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1265 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1266 ;;Total ram usage:        2 bytes
  1267 ;; Hardware stack levels used: 1
  1268 ;; Hardware stack levels required when called: 1
  1269 ;; This function calls:
  1270 ;;		_gpio_pin_write_logic
  1271 ;; This function is called by:
  1272 ;;		_lcd_4bit_send_command
  1273 ;;		_lcd_4bit_send_char_data
  1274 ;; This function uses a non-reentrant model
  1275 ;;
  1276                           
  1277                           	psect	text9
  1278   001680                     __ptext9:
  1279                           	callstack 0
  1280   001680                     _lcd_4bit_send_enable_signal:
  1281                           	callstack 28
  1282   001680  2837               	incf	lcd_4bit_send_enable_signal@_lcd_^0,w,c
  1283   001682  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1284   001684  0E01               	movlw	1
  1285   001686  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1286   001688  EC9C  F008         	call	_gpio_pin_write_logic	;wreg free
  1287   00168C                     
  1288                           ;ECU_Layer/LCD/ecu_lcd.c: 416:     _delay((unsigned long)((5)*(4000000UL/4000000.0)));
  1289   00168C  D000               	nop2		;2 cycle nop
  1290   00168E  D000               	nop2		;2 cycle nop
  1291   001690  0000               	nop	
  1292   001692                     
  1293                           ;ECU_Layer/LCD/ecu_lcd.c: 417:     ret = gpio_pin_write_logic(&(_lcd_->lcd_en), GPIO_LOW
      +                          );
  1294   001692  2837               	incf	lcd_4bit_send_enable_signal@_lcd_^0,w,c
  1295   001694  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1296   001696  0E00               	movlw	0
  1297   001698  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1298   00169A  EC9C  F008         	call	_gpio_pin_write_logic	;wreg free
  1299   00169E  6E38               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  1300                           
  1301                           ;ECU_Layer/LCD/ecu_lcd.c: 418:     return ret;
  1302   0016A0  5038               	movf	lcd_4bit_send_enable_signal@ret^0,w,c
  1303   0016A2  0012               	return		;funcret
  1304   0016A4                     __end_of_lcd_4bit_send_enable_signal:
  1305                           	callstack 0
  1306                           
  1307 ;; *************** function _gpio_pin_intialize *****************
  1308 ;; Defined at:
  1309 ;;		line 54 in file "MCAL_Layer/GPIO/hel_gpio.c"
  1310 ;; Parameters:    Size  Location     Type
  1311 ;;  _pin_config     1    8[COMRAM] PTR const struct .
  1312 ;;		 -> lcd_2$lcd_data(8), lcd_2(10), lcd_1$lcd_data(4), lcd_1(6), 
  1313 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  1314 ;; Auto vars:     Size  Location     Type
  1315 ;;  ret             1   10[COMRAM] unsigned char 
  1316 ;; Return value:  Size  Location     Type
  1317 ;;                  1    wreg      unsigned char 
  1318 ;; Registers used:
  1319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1320 ;; Tracked objects:
  1321 ;;		On entry : 0/0
  1322 ;;		On exit  : 0/0
  1323 ;;		Unchanged: 0/0
  1324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1325 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1326 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1327 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1328 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1329 ;;Total ram usage:        3 bytes
  1330 ;; Hardware stack levels used: 1
  1331 ;; Hardware stack levels required when called: 1
  1332 ;; This function calls:
  1333 ;;		_gpio_pin_direction_intialize
  1334 ;;		_gpio_pin_write_logic
  1335 ;; This function is called by:
  1336 ;;		_lcd_4bit_initialize
  1337 ;;		_lcd_8bit_initialize
  1338 ;;		_seven_segment_intialize
  1339 ;;		_dc_motor_initialize
  1340 ;;		_keypad_initialize
  1341 ;;		_led_initialize
  1342 ;;		_relay_initialize
  1343 ;; This function uses a non-reentrant model
  1344 ;;
  1345                           
  1346                           	psect	text10
  1347   001492                     __ptext10:
  1348                           	callstack 0
  1349   001492                     _gpio_pin_intialize:
  1350                           	callstack 27
  1351   001492                     
  1352                           ;MCAL_Layer/GPIO/hel_gpio.c: 56:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1){
  1353   001492  5037               	movf	gpio_pin_intialize@_pin_config^0,w,c
  1354   001494  B4D8               	btfsc	status,2,c
  1355   001496  EF4F  F00A         	goto	u1001
  1356   00149A  EF51  F00A         	goto	u1000
  1357   00149E                     u1001:
  1358   00149E  EF61  F00A         	goto	l1921
  1359   0014A2                     u1000:
  1360   0014A2  5037               	movf	gpio_pin_intialize@_pin_config^0,w,c
  1361   0014A4  6ED9               	movwf	fsr2l,c
  1362   0014A6  6ADA               	clrf	fsr2h,c
  1363   0014A8  30DF               	rrcf	223,w,c
  1364   0014AA  32E8               	rrcf	wreg,f,c
  1365   0014AC  32E8               	rrcf	wreg,f,c
  1366   0014AE  0B07               	andlw	7
  1367   0014B0  6E38               	movwf	??_gpio_pin_intialize^0,c
  1368   0014B2  0E07               	movlw	7
  1369   0014B4  6438               	cpfsgt	??_gpio_pin_intialize^0,c
  1370   0014B6  EF5F  F00A         	goto	u1011
  1371   0014BA  EF61  F00A         	goto	u1010
  1372   0014BE                     u1011:
  1373   0014BE  EF65  F00A         	goto	l1923
  1374   0014C2                     u1010:
  1375   0014C2                     l1921:
  1376                           
  1377                           ;MCAL_Layer/GPIO/hel_gpio.c: 57:         ret = (Std_ReturnType)0x00;
  1378   0014C2  0E00               	movlw	0
  1379   0014C4  6E39               	movwf	gpio_pin_intialize@ret^0,c
  1380                           
  1381                           ;MCAL_Layer/GPIO/hel_gpio.c: 58:     }
  1382   0014C6  EF76  F00A         	goto	l1925
  1383   0014CA                     l1923:
  1384                           
  1385                           ;MCAL_Layer/GPIO/hel_gpio.c: 60:         ret = gpio_pin_direction_intialize(_pin_config)
      +                          ;
  1386   0014CA  C037  F02F         	movff	gpio_pin_intialize@_pin_config,gpio_pin_direction_intialize@_pin_config
  1387   0014CE  EC09  F008         	call	_gpio_pin_direction_intialize	;wreg free
  1388   0014D2  6E39               	movwf	gpio_pin_intialize@ret^0,c
  1389                           
  1390                           ;MCAL_Layer/GPIO/hel_gpio.c: 61:         ret = gpio_pin_write_logic(_pin_config, _pin_co
      +                          nfig->logic);
  1391   0014D4  C037  F02F         	movff	gpio_pin_intialize@_pin_config,gpio_pin_write_logic@_pin_config
  1392   0014D8  5037               	movf	gpio_pin_intialize@_pin_config^0,w,c
  1393   0014DA  6ED9               	movwf	fsr2l,c
  1394   0014DC  6ADA               	clrf	fsr2h,c
  1395   0014DE  0E00               	movlw	0
  1396   0014E0  BEDF               	btfsc	indf2,7,c
  1397   0014E2  0E01               	movlw	1
  1398   0014E4  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1399   0014E6  EC9C  F008         	call	_gpio_pin_write_logic	;wreg free
  1400   0014EA  6E39               	movwf	gpio_pin_intialize@ret^0,c
  1401   0014EC                     l1925:
  1402                           
  1403                           ;MCAL_Layer/GPIO/hel_gpio.c: 63:     return ret;
  1404   0014EC  5039               	movf	gpio_pin_intialize@ret^0,w,c
  1405   0014EE  0012               	return		;funcret
  1406   0014F0                     __end_of_gpio_pin_intialize:
  1407                           	callstack 0
  1408                           
  1409 ;; *************** function _gpio_pin_write_logic *****************
  1410 ;; Defined at:
  1411 ;;		line 97 in file "MCAL_Layer/GPIO/hel_gpio.c"
  1412 ;; Parameters:    Size  Location     Type
  1413 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  1414 ;;		 -> lcd_2$lcd_data(8), lcd_2(10), lcd_1$lcd_data(4), lcd_1(6), 
  1415 ;;		 -> relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), relay_initialize@pin_obj(1), led_turn_off@pin_obj(1), 
  1416 ;;		 -> led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
  1417 ;;  logic           1    1[COMRAM] enum E2811
  1418 ;; Auto vars:     Size  Location     Type
  1419 ;;  ret             1    7[COMRAM] unsigned char 
  1420 ;; Return value:  Size  Location     Type
  1421 ;;                  1    wreg      unsigned char 
  1422 ;; Registers used:
  1423 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1424 ;; Tracked objects:
  1425 ;;		On entry : 0/0
  1426 ;;		On exit  : 0/0
  1427 ;;		Unchanged: 0/0
  1428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1429 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1430 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1431 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1432 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1433 ;;Total ram usage:        8 bytes
  1434 ;; Hardware stack levels used: 1
  1435 ;; This function calls:
  1436 ;;		Nothing
  1437 ;; This function is called by:
  1438 ;;		_gpio_pin_intialize
  1439 ;;		_lcd_4bit_send_command
  1440 ;;		_lcd_4bit_send_char_data
  1441 ;;		_lcd_8bit_send_command
  1442 ;;		_lcd_send_4bits
  1443 ;;		_lcd_4bit_send_enable_signal
  1444 ;;		_lcd_8bit_send_enable_signal
  1445 ;;		_seven_segment_write_number
  1446 ;;		_dc_motor_move_right
  1447 ;;		_dc_motor_move_left
  1448 ;;		_dc_motor_stop
  1449 ;;		_keypad_get_value
  1450 ;;		_led_turn_on
  1451 ;;		_led_turn_off
  1452 ;;		_relay_turn_on
  1453 ;;		_relay_turn_off
  1454 ;;		_lcd_8bit_send_char_data
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           
  1458                           	psect	text11
  1459   001138                     __ptext11:
  1460                           	callstack 0
  1461   001138                     _gpio_pin_write_logic:
  1462                           	callstack 28
  1463   001138                     
  1464                           ;MCAL_Layer/GPIO/hel_gpio.c: 98:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1465   001138  0E01               	movlw	1
  1466   00113A  6E36               	movwf	gpio_pin_write_logic@ret^0,c
  1467                           
  1468                           ;MCAL_Layer/GPIO/hel_gpio.c: 99:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1){
  1469   00113C  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1470   00113E  B4D8               	btfsc	status,2,c
  1471   001140  EFA4  F008         	goto	u901
  1472   001144  EFA6  F008         	goto	u900
  1473   001148                     u901:
  1474   001148  EFB6  F008         	goto	l1845
  1475   00114C                     u900:
  1476   00114C  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1477   00114E  6ED9               	movwf	fsr2l,c
  1478   001150  6ADA               	clrf	fsr2h,c
  1479   001152  30DF               	rrcf	223,w,c
  1480   001154  32E8               	rrcf	wreg,f,c
  1481   001156  32E8               	rrcf	wreg,f,c
  1482   001158  0B07               	andlw	7
  1483   00115A  6E31               	movwf	??_gpio_pin_write_logic^0,c
  1484   00115C  0E07               	movlw	7
  1485   00115E  6431               	cpfsgt	??_gpio_pin_write_logic^0,c
  1486   001160  EFB4  F008         	goto	u911
  1487   001164  EFB6  F008         	goto	u910
  1488   001168                     u911:
  1489   001168  EF0D  F009         	goto	l1853
  1490   00116C                     u910:
  1491   00116C                     l1845:
  1492                           
  1493                           ;MCAL_Layer/GPIO/hel_gpio.c: 100:         ret = (Std_ReturnType)0x00;
  1494   00116C  0E00               	movlw	0
  1495   00116E  6E36               	movwf	gpio_pin_write_logic@ret^0,c
  1496                           
  1497                           ;MCAL_Layer/GPIO/hel_gpio.c: 101:     }
  1498   001170  EF22  F009         	goto	l1855
  1499   001174                     l1847:
  1500                           
  1501                           ;MCAL_Layer/GPIO/hel_gpio.c: 105:                 (*lat_registers[_pin_config->port] &= 
      +                          ~((uint8) 1 << _pin_config->pin));
  1502   001174  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1503   001176  6ED9               	movwf	fsr2l,c
  1504   001178  6ADA               	clrf	fsr2h,c
  1505   00117A  30DF               	rrcf	223,w,c
  1506   00117C  32E8               	rrcf	wreg,f,c
  1507   00117E  32E8               	rrcf	wreg,f,c
  1508   001180  0B07               	andlw	7
  1509   001182  6E31               	movwf	??_gpio_pin_write_logic^0,c
  1510   001184  0E01               	movlw	1
  1511   001186  6E32               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1512   001188  2A31               	incf	??_gpio_pin_write_logic^0,f,c
  1513   00118A  EFC9  F008         	goto	u924
  1514   00118E                     u925:
  1515   00118E  90D8               	bcf	status,0,c
  1516   001190  3632               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1517   001192                     u924:
  1518   001192  2E31               	decfsz	??_gpio_pin_write_logic^0,f,c
  1519   001194  EFC7  F008         	goto	u925
  1520   001198  5032               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1521   00119A  0AFF               	xorlw	255
  1522   00119C  6E33               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1523   00119E  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1524   0011A0  6ED9               	movwf	fsr2l,c
  1525   0011A2  6ADA               	clrf	fsr2h,c
  1526   0011A4  50DF               	movf	223,w,c
  1527   0011A6  0B07               	andlw	7
  1528   0011A8  0D02               	mullw	2
  1529   0011AA  50F3               	movf	243,w,c
  1530   0011AC  0F0B               	addlw	low _lat_registers
  1531   0011AE  6ED9               	movwf	fsr2l,c
  1532   0011B0  6ADA               	clrf	fsr2h,c
  1533   0011B2  CFDE F034          	movff	postinc2,??_gpio_pin_write_logic+3
  1534   0011B6  CFDD F035          	movff	postdec2,??_gpio_pin_write_logic+4
  1535   0011BA  C034  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1536   0011BE  C035  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1537   0011C2  5033               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1538   0011C4  16DF               	andwf	indf2,f,c
  1539                           
  1540                           ;MCAL_Layer/GPIO/hel_gpio.c: 106:                 break;
  1541   0011C6  EF22  F009         	goto	l1855
  1542   0011CA                     l1849:
  1543                           
  1544                           ;MCAL_Layer/GPIO/hel_gpio.c: 108:                 (*lat_registers[_pin_config->port] |= 
      +                          ((uint8) 1 << _pin_config->pin));
  1545   0011CA  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1546   0011CC  6ED9               	movwf	fsr2l,c
  1547   0011CE  6ADA               	clrf	fsr2h,c
  1548   0011D0  30DF               	rrcf	223,w,c
  1549   0011D2  32E8               	rrcf	wreg,f,c
  1550   0011D4  32E8               	rrcf	wreg,f,c
  1551   0011D6  0B07               	andlw	7
  1552   0011D8  6E31               	movwf	??_gpio_pin_write_logic^0,c
  1553   0011DA  0E01               	movlw	1
  1554   0011DC  6E32               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1555   0011DE  2A31               	incf	??_gpio_pin_write_logic^0,f,c
  1556   0011E0  EFF4  F008         	goto	u934
  1557   0011E4                     u935:
  1558   0011E4  90D8               	bcf	status,0,c
  1559   0011E6  3632               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1560   0011E8                     u934:
  1561   0011E8  2E31               	decfsz	??_gpio_pin_write_logic^0,f,c
  1562   0011EA  EFF2  F008         	goto	u935
  1563   0011EE  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1564   0011F0  6ED9               	movwf	fsr2l,c
  1565   0011F2  6ADA               	clrf	fsr2h,c
  1566   0011F4  50DF               	movf	223,w,c
  1567   0011F6  0B07               	andlw	7
  1568   0011F8  0D02               	mullw	2
  1569   0011FA  50F3               	movf	243,w,c
  1570   0011FC  0F0B               	addlw	low _lat_registers
  1571   0011FE  6ED9               	movwf	fsr2l,c
  1572   001200  6ADA               	clrf	fsr2h,c
  1573   001202  CFDE F033          	movff	postinc2,??_gpio_pin_write_logic+2
  1574   001206  CFDD F034          	movff	postdec2,??_gpio_pin_write_logic+3
  1575   00120A  C033  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  1576   00120E  C034  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  1577   001212  5032               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1578   001214  12DF               	iorwf	indf2,f,c
  1579                           
  1580                           ;MCAL_Layer/GPIO/hel_gpio.c: 109:                 break;
  1581   001216  EF22  F009         	goto	l1855
  1582   00121A                     l1853:
  1583   00121A  5030               	movf	gpio_pin_write_logic@logic^0,w,c
  1584   00121C  6E31               	movwf	??_gpio_pin_write_logic^0,c
  1585   00121E  6A32               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1586                           
  1587                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1588                           ; Switch size 1, requested type "simple"
  1589                           ; Number of cases is 1, Range of values is 0 to 0
  1590                           ; switch strategies available:
  1591                           ; Name         Instructions Cycles
  1592                           ; simple_byte            4     3 (average)
  1593                           ;	Chosen strategy is simple_byte
  1594   001220  5032               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1595   001222  0A00               	xorlw	0	; case 0
  1596   001224  B4D8               	btfsc	status,2,c
  1597   001226  EF17  F009         	goto	l2413
  1598   00122A  EFB6  F008         	goto	l1845
  1599   00122E                     l2413:
  1600                           
  1601                           ; Switch size 1, requested type "simple"
  1602                           ; Number of cases is 2, Range of values is 0 to 1
  1603                           ; switch strategies available:
  1604                           ; Name         Instructions Cycles
  1605                           ; simple_byte            7     4 (average)
  1606                           ;	Chosen strategy is simple_byte
  1607   00122E  5031               	movf	??_gpio_pin_write_logic^0,w,c
  1608   001230  0A00               	xorlw	0	; case 0
  1609   001232  B4D8               	btfsc	status,2,c
  1610   001234  EFBA  F008         	goto	l1847
  1611   001238  0A01               	xorlw	1	; case 1
  1612   00123A  B4D8               	btfsc	status,2,c
  1613   00123C  EFE5  F008         	goto	l1849
  1614   001240  EFB6  F008         	goto	l1845
  1615   001244                     l1855:
  1616                           
  1617                           ;MCAL_Layer/GPIO/hel_gpio.c: 113:     return ret;
  1618   001244  5036               	movf	gpio_pin_write_logic@ret^0,w,c
  1619   001246  0012               	return		;funcret
  1620   001248                     __end_of_gpio_pin_write_logic:
  1621                           	callstack 0
  1622                           
  1623 ;; *************** function _gpio_pin_direction_intialize *****************
  1624 ;; Defined at:
  1625 ;;		line 26 in file "MCAL_Layer/GPIO/hel_gpio.c"
  1626 ;; Parameters:    Size  Location     Type
  1627 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  1628 ;;		 -> lcd_2$lcd_data(8), lcd_2(10), lcd_1$lcd_data(4), lcd_1(6), 
  1629 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  1630 ;; Auto vars:     Size  Location     Type
  1631 ;;  ret             1    6[COMRAM] unsigned char 
  1632 ;; Return value:  Size  Location     Type
  1633 ;;                  1    wreg      unsigned char 
  1634 ;; Registers used:
  1635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1636 ;; Tracked objects:
  1637 ;;		On entry : 0/0
  1638 ;;		On exit  : 0/0
  1639 ;;		Unchanged: 0/0
  1640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1641 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1642 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1643 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1644 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1645 ;;Total ram usage:        7 bytes
  1646 ;; Hardware stack levels used: 1
  1647 ;; This function calls:
  1648 ;;		Nothing
  1649 ;; This function is called by:
  1650 ;;		_gpio_pin_intialize
  1651 ;;		_keypad_initialize
  1652 ;;		_push_button_initialize
  1653 ;; This function uses a non-reentrant model
  1654 ;;
  1655                           
  1656                           	psect	text12
  1657   001012                     __ptext12:
  1658                           	callstack 0
  1659   001012                     _gpio_pin_direction_intialize:
  1660                           	callstack 27
  1661   001012                     
  1662                           ;MCAL_Layer/GPIO/hel_gpio.c: 27:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1663   001012  0E01               	movlw	1
  1664   001014  6E35               	movwf	gpio_pin_direction_intialize@ret^0,c
  1665                           
  1666                           ;MCAL_Layer/GPIO/hel_gpio.c: 28:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1){
  1667   001016  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1668   001018  B4D8               	btfsc	status,2,c
  1669   00101A  EF11  F008         	goto	u941
  1670   00101E  EF13  F008         	goto	u940
  1671   001022                     u941:
  1672   001022  EF23  F008         	goto	l1867
  1673   001026                     u940:
  1674   001026  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1675   001028  6ED9               	movwf	fsr2l,c
  1676   00102A  6ADA               	clrf	fsr2h,c
  1677   00102C  30DF               	rrcf	223,w,c
  1678   00102E  32E8               	rrcf	wreg,f,c
  1679   001030  32E8               	rrcf	wreg,f,c
  1680   001032  0B07               	andlw	7
  1681   001034  6E30               	movwf	??_gpio_pin_direction_intialize^0,c
  1682   001036  0E07               	movlw	7
  1683   001038  6430               	cpfsgt	??_gpio_pin_direction_intialize^0,c
  1684   00103A  EF21  F008         	goto	u951
  1685   00103E  EF23  F008         	goto	u950
  1686   001042                     u951:
  1687   001042  EF7A  F008         	goto	l1875
  1688   001046                     u950:
  1689   001046                     l1867:
  1690                           
  1691                           ;MCAL_Layer/GPIO/hel_gpio.c: 29:         ret = (Std_ReturnType)0x00;
  1692   001046  0E00               	movlw	0
  1693   001048  6E35               	movwf	gpio_pin_direction_intialize@ret^0,c
  1694                           
  1695                           ;MCAL_Layer/GPIO/hel_gpio.c: 30:     }
  1696   00104A  EF9A  F008         	goto	l1877
  1697   00104E                     l1869:
  1698                           
  1699                           ;MCAL_Layer/GPIO/hel_gpio.c: 34:                 (*tris_registers[_pin_config->port] &= 
      +                          ~((uint8) 1 << _pin_config->pin));
  1700   00104E  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1701   001050  6ED9               	movwf	fsr2l,c
  1702   001052  6ADA               	clrf	fsr2h,c
  1703   001054  30DF               	rrcf	223,w,c
  1704   001056  32E8               	rrcf	wreg,f,c
  1705   001058  32E8               	rrcf	wreg,f,c
  1706   00105A  0B07               	andlw	7
  1707   00105C  6E30               	movwf	??_gpio_pin_direction_intialize^0,c
  1708   00105E  0E01               	movlw	1
  1709   001060  6E31               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  1710   001062  2A30               	incf	??_gpio_pin_direction_intialize^0,f,c
  1711   001064  EF36  F008         	goto	u964
  1712   001068                     u965:
  1713   001068  90D8               	bcf	status,0,c
  1714   00106A  3631               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  1715   00106C                     u964:
  1716   00106C  2E30               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  1717   00106E  EF34  F008         	goto	u965
  1718   001072  5031               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1719   001074  0AFF               	xorlw	255
  1720   001076  6E32               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  1721   001078  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1722   00107A  6ED9               	movwf	fsr2l,c
  1723   00107C  6ADA               	clrf	fsr2h,c
  1724   00107E  50DF               	movf	223,w,c
  1725   001080  0B07               	andlw	7
  1726   001082  0D02               	mullw	2
  1727   001084  50F3               	movf	243,w,c
  1728   001086  0F15               	addlw	low _tris_registers
  1729   001088  6ED9               	movwf	fsr2l,c
  1730   00108A  6ADA               	clrf	fsr2h,c
  1731   00108C  CFDE F033          	movff	postinc2,??_gpio_pin_direction_intialize+3
  1732   001090  CFDD F034          	movff	postdec2,??_gpio_pin_direction_intialize+4
  1733   001094  C033  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  1734   001098  C034  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  1735   00109C  5032               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  1736   00109E  16DF               	andwf	indf2,f,c
  1737                           
  1738                           ;MCAL_Layer/GPIO/hel_gpio.c: 35:                 break;
  1739   0010A0  EF9A  F008         	goto	l1877
  1740   0010A4                     l1871:
  1741                           
  1742                           ;MCAL_Layer/GPIO/hel_gpio.c: 37:                 (*tris_registers[_pin_config->port] |= 
      +                          ((uint8) 1 << _pin_config->pin));
  1743   0010A4  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1744   0010A6  6ED9               	movwf	fsr2l,c
  1745   0010A8  6ADA               	clrf	fsr2h,c
  1746   0010AA  30DF               	rrcf	223,w,c
  1747   0010AC  32E8               	rrcf	wreg,f,c
  1748   0010AE  32E8               	rrcf	wreg,f,c
  1749   0010B0  0B07               	andlw	7
  1750   0010B2  6E30               	movwf	??_gpio_pin_direction_intialize^0,c
  1751   0010B4  0E01               	movlw	1
  1752   0010B6  6E31               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  1753   0010B8  2A30               	incf	??_gpio_pin_direction_intialize^0,f,c
  1754   0010BA  EF61  F008         	goto	u974
  1755   0010BE                     u975:
  1756   0010BE  90D8               	bcf	status,0,c
  1757   0010C0  3631               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  1758   0010C2                     u974:
  1759   0010C2  2E30               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  1760   0010C4  EF5F  F008         	goto	u975
  1761   0010C8  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1762   0010CA  6ED9               	movwf	fsr2l,c
  1763   0010CC  6ADA               	clrf	fsr2h,c
  1764   0010CE  50DF               	movf	223,w,c
  1765   0010D0  0B07               	andlw	7
  1766   0010D2  0D02               	mullw	2
  1767   0010D4  50F3               	movf	243,w,c
  1768   0010D6  0F15               	addlw	low _tris_registers
  1769   0010D8  6ED9               	movwf	fsr2l,c
  1770   0010DA  6ADA               	clrf	fsr2h,c
  1771   0010DC  CFDE F032          	movff	postinc2,??_gpio_pin_direction_intialize+2
  1772   0010E0  CFDD F033          	movff	postdec2,??_gpio_pin_direction_intialize+3
  1773   0010E4  C032  FFD9         	movff	??_gpio_pin_direction_intialize+2,fsr2l
  1774   0010E8  C033  FFDA         	movff	??_gpio_pin_direction_intialize+3,fsr2h
  1775   0010EC  5031               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1776   0010EE  12DF               	iorwf	indf2,f,c
  1777                           
  1778                           ;MCAL_Layer/GPIO/hel_gpio.c: 38:                 break;
  1779   0010F0  EF9A  F008         	goto	l1877
  1780   0010F4                     l1875:
  1781   0010F4  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1782   0010F6  6ED9               	movwf	fsr2l,c
  1783   0010F8  6ADA               	clrf	fsr2h,c
  1784   0010FA  BCDF               	btfsc	indf2,6,c
  1785   0010FC  EF82  F008         	goto	u981
  1786   001100  EF85  F008         	goto	u980
  1787   001104                     u981:
  1788   001104  0E01               	movlw	1
  1789   001106  EF86  F008         	goto	u990
  1790   00110A                     u980:
  1791   00110A  0E00               	movlw	0
  1792   00110C                     u990:
  1793   00110C  6E30               	movwf	??_gpio_pin_direction_intialize^0,c
  1794   00110E  6A31               	clrf	(??_gpio_pin_direction_intialize+1)^0,c
  1795                           
  1796                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1797                           ; Switch size 1, requested type "simple"
  1798                           ; Number of cases is 1, Range of values is 0 to 0
  1799                           ; switch strategies available:
  1800                           ; Name         Instructions Cycles
  1801                           ; simple_byte            4     3 (average)
  1802                           ;	Chosen strategy is simple_byte
  1803   001110  5031               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1804   001112  0A00               	xorlw	0	; case 0
  1805   001114  B4D8               	btfsc	status,2,c
  1806   001116  EF8F  F008         	goto	l2415
  1807   00111A  EF23  F008         	goto	l1867
  1808   00111E                     l2415:
  1809                           
  1810                           ; Switch size 1, requested type "simple"
  1811                           ; Number of cases is 2, Range of values is 0 to 1
  1812                           ; switch strategies available:
  1813                           ; Name         Instructions Cycles
  1814                           ; simple_byte            7     4 (average)
  1815                           ;	Chosen strategy is simple_byte
  1816   00111E  5030               	movf	??_gpio_pin_direction_intialize^0,w,c
  1817   001120  0A00               	xorlw	0	; case 0
  1818   001122  B4D8               	btfsc	status,2,c
  1819   001124  EF27  F008         	goto	l1869
  1820   001128  0A01               	xorlw	1	; case 1
  1821   00112A  B4D8               	btfsc	status,2,c
  1822   00112C  EF52  F008         	goto	l1871
  1823   001130  EF23  F008         	goto	l1867
  1824   001134                     l1877:
  1825                           
  1826                           ;MCAL_Layer/GPIO/hel_gpio.c: 42:     return ret;
  1827   001134  5035               	movf	gpio_pin_direction_intialize@ret^0,w,c
  1828   001136  0012               	return		;funcret
  1829   001138                     __end_of_gpio_pin_direction_intialize:
  1830                           	callstack 0
  1831                           
  1832                           	psect	rparam
  1833   000000                     
  1834                           	psect	config
  1835                           
  1836                           ; Padding undefined space
  1837   300000                     	org	3145728
  1838   300000  FF                 	db	255
  1839                           
  1840                           ;Config register CONFIG1H @ 0x300001
  1841                           ;	Oscillator Selection bits
  1842                           ;	OSC = HS, HS oscillator
  1843                           ;	Fail-Safe Clock Monitor Enable bit
  1844                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1845                           ;	Internal/External Oscillator Switchover bit
  1846                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1847   300001                     	org	3145729
  1848   300001  02                 	db	2
  1849                           
  1850                           ;Config register CONFIG2L @ 0x300002
  1851                           ;	Power-up Timer Enable bit
  1852                           ;	PWRT = OFF, PWRT disabled
  1853                           ;	Brown-out Reset Enable bits
  1854                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1855                           ;	Brown Out Reset Voltage bits
  1856                           ;	BORV = 1, 
  1857   300002                     	org	3145730
  1858   300002  09                 	db	9
  1859                           
  1860                           ;Config register CONFIG2H @ 0x300003
  1861                           ;	Watchdog Timer Enable bit
  1862                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1863                           ;	Watchdog Timer Postscale Select bits
  1864                           ;	WDTPS = 32768, 1:32768
  1865   300003                     	org	3145731
  1866   300003  1E                 	db	30
  1867                           
  1868                           ; Padding undefined space
  1869   300004                     	org	3145732
  1870   300004  FF                 	db	255
  1871                           
  1872                           ;Config register CONFIG3H @ 0x300005
  1873                           ;	CCP2 MUX bit
  1874                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1875                           ;	PORTB A/D Enable bit
  1876                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1877                           ;	Low-Power Timer1 Oscillator Enable bit
  1878                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1879                           ;	MCLR Pin Enable bit
  1880                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1881   300005                     	org	3145733
  1882   300005  81                 	db	129
  1883                           
  1884                           ;Config register CONFIG4L @ 0x300006
  1885                           ;	Stack Full/Underflow Reset Enable bit
  1886                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1887                           ;	Single-Supply ICSP Enable bit
  1888                           ;	LVP = OFF, Single-Supply ICSP disabled
  1889                           ;	Extended Instruction Set Enable bit
  1890                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1891                           ;	Background Debugger Enable bit
  1892                           ;	DEBUG = 0x1, unprogrammed default
  1893   300006                     	org	3145734
  1894   300006  81                 	db	129
  1895                           
  1896                           ; Padding undefined space
  1897   300007                     	org	3145735
  1898   300007  FF                 	db	255
  1899                           
  1900                           ;Config register CONFIG5L @ 0x300008
  1901                           ;	Code Protection bit
  1902                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1903                           ;	Code Protection bit
  1904                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1905                           ;	Code Protection bit
  1906                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1907                           ;	Code Protection bit
  1908                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1909   300008                     	org	3145736
  1910   300008  0F                 	db	15
  1911                           
  1912                           ;Config register CONFIG5H @ 0x300009
  1913                           ;	Boot Block Code Protection bit
  1914                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1915                           ;	Data EEPROM Code Protection bit
  1916                           ;	CPD = OFF, Data EEPROM not code-protected
  1917   300009                     	org	3145737
  1918   300009  C0                 	db	192
  1919                           
  1920                           ;Config register CONFIG6L @ 0x30000A
  1921                           ;	Write Protection bit
  1922                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1923                           ;	Write Protection bit
  1924                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1925                           ;	Write Protection bit
  1926                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1927                           ;	Write Protection bit
  1928                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1929   30000A                     	org	3145738
  1930   30000A  0F                 	db	15
  1931                           
  1932                           ;Config register CONFIG6H @ 0x30000B
  1933                           ;	Configuration Register Write Protection bit
  1934                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1935                           ;	Boot Block Write Protection bit
  1936                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1937                           ;	Data EEPROM Write Protection bit
  1938                           ;	WRTD = OFF, Data EEPROM not write-protected
  1939   30000B                     	org	3145739
  1940   30000B  E0                 	db	224
  1941                           
  1942                           ;Config register CONFIG7L @ 0x30000C
  1943                           ;	Table Read Protection bit
  1944                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1945                           ;	Table Read Protection bit
  1946                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1947                           ;	Table Read Protection bit
  1948                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1949                           ;	Table Read Protection bit
  1950                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1951   30000C                     	org	3145740
  1952   30000C  0F                 	db	15
  1953                           
  1954                           ;Config register CONFIG7H @ 0x30000D
  1955                           ;	Boot Block Table Read Protection bit
  1956                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1957   30000D                     	org	3145741
  1958   30000D  40                 	db	64
  1959                           tosu	equ	0xFFF
  1960                           tosh	equ	0xFFE
  1961                           tosl	equ	0xFFD
  1962                           stkptr	equ	0xFFC
  1963                           pclatu	equ	0xFFB
  1964                           pclath	equ	0xFFA
  1965                           pcl	equ	0xFF9
  1966                           tblptru	equ	0xFF8
  1967                           tblptrh	equ	0xFF7
  1968                           tblptrl	equ	0xFF6
  1969                           tablat	equ	0xFF5
  1970                           prodh	equ	0xFF4
  1971                           prodl	equ	0xFF3
  1972                           indf0	equ	0xFEF
  1973                           postinc0	equ	0xFEE
  1974                           postdec0	equ	0xFED
  1975                           preinc0	equ	0xFEC
  1976                           plusw0	equ	0xFEB
  1977                           fsr0h	equ	0xFEA
  1978                           fsr0l	equ	0xFE9
  1979                           wreg	equ	0xFE8
  1980                           indf1	equ	0xFE7
  1981                           postinc1	equ	0xFE6
  1982                           postdec1	equ	0xFE5
  1983                           preinc1	equ	0xFE4
  1984                           plusw1	equ	0xFE3
  1985                           fsr1h	equ	0xFE2
  1986                           fsr1l	equ	0xFE1
  1987                           bsr	equ	0xFE0
  1988                           indf2	equ	0xFDF
  1989                           postinc2	equ	0xFDE
  1990                           postdec2	equ	0xFDD
  1991                           preinc2	equ	0xFDC
  1992                           plusw2	equ	0xFDB
  1993                           fsr2h	equ	0xFDA
  1994                           fsr2l	equ	0xFD9
  1995                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    16
    Data        46
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     20      73
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    gpio_pin_direction_intialize@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), lcd_2(COMRAM[10]), lcd_2$lcd_data(COMRAM[8]), 
		 -> led_initialize@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_intialize@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), lcd_2(COMRAM[10]), lcd_2$lcd_data(COMRAM[8]), 
		 -> led_initialize@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), lcd_2(COMRAM[10]), lcd_2$lcd_data(COMRAM[8]), 
		 -> led_initialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 
		 -> relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    lcd_4bit_initialize@_lcd_	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_char_data@_lcd_	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_command@_lcd_	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_enable_signal@_lcd_	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_8bit_initialize@_lcd_	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_command@_lcd_	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_enable_signal@_lcd_	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_send_4bits@_lcd_	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 


Critical Paths under _main in COMRAM

    _lcd_4bit_send_char_data->_lcd_send_4bits
    _application_intialize->_lcd_8bit_initialize
    _lcd_8bit_initialize->_lcd_8bit_send_command
    _lcd_8bit_send_command->_lcd_8bit_send_enable_signal
    _lcd_8bit_send_enable_signal->_gpio_pin_write_logic
    _lcd_4bit_initialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_4bit_send_enable_signal->_gpio_pin_write_logic
    _gpio_pin_intialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   59938
              _application_intialize
            _lcd_4bit_send_char_data
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_char_data                              3     1      2   16214
                                             11 COMRAM     3     1      2
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                1     1      0   43722
                _lcd_4bit_initialize
                _lcd_8bit_initialize
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_initialize                                  4     3      1   19248
                                             16 COMRAM     4     3      1
                 _gpio_pin_intialize
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_command                                6     4      2   12207
                                             10 COMRAM     6     4      2
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (4) _lcd_8bit_send_enable_signal                          2     1      1    5112
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_initialize                                  4     3      1   24471
                                             14 COMRAM     4     3      1
                 _gpio_pin_intialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                3     1      2   17430
                                             11 COMRAM     3     1      2
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (2) _lcd_send_4bits                                       3     1      2    5702
                                              8 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_enable_signal                          2     1      1    5264
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_intialize                                   3     2      1    6574
                                              8 COMRAM     3     2      1
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_write_logic                                 8     6      2    4891
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_intialize                         7     6      1     407
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_intialize
     _lcd_4bit_initialize
       _gpio_pin_intialize
         _gpio_pin_direction_intialize
         _gpio_pin_write_logic
       _lcd_4bit_send_command
         _gpio_pin_write_logic
         _lcd_4bit_send_enable_signal
           _gpio_pin_write_logic
         _lcd_send_4bits
           _gpio_pin_write_logic
     _lcd_8bit_initialize
       _gpio_pin_intialize
       _lcd_8bit_send_command
         _gpio_pin_write_logic
         _lcd_8bit_send_enable_signal
           _gpio_pin_write_logic
   _lcd_4bit_send_char_data
     _gpio_pin_write_logic
     _lcd_4bit_send_enable_signal
     _lcd_send_4bits

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     14      49       1       57.5%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      49      39        0.0%
DATA                 0      0      49       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Nov 14 21:52:34 2023

                        ?_lcd_send_4bits 0037                                      l210 14EE  
                                    l203 1136                                      l321 15A6  
                                    l411 167E                                      l316 141A  
                                    l229 1246                                      l405 15F6  
                                    l326 154A                                      l408 16A2  
                                    l360 1490                                      l353 1330  
                                    l291 16CC                                      l285 16B4  
                                    l286 16B4                                      u900 114C  
                                    u901 1148                                      u910 116C  
                                    u911 1168                                      u940 1026  
                                    u924 1192                                      u941 1022  
                                    u925 118E                                      u950 1046  
                                    u934 11E8                                      u951 1042  
                                    u935 11E4                                      u980 110A  
                                    u964 106C                                      u981 1104  
                                    u965 1068                                      u990 110C  
                                    u974 10C2                                      u975 10BE  
    __end_of_lcd_4bit_send_enable_signal 16A4              _lcd_4bit_send_enable_signal 1680  
                    led_initialize@F2891 0049                                      wreg 0FE8  
                  relay_initialize@F2885 0045              lcd_send_4bits@_data_command 0038  
                                   l2001 140A                                     l2003 1418  
                                   l2011 1264                                     l2021 1288  
                                   l2013 1278                                     l2031 12D2  
                                   l2023 128A                                     l2007 1248  
                                   l2041 1308                                     l2033 12D8  
                                   l2025 129A                                     l2009 125C  
                                   l2043 1314                                     l2035 12E4  
                                   l2027 12AA                                     l2019 127C  
                                   l2051 16BC                                     l2045 1320  
                                   l2037 12F0                                     l2029 12B6  
                                   l2053 16BC                                     l2061 1508  
                                   l2039 12FC                                     l2047 132E  
                                   l2055 16C4                                     l2063 1548  
                                   l2057 14F0                                     l2059 1500  
                                   l2413 122E                                     l2341 16A4  
                                   l2415 111E                                     l2343 16A4  
                                   l2345 16A8                                     l1901 168C  
                                   l1903 1692                                     l1911 1668  
                                   l1841 1138                                     l1921 14C2  
                                   l1913 166E                                     l1843 114C  
                                   l1923 14CA                                     l1931 155C  
                                   l1907 165C                                     l1853 121A  
                                   l1845 116C                                     l1925 14EC  
                                   l1917 1492                                     l1933 1564  
                                   l1909 165C                                     l1941 1430  
                                   l1871 10A4                                     l1863 1012  
                                   l1847 1174                                     l1855 1244  
                                   l1919 14A2                                     l1935 15A4  
                                   l1951 1448                                     l1943 1438  
                                   l1865 1026                                     l1849 11CA  
                                   l1929 154C                                     l1953 1472  
                                   l1945 1444                                     l1875 10F4  
                                   l1867 1046                                     l1891 15CA  
                                   l1963 1332                                     l1955 1474  
                                   l1939 141C                                     l1869 104E  
                                   l1877 1134                                     l1893 15DE  
                                   l1885 15A8                                     l1981 1384  
                                   l1965 1346                                     l1957 1484  
                                   l1887 15A8                                     l1991 13CE  
                                   l1983 1394                                     l1975 1366  
                                   l1967 134E                                     l1959 148E  
                                   l1897 1680                                     l1889 15B8  
                                   l1993 13DA                                     l1985 13A0  
                                   l1977 1372                                     l1969 1362  
                                   l1899 1680                                     l1995 13E6  
                                   l1987 13BC                                     l1979 1374  
                                   l1997 13F2                                     l1989 13C2  
                                   l1999 13FE                                     u1000 14A2  
                                   u1001 149E                                     u1010 14C2  
                                   u1011 14BE                                     u1020 155C  
                                   u1100 1500                                     u1021 1558  
                                   u1101 14FC                                     u1030 1430  
                                   u1031 142C                                     u1050 1484  
                                   u1051 1480                                     u1060 1346  
                                   u1044 1462                                     u1061 1342  
                                   u1045 145E                                     u1070 1384  
                                   u1071 1380                                     u1080 125C  
     lcd_8bit_send_command@l_pin_counter 003E                                     u1081 1258  
                                   u1090 129A                                     u1091 1296  
                                   _LATA 0F89                                     _LATB 0F8A  
                                   _LATC 0F8B                                     _LATD 0F8C  
                                   _LATE 0F8D                                     u1507 12D4  
                                   u1517 138A                                     u1527 13A6  
                                   u1537 13BE                                     u1487 12A0  
                                   u1497 12BC                  ??_application_intialize 0043  
          ??_lcd_4bit_send_enable_signal 0038                                     _main 16A4  
                                   fsr2h 0FDA                                     indf2 0FDF  
                                   fsr1l 0FE1                                     fsr2l 0FD9  
                                   prodl 0FF3                                     start 0000  
          __end_of_lcd_8bit_send_command 1492                             ___param_bank 0000  
                  _lcd_4bit_send_command 154C                     _gpio_pin_write_logic 1138  
                                  ?_main 002F                      relay_turn_off@F2895 0043  
                                  _PORTA 0F80                                    _PORTB 0F81  
                                  _PORTC 0F82                                    _PORTD 0F83  
                                  _PORTE 0F84                                    _TRISA 0F92  
                                  _TRISB 0F93                                    _TRISC 0F94  
                                  _TRISD 0F95                                    _TRISE 0F96  
                                  _lcd_1 0029                                    _lcd_2 001F  
                                  tablat 0FF5                                    status 0FD8  
                        __initialization 15F8                             __end_of_main 16BC  
                  ?_gpio_pin_write_logic 002F                            _lat_registers 000B  
                                 ??_main 0043                            __activetblptr 0002  
                       led_turn_on@F2896 0048                   ?_lcd_4bit_send_command 003A  
                                 clear_0 161E                                   isa$std 0001  
gpio_pin_direction_intialize@_pin_config 002F                             __pdataCOMRAM 0001  
                           __mediumconst 0000                                   tblptrh 0FF7  
                                 tblptrl 0FF6                                   tblptru 0FF8  
             lcd_8bit_send_command@_lcd_ 0039                               __accesstop 0080  
                __end_of__initialization 1624                            ___rparam_used 0001  
                       ??_lcd_send_4bits 0039                  _lcd_4bit_send_char_data 14F0  
                 ??_gpio_pin_write_logic 0031                           __pcstackCOMRAM 002F  
               lcd_4bit_send_command@ret 003C                 lcd_8bit_initialize@_lcd_ 003F  
          __end_of_application_intialize 16CE                   lcd_8bit_initialize@ret 0042  
                      led_turn_off@F2901 0047                     led_turn_toggle@F2906 0046  
    __end_of_lcd_8bit_send_enable_signal 1680              _lcd_8bit_send_enable_signal 165C  
                             _btn_values 1001           lcd_8bit_send_enable_signal@ret 0038  
                         _tris_registers 0015                ??_lcd_4bit_send_char_data 003C  
          ??_lcd_8bit_send_enable_signal 0038   lcd_8bit_initialize@l_data_pins_counter 0041  
 lcd_4bit_initialize@l_data_pins_counter 003F                                  __Hparam 0000  
                                __Lparam 0000                    _lcd_8bit_send_command 141C  
                           __psmallconst 1000               __end_of_gpio_pin_intialize 14F0  
                                __pcinit 15F8                                  __ramtop 1000  
                                __ptext0 16A4                                  __ptext1 14F0  
                                __ptext2 16BC                                  __ptext3 1248  
                                __ptext4 141C                                  __ptext5 165C  
                                __ptext6 1332                                  __ptext7 154C  
                                __ptext8 15A8                                  __ptext9 1680  
                   end_of_initialization 1624                        lcd_send_4bits@ret 0039  
                          __Lmediumconst 0000                  ??_lcd_4bit_send_command 003C  
                  gpio_pin_intialize@ret 0039                                  postdec1 0FE5  
                                postdec2 0FDD                                  postinc0 0FEE  
                                postinc2 0FDE                      _lcd_4bit_initialize 1332  
        __end_of_lcd_4bit_send_char_data 154C            gpio_pin_intialize@_pin_config 0037  
             lcd_4bit_send_char_data@ret 003C     __end_of_gpio_pin_direction_intialize 1138  
           _gpio_pin_direction_intialize 1012                     ?_lcd_4bit_initialize 003D  
       lcd_8bit_send_enable_signal@_lcd_ 0037                   ?_lcd_8bit_send_command 0039  
                     relay_turn_on@F2890 0044                            __pidataCOMRAM 162E  
                    start_initialization 15F8             ?_lcd_4bit_send_enable_signal 0037  
                    _lcd_8bit_initialize 1248            ?_gpio_pin_direction_intialize 002F  
                  ??_lcd_4bit_initialize 003E                     ?_lcd_8bit_initialize 003F  
           lcd_4bit_send_command@command 003B                 lcd_8bit_send_command@ret 003D  
                            __pbssCOMRAM 0043          gpio_pin_direction_intialize@ret 0035  
                  ??_lcd_8bit_initialize 0040                    _application_intialize 16BC  
       lcd_4bit_send_enable_signal@_lcd_ 0037          gpio_pin_write_logic@_pin_config 002F  
              gpio_pin_write_logic@logic 0030                              __smallconst 1000  
                     _gpio_pin_intialize 1492           ??_gpio_pin_direction_intialize 0030  
                    ?_gpio_pin_intialize 0037            __end_of_lcd_4bit_send_command 15A8  
                   ??_gpio_pin_intialize 0038                      lcd_send_4bits@_lcd_ 0037  
                gpio_pin_write_logic@ret 0036                 ?_lcd_4bit_send_char_data 003A  
                              copy_data0 160C                  ??_lcd_8bit_send_command 003B  
                 ?_application_intialize 002F                                 __Hrparam 0000  
                               __Lrparam 0000                       __end_of_btn_values 1011  
                               __ptext10 1492                                 __ptext11 1138  
                               __ptext12 1012                                 isa$xinst 0000  
                         _lcd_send_4bits 15A8              __end_of_lcd_4bit_initialize 141C  
             lcd_4bit_send_command@_lcd_ 003A             __end_of_gpio_pin_write_logic 1248  
           ?_lcd_8bit_send_enable_signal 0037           lcd_4bit_send_enable_signal@ret 0038  
                 __end_of_lcd_send_4bits 15F8                           _port_registers 0001  
           lcd_4bit_send_char_data@_lcd_ 003A              __end_of_lcd_8bit_initialize 1332  
               lcd_4bit_initialize@_lcd_ 003D             lcd_8bit_send_command@command 003A  
            lcd_4bit_send_char_data@data 003B                   lcd_4bit_initialize@ret 0040  
