

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Nov 14 18:10:27 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24   000000                     
    25                           ; Generated 23/03/2023 GMT
    26                           ; 
    27                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F4620 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59   000000                     
    60                           	psect	idataCOMRAM
    61   00150A                     __pidataCOMRAM:
    62                           	callstack 0
    63                           
    64                           ;initializer for _port_registers
    65   00150A  80                 	db	128
    66   00150B  0F                 	db	15
    67   00150C  81                 	db	129
    68   00150D  0F                 	db	15
    69   00150E  82                 	db	130
    70   00150F  0F                 	db	15
    71   001510  83                 	db	131
    72   001511  0F                 	db	15
    73   001512  84                 	db	132
    74   001513  0F                 	db	15
    75                           
    76                           ;initializer for _lat_registers
    77   001514  89                 	db	137
    78   001515  0F                 	db	15
    79   001516  8A                 	db	138
    80   001517  0F                 	db	15
    81   001518  8B                 	db	139
    82   001519  0F                 	db	15
    83   00151A  8C                 	db	140
    84   00151B  0F                 	db	15
    85   00151C  8D                 	db	141
    86   00151D  0F                 	db	15
    87                           
    88                           ;initializer for _tris_registers
    89   00151E  92                 	db	146
    90   00151F  0F                 	db	15
    91   001520  93                 	db	147
    92   001521  0F                 	db	15
    93   001522  94                 	db	148
    94   001523  0F                 	db	15
    95   001524  95                 	db	149
    96   001525  0F                 	db	15
    97   001526  96                 	db	150
    98   001527  0F                 	db	15
    99                           
   100                           ;initializer for _lcd_2
   101   001528  32                 	db	50
   102   001529  3A                 	db	58
   103   00152A  03                 	db	3
   104   00152B  0B                 	db	11
   105   00152C  13                 	db	19
   106   00152D  1B                 	db	27
   107   00152E  23                 	db	35
   108   00152F  2B                 	db	43
   109   001530  33                 	db	51
   110   001531  3B                 	db	59
   111                           
   112                           ;initializer for _lcd_1
   113   001532  02                 	db	2
   114   001533  0A                 	db	10
   115   001534  12                 	db	18
   116   001535  1A                 	db	26
   117   001536  22                 	db	34
   118   001537  2A                 	db	42
   119                           
   120                           	psect	smallconst
   121   001000                     __psmallconst:
   122                           	callstack 0
   123   001000  00                 	db	0
   124   001001                     _btn_values:
   125                           	callstack 0
   126   001001  37                 	db	55
   127   001002  38                 	db	56
   128   001003  39                 	db	57
   129   001004  2F                 	db	47
   130   001005  34                 	db	52
   131   001006  35                 	db	53
   132   001007  36                 	db	54
   133   001008  2A                 	db	42
   134   001009  31                 	db	49
   135   00100A  32                 	db	50
   136   00100B  33                 	db	51
   137   00100C  2D                 	db	45
   138   00100D  23                 	db	35
   139   00100E  30                 	db	48
   140   00100F  3D                 	db	61
   141   001010  2B                 	db	43
   142   001011                     __end_of_btn_values:
   143                           	callstack 0
   144   000000                     _PORTE	set	3972
   145   000000                     _PORTD	set	3971
   146   000000                     _PORTC	set	3970
   147   000000                     _PORTB	set	3969
   148   000000                     _PORTA	set	3968
   149   000000                     _LATA	set	3977
   150   000000                     _TRISA	set	3986
   151   000000                     _TRISE	set	3990
   152   000000                     _TRISD	set	3989
   153   000000                     _TRISC	set	3988
   154   000000                     _TRISB	set	3987
   155   000000                     _LATE	set	3981
   156   000000                     _LATD	set	3980
   157   000000                     _LATC	set	3979
   158   000000                     _LATB	set	3978
   159   001011  00                 	db	0	; dummy byte at the end
   160   000000                     
   161                           ; #config settings
   162                           
   163                           	psect	cinit
   164   0014D4                     __pcinit:
   165                           	callstack 0
   166   0014D4                     start_initialization:
   167                           	callstack 0
   168   0014D4                     __initialization:
   169                           	callstack 0
   170                           
   171                           ; Initialize objects allocated to COMRAM (46 bytes)
   172                           ; load TBLPTR registers with __pidataCOMRAM
   173   0014D4  0E0A               	movlw	low __pidataCOMRAM
   174   0014D6  6EF6               	movwf	tblptrl,c
   175   0014D8  0E15               	movlw	high __pidataCOMRAM
   176   0014DA  6EF7               	movwf	tblptrh,c
   177   0014DC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   178   0014DE  6EF8               	movwf	tblptru,c
   179   0014E0  EE00  F001         	lfsr	0,__pdataCOMRAM
   180   0014E4  EE10 F02E          	lfsr	1,46
   181   0014E8                     copy_data0:
   182   0014E8  0009               	tblrd		*+
   183   0014EA  CFF5 FFEE          	movff	tablat,postinc0
   184   0014EE  50E5               	movf	postdec1,w,c
   185   0014F0  50E1               	movf	fsr1l,w,c
   186   0014F2  E1FA               	bnz	copy_data0
   187                           
   188                           ; Clear objects allocated to COMRAM (7 bytes)
   189   0014F4  EE00  F043         	lfsr	0,__pbssCOMRAM
   190   0014F8  0E07               	movlw	7
   191   0014FA                     clear_0:
   192   0014FA  6AEE               	clrf	postinc0,c
   193   0014FC  06E8               	decf	wreg,f,c
   194   0014FE  E1FD               	bnz	clear_0
   195   001500                     end_of_initialization:
   196                           	callstack 0
   197   001500                     __end_of__initialization:
   198                           	callstack 0
   199   001500  0E00               	movlw	low (__Lmediumconst shr (0+16))
   200   001502  6EF8               	movwf	tblptru,c
   201   001504  0100               	movlb	0
   202   001506  EFAE  F00A         	goto	_main	;jump to C main() function
   203                           
   204                           	psect	bssCOMRAM
   205   000043                     __pbssCOMRAM:
   206                           	callstack 0
   207   000043                     relay_turn_off@F2895:
   208                           	callstack 0
   209   000043                     	ds	1
   210   000044                     relay_turn_on@F2890:
   211                           	callstack 0
   212   000044                     	ds	1
   213   000045                     relay_initialize@F2885:
   214                           	callstack 0
   215   000045                     	ds	1
   216   000046                     led_turn_toggle@F2906:
   217                           	callstack 0
   218   000046                     	ds	1
   219   000047                     led_turn_off@F2901:
   220                           	callstack 0
   221   000047                     	ds	1
   222   000048                     led_turn_on@F2896:
   223                           	callstack 0
   224   000048                     	ds	1
   225   000049                     led_initialize@F2891:
   226                           	callstack 0
   227   000049                     	ds	1
   228                           
   229                           	psect	dataCOMRAM
   230   000001                     __pdataCOMRAM:
   231                           	callstack 0
   232   000001                     _port_registers:
   233                           	callstack 0
   234   000001                     	ds	10
   235   00000B                     _lat_registers:
   236                           	callstack 0
   237   00000B                     	ds	10
   238   000015                     _tris_registers:
   239                           	callstack 0
   240   000015                     	ds	10
   241   00001F                     _lcd_2:
   242                           	callstack 0
   243   00001F                     	ds	10
   244   000029                     _lcd_1:
   245                           	callstack 0
   246   000029                     	ds	6
   247                           
   248                           	psect	cstackCOMRAM
   249   00002F                     __pcstackCOMRAM:
   250                           	callstack 0
   251   00002F                     gpio_pin_direction_intialize@_pin_config:
   252                           	callstack 0
   253   00002F                     gpio_pin_write_logic@_pin_config:
   254                           	callstack 0
   255                           
   256                           ; 1 bytes @ 0x0
   257   00002F                     	ds	1
   258   000030                     ??_gpio_pin_direction_intialize:
   259   000030                     gpio_pin_write_logic@logic:
   260                           	callstack 0
   261                           
   262                           ; 1 bytes @ 0x1
   263   000030                     	ds	1
   264   000031                     ??_gpio_pin_write_logic:
   265                           
   266                           ; 1 bytes @ 0x2
   267   000031                     	ds	4
   268   000035                     gpio_pin_direction_intialize@ret:
   269                           	callstack 0
   270                           
   271                           ; 1 bytes @ 0x6
   272   000035                     	ds	1
   273   000036                     gpio_pin_write_logic@ret:
   274                           	callstack 0
   275                           
   276                           ; 1 bytes @ 0x7
   277   000036                     	ds	1
   278   000037                     gpio_pin_intialize@_pin_config:
   279                           	callstack 0
   280   000037                     lcd_8bit_send_enable_signal@_lcd_:
   281                           	callstack 0
   282                           
   283                           ; 1 bytes @ 0x8
   284   000037                     	ds	1
   285   000038                     ??_gpio_pin_intialize:
   286   000038                     lcd_8bit_send_enable_signal@ret:
   287                           	callstack 0
   288                           
   289                           ; 1 bytes @ 0x9
   290   000038                     	ds	1
   291   000039                     gpio_pin_intialize@ret:
   292                           	callstack 0
   293   000039                     lcd_8bit_send_command@_lcd_:
   294                           	callstack 0
   295   000039                     lcd_8bit_send_char_data@_lcd_:
   296                           	callstack 0
   297                           
   298                           ; 1 bytes @ 0xA
   299   000039                     	ds	1
   300   00003A                     lcd_4bit_initialize@_lcd_:
   301                           	callstack 0
   302   00003A                     lcd_8bit_send_command@command:
   303                           	callstack 0
   304   00003A                     lcd_8bit_send_char_data@data:
   305                           	callstack 0
   306                           
   307                           ; 1 bytes @ 0xB
   308   00003A                     	ds	1
   309   00003B                     ??_lcd_8bit_send_char_data:
   310   00003B                     ??_lcd_8bit_send_command:
   311   00003B                     lcd_4bit_initialize@ret:
   312                           	callstack 0
   313                           
   314                           ; 1 bytes @ 0xC
   315   00003B                     	ds	1
   316   00003C                     lcd_4bit_initialize@l_data_pins_counter:
   317                           	callstack 0
   318                           
   319                           ; 1 bytes @ 0xD
   320   00003C                     	ds	1
   321   00003D                     lcd_8bit_send_command@ret:
   322                           	callstack 0
   323   00003D                     lcd_8bit_send_char_data@ret:
   324                           	callstack 0
   325                           
   326                           ; 1 bytes @ 0xE
   327   00003D                     	ds	1
   328   00003E                     lcd_8bit_send_command@l_pin_counter:
   329                           	callstack 0
   330   00003E                     lcd_8bit_send_char_data@l_pin_counter:
   331                           	callstack 0
   332                           
   333                           ; 1 bytes @ 0xF
   334   00003E                     	ds	1
   335   00003F                     lcd_8bit_initialize@_lcd_:
   336                           	callstack 0
   337                           
   338                           ; 1 bytes @ 0x10
   339   00003F                     	ds	1
   340   000040                     ??_lcd_8bit_initialize:
   341                           
   342                           ; 1 bytes @ 0x11
   343   000040                     	ds	1
   344   000041                     lcd_8bit_initialize@l_data_pins_counter:
   345                           	callstack 0
   346                           
   347                           ; 1 bytes @ 0x12
   348   000041                     	ds	1
   349   000042                     lcd_8bit_initialize@ret:
   350                           	callstack 0
   351                           
   352                           ; 1 bytes @ 0x13
   353   000042                     	ds	1
   354   000043                     
   355                           ; 1 bytes @ 0x14
   356 ;;
   357 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   358 ;;
   359 ;; *************** function _main *****************
   360 ;; Defined at:
   361 ;;		line 98 in file "application.c"
   362 ;; Parameters:    Size  Location     Type
   363 ;;		None
   364 ;; Auto vars:     Size  Location     Type
   365 ;;  ret             1    0        unsigned char 
   366 ;; Return value:  Size  Location     Type
   367 ;;                  2  284[None  ] int 
   368 ;; Registers used:
   369 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   370 ;; Tracked objects:
   371 ;;		On entry : 0/0
   372 ;;		On exit  : 0/0
   373 ;;		Unchanged: 0/0
   374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   379 ;;Total ram usage:        0 bytes
   380 ;; Hardware stack levels required when called: 5
   381 ;; This function calls:
   382 ;;		_application_intialize
   383 ;;		_lcd_8bit_send_char_data
   384 ;; This function is called by:
   385 ;;		Startup code after reset
   386 ;; This function uses a non-reentrant model
   387 ;;
   388                           
   389                           	psect	text0
   390   00155C                     __ptext0:
   391                           	callstack 0
   392   00155C                     _main:
   393                           	callstack 26
   394   00155C                     
   395                           ;application.c: 100:     application_intialize();
   396   00155C  ECBA  F00A         	call	_application_intialize	;wreg free
   397   001560                     l2201:
   398   001560  0E1F               	movlw	low _lcd_2
   399   001562  6E39               	movwf	lcd_8bit_send_char_data@_lcd_^0,c
   400   001564  0E41               	movlw	65
   401   001566  6E3A               	movwf	lcd_8bit_send_char_data@data^0,c
   402   001568  EC99  F009         	call	_lcd_8bit_send_char_data	;wreg free
   403   00156C  EFB0  F00A         	goto	l2201
   404   001570  EF00  F000         	goto	start
   405   001574                     __end_of_main:
   406                           	callstack 0
   407                           
   408 ;; *************** function _lcd_8bit_send_char_data *****************
   409 ;; Defined at:
   410 ;;		line 257 in file "ECU_Layer/LCD/ecu_lcd.c"
   411 ;; Parameters:    Size  Location     Type
   412 ;;  _lcd_           1   10[COMRAM] PTR const struct .
   413 ;;		 -> lcd_2(10), 
   414 ;;  data            1   11[COMRAM] unsigned char 
   415 ;; Auto vars:     Size  Location     Type
   416 ;;  l_pin_counte    1   15[COMRAM] unsigned char 
   417 ;;  ret             1   14[COMRAM] unsigned char 
   418 ;; Return value:  Size  Location     Type
   419 ;;                  1    wreg      unsigned char 
   420 ;; Registers used:
   421 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   422 ;; Tracked objects:
   423 ;;		On entry : 0/0
   424 ;;		On exit  : 0/0
   425 ;;		Unchanged: 0/0
   426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   427 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   428 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   429 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   430 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   431 ;;Total ram usage:        6 bytes
   432 ;; Hardware stack levels used: 1
   433 ;; Hardware stack levels required when called: 2
   434 ;; This function calls:
   435 ;;		_gpio_pin_write_logic
   436 ;;		_lcd_8bit_send_enable_signal
   437 ;; This function is called by:
   438 ;;		_main
   439 ;; This function uses a non-reentrant model
   440 ;;
   441                           
   442                           	psect	text1
   443   001332                     __ptext1:
   444                           	callstack 0
   445   001332                     _lcd_8bit_send_char_data:
   446                           	callstack 28
   447   001332                     
   448                           ;ECU_Layer/LCD/ecu_lcd.c: 259:     uint8 l_pin_counter = 0;
   449   001332  0E00               	movlw	0
   450   001334  6E3E               	movwf	lcd_8bit_send_char_data@l_pin_counter^0,c
   451                           
   452                           ;ECU_Layer/LCD/ecu_lcd.c: 260:     if(((void*)0) == _lcd_){
   453   001336  5039               	movf	lcd_8bit_send_char_data@_lcd_^0,w,c
   454   001338  A4D8               	btfss	status,2,c
   455   00133A  EFA1  F009         	goto	u1071
   456   00133E  EFA3  F009         	goto	u1070
   457   001342                     u1071:
   458   001342  EFA7  F009         	goto	l1929
   459   001346                     u1070:
   460   001346                     
   461                           ;ECU_Layer/LCD/ecu_lcd.c: 261:         ret = (Std_ReturnType)0x00;
   462   001346  0E00               	movlw	0
   463   001348  6E3D               	movwf	lcd_8bit_send_char_data@ret^0,c
   464                           
   465                           ;ECU_Layer/LCD/ecu_lcd.c: 262:     }
   466   00134A  EFD2  F009         	goto	l1945
   467   00134E                     l1929:
   468   00134E  C039  F02F         	movff	lcd_8bit_send_char_data@_lcd_,gpio_pin_write_logic@_pin_config
   469   001352  0E01               	movlw	1
   470   001354  6E30               	movwf	gpio_pin_write_logic@logic^0,c
   471   001356  EC9C  F008         	call	_gpio_pin_write_logic	;wreg free
   472   00135A                     
   473                           ;ECU_Layer/LCD/ecu_lcd.c: 265:         for(l_pin_counter = 0 ; l_pin_counter < 8 ; l_pin
      +                          _counter++){
   474   00135A  0E00               	movlw	0
   475   00135C  6E3E               	movwf	lcd_8bit_send_char_data@l_pin_counter^0,c
   476   00135E                     l1937:
   477   00135E  5039               	movf	lcd_8bit_send_char_data@_lcd_^0,w,c
   478   001360  243E               	addwf	lcd_8bit_send_char_data@l_pin_counter^0,w,c
   479   001362  0F02               	addlw	2
   480   001364  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
   481   001366  C03E  F03B         	movff	lcd_8bit_send_char_data@l_pin_counter,??_lcd_8bit_send_char_data
   482   00136A  C03A  F03C         	movff	lcd_8bit_send_char_data@data,??_lcd_8bit_send_char_data+1
   483   00136E  2A3B               	incf	??_lcd_8bit_send_char_data^0,f,c
   484   001370  EFBC  F009         	goto	u1084
   485   001374                     u1085:
   486   001374  90D8               	bcf	status,0,c
   487   001376  323C               	rrcf	(??_lcd_8bit_send_char_data+1)^0,f,c
   488   001378                     u1084:
   489   001378  2E3B               	decfsz	??_lcd_8bit_send_char_data^0,f,c
   490   00137A  EFBA  F009         	goto	u1085
   491   00137E  503C               	movf	(??_lcd_8bit_send_char_data+1)^0,w,c
   492   001380  0B01               	andlw	1
   493   001382  6E30               	movwf	gpio_pin_write_logic@logic^0,c
   494   001384  EC9C  F008         	call	_gpio_pin_write_logic	;wreg free
   495   001388                     
   496                           ;ECU_Layer/LCD/ecu_lcd.c: 267:         }
   497   001388  2A3E               	incf	lcd_8bit_send_char_data@l_pin_counter^0,f,c
   498   00138A  0E07               	movlw	7
   499   00138C  643E               	cpfsgt	lcd_8bit_send_char_data@l_pin_counter^0,c
   500   00138E  EFCB  F009         	goto	u1091
   501   001392  EFCD  F009         	goto	u1090
   502   001396                     u1091:
   503   001396  EFAF  F009         	goto	l1937
   504   00139A                     u1090:
   505   00139A                     
   506                           ;ECU_Layer/LCD/ecu_lcd.c: 268:         ret = lcd_8bit_send_enable_signal(_lcd_);
   507   00139A  C039  F037         	movff	lcd_8bit_send_char_data@_lcd_,lcd_8bit_send_enable_signal@_lcd_
   508   00139E  EC9C  F00A         	call	_lcd_8bit_send_enable_signal	;wreg free
   509   0013A2  6E3D               	movwf	lcd_8bit_send_char_data@ret^0,c
   510   0013A4                     l1945:
   511                           
   512                           ;ECU_Layer/LCD/ecu_lcd.c: 272:     return ret;
   513   0013A4  503D               	movf	lcd_8bit_send_char_data@ret^0,w,c
   514   0013A6  0012               	return		;funcret
   515   0013A8                     __end_of_lcd_8bit_send_char_data:
   516                           	callstack 0
   517                           
   518 ;; *************** function _application_intialize *****************
   519 ;; Defined at:
   520 ;;		line 111 in file "application.c"
   521 ;; Parameters:    Size  Location     Type
   522 ;;		None
   523 ;; Auto vars:     Size  Location     Type
   524 ;;  ret             1    0        unsigned char 
   525 ;; Return value:  Size  Location     Type
   526 ;;                  1    wreg      void 
   527 ;; Registers used:
   528 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   529 ;; Tracked objects:
   530 ;;		On entry : 0/0
   531 ;;		On exit  : 0/0
   532 ;;		Unchanged: 0/0
   533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   538 ;;Total ram usage:        0 bytes
   539 ;; Hardware stack levels used: 1
   540 ;; Hardware stack levels required when called: 4
   541 ;; This function calls:
   542 ;;		_lcd_4bit_initialize
   543 ;;		_lcd_8bit_initialize
   544 ;; This function is called by:
   545 ;;		_main
   546 ;; This function uses a non-reentrant model
   547 ;;
   548                           
   549                           	psect	text2
   550   001574                     __ptext2:
   551                           	callstack 0
   552   001574                     _application_intialize:
   553                           	callstack 26
   554   001574  0E29               	movlw	low _lcd_1
   555   001576  6E3A               	movwf	lcd_4bit_initialize@_lcd_^0,c
   556   001578  EC3E  F00A         	call	_lcd_4bit_initialize	;wreg free
   557   00157C  0E1F               	movlw	low _lcd_2
   558   00157E  6E3F               	movwf	lcd_8bit_initialize@_lcd_^0,c
   559   001580  EC24  F009         	call	_lcd_8bit_initialize	;wreg free
   560   001584  0012               	return		;funcret
   561   001586                     __end_of_application_intialize:
   562                           	callstack 0
   563                           
   564 ;; *************** function _lcd_8bit_initialize *****************
   565 ;; Defined at:
   566 ;;		line 192 in file "ECU_Layer/LCD/ecu_lcd.c"
   567 ;; Parameters:    Size  Location     Type
   568 ;;  _lcd_           1   16[COMRAM] PTR const struct .
   569 ;;		 -> lcd_2(10), 
   570 ;; Auto vars:     Size  Location     Type
   571 ;;  ret             1   19[COMRAM] unsigned char 
   572 ;;  l_data_pins_    1   18[COMRAM] unsigned char 
   573 ;; Return value:  Size  Location     Type
   574 ;;                  1    wreg      unsigned char 
   575 ;; Registers used:
   576 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   577 ;; Tracked objects:
   578 ;;		On entry : 0/0
   579 ;;		On exit  : 0/0
   580 ;;		Unchanged: 0/0
   581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   582 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   583 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   584 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   585 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   586 ;;Total ram usage:        4 bytes
   587 ;; Hardware stack levels used: 1
   588 ;; Hardware stack levels required when called: 3
   589 ;; This function calls:
   590 ;;		_gpio_pin_intialize
   591 ;;		_lcd_8bit_send_command
   592 ;; This function is called by:
   593 ;;		_application_intialize
   594 ;; This function uses a non-reentrant model
   595 ;;
   596                           
   597                           	psect	text3
   598   001248                     __ptext3:
   599                           	callstack 0
   600   001248                     _lcd_8bit_initialize:
   601                           	callstack 26
   602   001248                     
   603                           ;ECU_Layer/LCD/ecu_lcd.c: 194:     uint8 l_data_pins_counter = 0;
   604   001248  0E00               	movlw	0
   605   00124A  6E41               	movwf	lcd_8bit_initialize@l_data_pins_counter^0,c
   606                           
   607                           ;ECU_Layer/LCD/ecu_lcd.c: 195:     if(((void*)0) == _lcd_){
   608   00124C  503F               	movf	lcd_8bit_initialize@_lcd_^0,w,c
   609   00124E  A4D8               	btfss	status,2,c
   610   001250  EF2C  F009         	goto	u1051
   611   001254  EF2E  F009         	goto	u1050
   612   001258                     u1051:
   613   001258  EF32  F009         	goto	l1879
   614   00125C                     u1050:
   615   00125C                     
   616                           ;ECU_Layer/LCD/ecu_lcd.c: 196:         ret = (Std_ReturnType)0x00;
   617   00125C  0E00               	movlw	0
   618   00125E  6E42               	movwf	lcd_8bit_initialize@ret^0,c
   619                           
   620                           ;ECU_Layer/LCD/ecu_lcd.c: 197:     }
   621   001260  EF97  F009         	goto	l1915
   622   001264                     l1879:
   623                           
   624                           ;ECU_Layer/LCD/ecu_lcd.c: 199:         ret = gpio_pin_intialize(&(_lcd_->lcd_rs));
   625   001264  C03F  F037         	movff	lcd_8bit_initialize@_lcd_,gpio_pin_intialize@_pin_config
   626   001268  EC0F  F00A         	call	_gpio_pin_intialize	;wreg free
   627   00126C  6E42               	movwf	lcd_8bit_initialize@ret^0,c
   628                           
   629                           ;ECU_Layer/LCD/ecu_lcd.c: 200:         ret = gpio_pin_intialize(&(_lcd_->lcd_en));
   630   00126E  283F               	incf	lcd_8bit_initialize@_lcd_^0,w,c
   631   001270  6E37               	movwf	gpio_pin_intialize@_pin_config^0,c
   632   001272  EC0F  F00A         	call	_gpio_pin_intialize	;wreg free
   633   001276  6E42               	movwf	lcd_8bit_initialize@ret^0,c
   634   001278                     
   635                           ;ECU_Layer/LCD/ecu_lcd.c: 201:         for(l_data_pins_counter = 0 ; l_data_pins_counter
      +                          <8 ; l_data_pins_counter++){
   636   001278  0E00               	movlw	0
   637   00127A  6E41               	movwf	lcd_8bit_initialize@l_data_pins_counter^0,c
   638   00127C                     l1887:
   639   00127C  503F               	movf	lcd_8bit_initialize@_lcd_^0,w,c
   640   00127E  2441               	addwf	lcd_8bit_initialize@l_data_pins_counter^0,w,c
   641   001280  0F02               	addlw	2
   642   001282  6E37               	movwf	gpio_pin_intialize@_pin_config^0,c
   643   001284  EC0F  F00A         	call	_gpio_pin_intialize	;wreg free
   644   001288                     
   645                           ;ECU_Layer/LCD/ecu_lcd.c: 203:         }
   646   001288  2A41               	incf	lcd_8bit_initialize@l_data_pins_counter^0,f,c
   647   00128A  0E07               	movlw	7
   648   00128C  6441               	cpfsgt	lcd_8bit_initialize@l_data_pins_counter^0,c
   649   00128E  EF4B  F009         	goto	u1061
   650   001292  EF4D  F009         	goto	u1060
   651   001296                     u1061:
   652   001296  EF3E  F009         	goto	l1887
   653   00129A                     u1060:
   654   00129A                     
   655                           ;ECU_Layer/LCD/ecu_lcd.c: 204:         _delay((unsigned long)((20)*(4000000UL/4000.0)));
   656   00129A  0E1A               	movlw	26
   657   00129C  6E40               	movwf	??_lcd_8bit_initialize^0,c
   658   00129E  0EF8               	movlw	248
   659   0012A0                     u1417:
   660   0012A0  2EE8               	decfsz	wreg,f,c
   661   0012A2  D7FE               	bra	u1417
   662   0012A4  2E40               	decfsz	??_lcd_8bit_initialize^0,f,c
   663   0012A6  D7FC               	bra	u1417
   664   0012A8  D000               	nop2	
   665   0012AA  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
   666   0012AE  0E38               	movlw	56
   667   0012B0  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   668   0012B2  ECD4  F009         	call	_lcd_8bit_send_command	;wreg free
   669   0012B6                     
   670                           ;ECU_Layer/LCD/ecu_lcd.c: 206:         _delay((unsigned long)((5)*(4000000UL/4000.0)));
   671   0012B6  0E07               	movlw	7
   672   0012B8  6E40               	movwf	??_lcd_8bit_initialize^0,c
   673   0012BA  0E7D               	movlw	125
   674   0012BC                     u1427:
   675   0012BC  2EE8               	decfsz	wreg,f,c
   676   0012BE  D7FE               	bra	u1427
   677   0012C0  2E40               	decfsz	??_lcd_8bit_initialize^0,f,c
   678   0012C2  D7FC               	bra	u1427
   679   0012C4  0000               	nop	
   680   0012C6  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
   681   0012CA  0E38               	movlw	56
   682   0012CC  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   683   0012CE  ECD4  F009         	call	_lcd_8bit_send_command	;wreg free
   684   0012D2                     
   685                           ;ECU_Layer/LCD/ecu_lcd.c: 208:         _delay((unsigned long)((150)*(4000000UL/4000000.0
      +                          )));
   686   0012D2  0E32               	movlw	50
   687   0012D4                     u1437:
   688   0012D4  2EE8               	decfsz	wreg,f,c
   689   0012D6  D7FE               	bra	u1437
   690   0012D8  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
   691   0012DC  0E38               	movlw	56
   692   0012DE  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   693   0012E0  ECD4  F009         	call	_lcd_8bit_send_command	;wreg free
   694   0012E4  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
   695   0012E8  0E01               	movlw	1
   696   0012EA  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   697   0012EC  ECD4  F009         	call	_lcd_8bit_send_command	;wreg free
   698   0012F0  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
   699   0012F4  0E02               	movlw	2
   700   0012F6  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   701   0012F8  ECD4  F009         	call	_lcd_8bit_send_command	;wreg free
   702   0012FC  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
   703   001300  0E06               	movlw	6
   704   001302  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   705   001304  ECD4  F009         	call	_lcd_8bit_send_command	;wreg free
   706   001308  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
   707   00130C  0E0C               	movlw	12
   708   00130E  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   709   001310  ECD4  F009         	call	_lcd_8bit_send_command	;wreg free
   710   001314  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
   711   001318  0E38               	movlw	56
   712   00131A  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   713   00131C  ECD4  F009         	call	_lcd_8bit_send_command	;wreg free
   714   001320                     
   715                           ;ECU_Layer/LCD/ecu_lcd.c: 216:         ret = lcd_8bit_send_command(_lcd_, 0x80);
   716   001320  C03F  F039         	movff	lcd_8bit_initialize@_lcd_,lcd_8bit_send_command@_lcd_
   717   001324  0E80               	movlw	128
   718   001326  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   719   001328  ECD4  F009         	call	_lcd_8bit_send_command	;wreg free
   720   00132C  6E42               	movwf	lcd_8bit_initialize@ret^0,c
   721   00132E                     l1915:
   722                           
   723                           ;ECU_Layer/LCD/ecu_lcd.c: 220:     return ret;
   724   00132E  5042               	movf	lcd_8bit_initialize@ret^0,w,c
   725   001330  0012               	return		;funcret
   726   001332                     __end_of_lcd_8bit_initialize:
   727                           	callstack 0
   728                           
   729 ;; *************** function _lcd_8bit_send_command *****************
   730 ;; Defined at:
   731 ;;		line 231 in file "ECU_Layer/LCD/ecu_lcd.c"
   732 ;; Parameters:    Size  Location     Type
   733 ;;  _lcd_           1   10[COMRAM] PTR const struct .
   734 ;;		 -> lcd_2(10), 
   735 ;;  command         1   11[COMRAM] unsigned char 
   736 ;; Auto vars:     Size  Location     Type
   737 ;;  l_pin_counte    1   15[COMRAM] unsigned char 
   738 ;;  ret             1   14[COMRAM] unsigned char 
   739 ;; Return value:  Size  Location     Type
   740 ;;                  1    wreg      unsigned char 
   741 ;; Registers used:
   742 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   743 ;; Tracked objects:
   744 ;;		On entry : 0/0
   745 ;;		On exit  : 0/0
   746 ;;		Unchanged: 0/0
   747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   748 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   749 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   750 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   751 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   752 ;;Total ram usage:        6 bytes
   753 ;; Hardware stack levels used: 1
   754 ;; Hardware stack levels required when called: 2
   755 ;; This function calls:
   756 ;;		_gpio_pin_write_logic
   757 ;;		_lcd_8bit_send_enable_signal
   758 ;; This function is called by:
   759 ;;		_lcd_8bit_initialize
   760 ;; This function uses a non-reentrant model
   761 ;;
   762                           
   763                           	psect	text4
   764   0013A8                     __ptext4:
   765                           	callstack 0
   766   0013A8                     _lcd_8bit_send_command:
   767                           	callstack 26
   768   0013A8                     
   769                           ;ECU_Layer/LCD/ecu_lcd.c: 233:     uint8 l_pin_counter = 0;
   770   0013A8  0E00               	movlw	0
   771   0013AA  6E3E               	movwf	lcd_8bit_send_command@l_pin_counter^0,c
   772                           
   773                           ;ECU_Layer/LCD/ecu_lcd.c: 234:     if(((void*)0) == _lcd_){
   774   0013AC  5039               	movf	lcd_8bit_send_command@_lcd_^0,w,c
   775   0013AE  A4D8               	btfss	status,2,c
   776   0013B0  EFDC  F009         	goto	u1001
   777   0013B4  EFDE  F009         	goto	u1000
   778   0013B8                     u1001:
   779   0013B8  EFE2  F009         	goto	l1833
   780   0013BC                     u1000:
   781   0013BC                     
   782                           ;ECU_Layer/LCD/ecu_lcd.c: 235:         ret = (Std_ReturnType)0x00;
   783   0013BC  0E00               	movlw	0
   784   0013BE  6E3D               	movwf	lcd_8bit_send_command@ret^0,c
   785                           
   786                           ;ECU_Layer/LCD/ecu_lcd.c: 236:     }
   787   0013C0  EF0D  F00A         	goto	l1849
   788   0013C4                     l1833:
   789   0013C4  C039  F02F         	movff	lcd_8bit_send_command@_lcd_,gpio_pin_write_logic@_pin_config
   790   0013C8  0E00               	movlw	0
   791   0013CA  6E30               	movwf	gpio_pin_write_logic@logic^0,c
   792   0013CC  EC9C  F008         	call	_gpio_pin_write_logic	;wreg free
   793   0013D0                     
   794                           ;ECU_Layer/LCD/ecu_lcd.c: 239:         for(l_pin_counter = 0 ; l_pin_counter < 8 ; l_pin
      +                          _counter++){
   795   0013D0  0E00               	movlw	0
   796   0013D2  6E3E               	movwf	lcd_8bit_send_command@l_pin_counter^0,c
   797   0013D4                     l1841:
   798   0013D4  5039               	movf	lcd_8bit_send_command@_lcd_^0,w,c
   799   0013D6  243E               	addwf	lcd_8bit_send_command@l_pin_counter^0,w,c
   800   0013D8  0F02               	addlw	2
   801   0013DA  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
   802   0013DC  C03E  F03B         	movff	lcd_8bit_send_command@l_pin_counter,??_lcd_8bit_send_command
   803   0013E0  C03A  F03C         	movff	lcd_8bit_send_command@command,??_lcd_8bit_send_command+1
   804   0013E4  2A3B               	incf	??_lcd_8bit_send_command^0,f,c
   805   0013E6  EFF7  F009         	goto	u1014
   806   0013EA                     u1015:
   807   0013EA  90D8               	bcf	status,0,c
   808   0013EC  323C               	rrcf	(??_lcd_8bit_send_command+1)^0,f,c
   809   0013EE                     u1014:
   810   0013EE  2E3B               	decfsz	??_lcd_8bit_send_command^0,f,c
   811   0013F0  EFF5  F009         	goto	u1015
   812   0013F4  503C               	movf	(??_lcd_8bit_send_command+1)^0,w,c
   813   0013F6  0B01               	andlw	1
   814   0013F8  6E30               	movwf	gpio_pin_write_logic@logic^0,c
   815   0013FA  EC9C  F008         	call	_gpio_pin_write_logic	;wreg free
   816   0013FE                     
   817                           ;ECU_Layer/LCD/ecu_lcd.c: 241:         }
   818   0013FE  2A3E               	incf	lcd_8bit_send_command@l_pin_counter^0,f,c
   819   001400  0E07               	movlw	7
   820   001402  643E               	cpfsgt	lcd_8bit_send_command@l_pin_counter^0,c
   821   001404  EF06  F00A         	goto	u1021
   822   001408  EF08  F00A         	goto	u1020
   823   00140C                     u1021:
   824   00140C  EFEA  F009         	goto	l1841
   825   001410                     u1020:
   826   001410                     
   827                           ;ECU_Layer/LCD/ecu_lcd.c: 242:         ret = lcd_8bit_send_enable_signal(_lcd_);
   828   001410  C039  F037         	movff	lcd_8bit_send_command@_lcd_,lcd_8bit_send_enable_signal@_lcd_
   829   001414  EC9C  F00A         	call	_lcd_8bit_send_enable_signal	;wreg free
   830   001418  6E3D               	movwf	lcd_8bit_send_command@ret^0,c
   831   00141A                     l1849:
   832                           
   833                           ;ECU_Layer/LCD/ecu_lcd.c: 246:     return ret;
   834   00141A  503D               	movf	lcd_8bit_send_command@ret^0,w,c
   835   00141C  0012               	return		;funcret
   836   00141E                     __end_of_lcd_8bit_send_command:
   837                           	callstack 0
   838                           
   839 ;; *************** function _lcd_8bit_send_enable_signal *****************
   840 ;; Defined at:
   841 ;;		line 399 in file "ECU_Layer/LCD/ecu_lcd.c"
   842 ;; Parameters:    Size  Location     Type
   843 ;;  _lcd_           1    8[COMRAM] PTR const struct .
   844 ;;		 -> lcd_2(10), 
   845 ;; Auto vars:     Size  Location     Type
   846 ;;  ret             1    9[COMRAM] unsigned char 
   847 ;; Return value:  Size  Location     Type
   848 ;;                  1    wreg      unsigned char 
   849 ;; Registers used:
   850 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   851 ;; Tracked objects:
   852 ;;		On entry : 0/0
   853 ;;		On exit  : 0/0
   854 ;;		Unchanged: 0/0
   855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   856 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   857 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   859 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   860 ;;Total ram usage:        2 bytes
   861 ;; Hardware stack levels used: 1
   862 ;; Hardware stack levels required when called: 1
   863 ;; This function calls:
   864 ;;		_gpio_pin_write_logic
   865 ;; This function is called by:
   866 ;;		_lcd_8bit_send_command
   867 ;;		_lcd_8bit_send_char_data
   868 ;; This function uses a non-reentrant model
   869 ;;
   870                           
   871                           	psect	text5
   872   001538                     __ptext5:
   873                           	callstack 0
   874   001538                     _lcd_8bit_send_enable_signal:
   875                           	callstack 28
   876   001538  2837               	incf	lcd_8bit_send_enable_signal@_lcd_^0,w,c
   877   00153A  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
   878   00153C  0E01               	movlw	1
   879   00153E  6E30               	movwf	gpio_pin_write_logic@logic^0,c
   880   001540  EC9C  F008         	call	_gpio_pin_write_logic	;wreg free
   881   001544                     
   882                           ;ECU_Layer/LCD/ecu_lcd.c: 402:     _delay((unsigned long)((5)*(4000000UL/4000000.0)));
   883   001544  D000               	nop2		;2 cycle nop
   884   001546  D000               	nop2		;2 cycle nop
   885   001548  0000               	nop	
   886   00154A                     
   887                           ;ECU_Layer/LCD/ecu_lcd.c: 403:     ret = gpio_pin_write_logic(&(_lcd_->lcd_en), GPIO_LOW
      +                          );
   888   00154A  2837               	incf	lcd_8bit_send_enable_signal@_lcd_^0,w,c
   889   00154C  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
   890   00154E  0E00               	movlw	0
   891   001550  6E30               	movwf	gpio_pin_write_logic@logic^0,c
   892   001552  EC9C  F008         	call	_gpio_pin_write_logic	;wreg free
   893   001556  6E38               	movwf	lcd_8bit_send_enable_signal@ret^0,c
   894                           
   895                           ;ECU_Layer/LCD/ecu_lcd.c: 404:     return ret;
   896   001558  5038               	movf	lcd_8bit_send_enable_signal@ret^0,w,c
   897   00155A  0012               	return		;funcret
   898   00155C                     __end_of_lcd_8bit_send_enable_signal:
   899                           	callstack 0
   900                           
   901 ;; *************** function _lcd_4bit_initialize *****************
   902 ;; Defined at:
   903 ;;		line 24 in file "ECU_Layer/LCD/ecu_lcd.c"
   904 ;; Parameters:    Size  Location     Type
   905 ;;  _lcd_           1   11[COMRAM] PTR const struct .
   906 ;;		 -> lcd_1(6), 
   907 ;; Auto vars:     Size  Location     Type
   908 ;;  l_data_pins_    1   13[COMRAM] unsigned char 
   909 ;;  ret             1   12[COMRAM] unsigned char 
   910 ;; Return value:  Size  Location     Type
   911 ;;                  1    wreg      unsigned char 
   912 ;; Registers used:
   913 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   914 ;; Tracked objects:
   915 ;;		On entry : 0/0
   916 ;;		On exit  : 0/0
   917 ;;		Unchanged: 0/0
   918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   919 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   920 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   922 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   923 ;;Total ram usage:        3 bytes
   924 ;; Hardware stack levels used: 1
   925 ;; Hardware stack levels required when called: 2
   926 ;; This function calls:
   927 ;;		_gpio_pin_intialize
   928 ;; This function is called by:
   929 ;;		_application_intialize
   930 ;; This function uses a non-reentrant model
   931 ;;
   932                           
   933                           	psect	text6
   934   00147C                     __ptext6:
   935                           	callstack 0
   936   00147C                     _lcd_4bit_initialize:
   937                           	callstack 27
   938   00147C                     
   939                           ;ECU_Layer/LCD/ecu_lcd.c: 26:     uint8 l_data_pins_counter = 0;
   940   00147C  0E00               	movlw	0
   941   00147E  6E3C               	movwf	lcd_4bit_initialize@l_data_pins_counter^0,c
   942                           
   943                           ;ECU_Layer/LCD/ecu_lcd.c: 27:     if(((void*)0) == _lcd_){
   944   001480  503A               	movf	lcd_4bit_initialize@_lcd_^0,w,c
   945   001482  A4D8               	btfss	status,2,c
   946   001484  EF46  F00A         	goto	u1031
   947   001488  EF48  F00A         	goto	u1030
   948   00148C                     u1031:
   949   00148C  EF4C  F00A         	goto	l1857
   950   001490                     u1030:
   951   001490                     
   952                           ;ECU_Layer/LCD/ecu_lcd.c: 28:         ret = (Std_ReturnType)0x00;
   953   001490  0E00               	movlw	0
   954   001492  6E3B               	movwf	lcd_4bit_initialize@ret^0,c
   955                           
   956                           ;ECU_Layer/LCD/ecu_lcd.c: 29:     }
   957   001494  EF68  F00A         	goto	l1871
   958   001498                     l1857:
   959                           
   960                           ;ECU_Layer/LCD/ecu_lcd.c: 31:         ret = gpio_pin_intialize(&(_lcd_->lcd_rs));
   961   001498  C03A  F037         	movff	lcd_4bit_initialize@_lcd_,gpio_pin_intialize@_pin_config
   962   00149C  EC0F  F00A         	call	_gpio_pin_intialize	;wreg free
   963   0014A0  6E3B               	movwf	lcd_4bit_initialize@ret^0,c
   964                           
   965                           ;ECU_Layer/LCD/ecu_lcd.c: 32:         ret = gpio_pin_intialize(&(_lcd_->lcd_en));
   966   0014A2  283A               	incf	lcd_4bit_initialize@_lcd_^0,w,c
   967   0014A4  6E37               	movwf	gpio_pin_intialize@_pin_config^0,c
   968   0014A6  EC0F  F00A         	call	_gpio_pin_intialize	;wreg free
   969   0014AA  6E3B               	movwf	lcd_4bit_initialize@ret^0,c
   970   0014AC                     
   971                           ;ECU_Layer/LCD/ecu_lcd.c: 33:         for(l_data_pins_counter = 0 ; l_data_pins_counter<
      +                          4 ; l_data_pins_counter++){
   972   0014AC  0E00               	movlw	0
   973   0014AE  6E3C               	movwf	lcd_4bit_initialize@l_data_pins_counter^0,c
   974   0014B0                     l1865:
   975                           
   976                           ;ECU_Layer/LCD/ecu_lcd.c: 34:             ret = gpio_pin_intialize(&(_lcd_->lcd_data[l_d
      +                          ata_pins_counter]));
   977   0014B0  503A               	movf	lcd_4bit_initialize@_lcd_^0,w,c
   978   0014B2  243C               	addwf	lcd_4bit_initialize@l_data_pins_counter^0,w,c
   979   0014B4  0F02               	addlw	2
   980   0014B6  6E37               	movwf	gpio_pin_intialize@_pin_config^0,c
   981   0014B8  EC0F  F00A         	call	_gpio_pin_intialize	;wreg free
   982   0014BC  6E3B               	movwf	lcd_4bit_initialize@ret^0,c
   983   0014BE                     
   984                           ;ECU_Layer/LCD/ecu_lcd.c: 35:         }
   985   0014BE  2A3C               	incf	lcd_4bit_initialize@l_data_pins_counter^0,f,c
   986   0014C0  0E03               	movlw	3
   987   0014C2  643C               	cpfsgt	lcd_4bit_initialize@l_data_pins_counter^0,c
   988   0014C4  EF66  F00A         	goto	u1041
   989   0014C8  EF68  F00A         	goto	u1040
   990   0014CC                     u1041:
   991   0014CC  EF58  F00A         	goto	l1865
   992   0014D0                     u1040:
   993   0014D0                     l1871:
   994                           
   995                           ;ECU_Layer/LCD/ecu_lcd.c: 39:     return ret;
   996   0014D0  503B               	movf	lcd_4bit_initialize@ret^0,w,c
   997   0014D2  0012               	return		;funcret
   998   0014D4                     __end_of_lcd_4bit_initialize:
   999                           	callstack 0
  1000                           
  1001 ;; *************** function _gpio_pin_intialize *****************
  1002 ;; Defined at:
  1003 ;;		line 54 in file "MCAL_Layer/GPIO/hel_gpio.c"
  1004 ;; Parameters:    Size  Location     Type
  1005 ;;  _pin_config     1    8[COMRAM] PTR const struct .
  1006 ;;		 -> lcd_2$lcd_data(8), lcd_2(10), lcd_1$lcd_data(4), lcd_1(6), 
  1007 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  1008 ;; Auto vars:     Size  Location     Type
  1009 ;;  ret             1   10[COMRAM] unsigned char 
  1010 ;; Return value:  Size  Location     Type
  1011 ;;                  1    wreg      unsigned char 
  1012 ;; Registers used:
  1013 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1014 ;; Tracked objects:
  1015 ;;		On entry : 0/0
  1016 ;;		On exit  : 0/0
  1017 ;;		Unchanged: 0/0
  1018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1019 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1020 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1021 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1022 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1023 ;;Total ram usage:        3 bytes
  1024 ;; Hardware stack levels used: 1
  1025 ;; Hardware stack levels required when called: 1
  1026 ;; This function calls:
  1027 ;;		_gpio_pin_direction_intialize
  1028 ;;		_gpio_pin_write_logic
  1029 ;; This function is called by:
  1030 ;;		_lcd_4bit_initialize
  1031 ;;		_lcd_8bit_initialize
  1032 ;;		_seven_segment_intialize
  1033 ;;		_dc_motor_initialize
  1034 ;;		_keypad_initialize
  1035 ;;		_led_initialize
  1036 ;;		_relay_initialize
  1037 ;; This function uses a non-reentrant model
  1038 ;;
  1039                           
  1040                           	psect	text7
  1041   00141E                     __ptext7:
  1042                           	callstack 0
  1043   00141E                     _gpio_pin_intialize:
  1044                           	callstack 27
  1045   00141E                     
  1046                           ;MCAL_Layer/GPIO/hel_gpio.c: 56:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1){
  1047   00141E  5037               	movf	gpio_pin_intialize@_pin_config^0,w,c
  1048   001420  B4D8               	btfsc	status,2,c
  1049   001422  EF15  F00A         	goto	u981
  1050   001426  EF17  F00A         	goto	u980
  1051   00142A                     u981:
  1052   00142A  EF27  F00A         	goto	l1821
  1053   00142E                     u980:
  1054   00142E  5037               	movf	gpio_pin_intialize@_pin_config^0,w,c
  1055   001430  6ED9               	movwf	fsr2l,c
  1056   001432  6ADA               	clrf	fsr2h,c
  1057   001434  30DF               	rrcf	223,w,c
  1058   001436  32E8               	rrcf	wreg,f,c
  1059   001438  32E8               	rrcf	wreg,f,c
  1060   00143A  0B07               	andlw	7
  1061   00143C  6E38               	movwf	??_gpio_pin_intialize^0,c
  1062   00143E  0E07               	movlw	7
  1063   001440  6438               	cpfsgt	??_gpio_pin_intialize^0,c
  1064   001442  EF25  F00A         	goto	u991
  1065   001446  EF27  F00A         	goto	u990
  1066   00144A                     u991:
  1067   00144A  EF2B  F00A         	goto	l1823
  1068   00144E                     u990:
  1069   00144E                     l1821:
  1070                           
  1071                           ;MCAL_Layer/GPIO/hel_gpio.c: 57:         ret = (Std_ReturnType)0x00;
  1072   00144E  0E00               	movlw	0
  1073   001450  6E39               	movwf	gpio_pin_intialize@ret^0,c
  1074                           
  1075                           ;MCAL_Layer/GPIO/hel_gpio.c: 58:     }
  1076   001452  EF3C  F00A         	goto	l1825
  1077   001456                     l1823:
  1078                           
  1079                           ;MCAL_Layer/GPIO/hel_gpio.c: 60:         ret = gpio_pin_direction_intialize(_pin_config)
      +                          ;
  1080   001456  C037  F02F         	movff	gpio_pin_intialize@_pin_config,gpio_pin_direction_intialize@_pin_config
  1081   00145A  EC09  F008         	call	_gpio_pin_direction_intialize	;wreg free
  1082   00145E  6E39               	movwf	gpio_pin_intialize@ret^0,c
  1083                           
  1084                           ;MCAL_Layer/GPIO/hel_gpio.c: 61:         ret = gpio_pin_write_logic(_pin_config, _pin_co
      +                          nfig->logic);
  1085   001460  C037  F02F         	movff	gpio_pin_intialize@_pin_config,gpio_pin_write_logic@_pin_config
  1086   001464  5037               	movf	gpio_pin_intialize@_pin_config^0,w,c
  1087   001466  6ED9               	movwf	fsr2l,c
  1088   001468  6ADA               	clrf	fsr2h,c
  1089   00146A  0E00               	movlw	0
  1090   00146C  BEDF               	btfsc	indf2,7,c
  1091   00146E  0E01               	movlw	1
  1092   001470  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1093   001472  EC9C  F008         	call	_gpio_pin_write_logic	;wreg free
  1094   001476  6E39               	movwf	gpio_pin_intialize@ret^0,c
  1095   001478                     l1825:
  1096                           
  1097                           ;MCAL_Layer/GPIO/hel_gpio.c: 63:     return ret;
  1098   001478  5039               	movf	gpio_pin_intialize@ret^0,w,c
  1099   00147A  0012               	return		;funcret
  1100   00147C                     __end_of_gpio_pin_intialize:
  1101                           	callstack 0
  1102                           
  1103 ;; *************** function _gpio_pin_write_logic *****************
  1104 ;; Defined at:
  1105 ;;		line 97 in file "MCAL_Layer/GPIO/hel_gpio.c"
  1106 ;; Parameters:    Size  Location     Type
  1107 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  1108 ;;		 -> lcd_2$lcd_data(8), lcd_2(10), lcd_1$lcd_data(4), lcd_1(6), 
  1109 ;;		 -> relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), relay_initialize@pin_obj(1), led_turn_off@pin_obj(1), 
  1110 ;;		 -> led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
  1111 ;;  logic           1    1[COMRAM] enum E2811
  1112 ;; Auto vars:     Size  Location     Type
  1113 ;;  ret             1    7[COMRAM] unsigned char 
  1114 ;; Return value:  Size  Location     Type
  1115 ;;                  1    wreg      unsigned char 
  1116 ;; Registers used:
  1117 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1118 ;; Tracked objects:
  1119 ;;		On entry : 0/0
  1120 ;;		On exit  : 0/0
  1121 ;;		Unchanged: 0/0
  1122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1123 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1124 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1125 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1126 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1127 ;;Total ram usage:        8 bytes
  1128 ;; Hardware stack levels used: 1
  1129 ;; This function calls:
  1130 ;;		Nothing
  1131 ;; This function is called by:
  1132 ;;		_gpio_pin_intialize
  1133 ;;		_lcd_8bit_send_command
  1134 ;;		_lcd_8bit_send_char_data
  1135 ;;		_lcd_8bit_send_enable_signal
  1136 ;;		_seven_segment_write_number
  1137 ;;		_dc_motor_move_right
  1138 ;;		_dc_motor_move_left
  1139 ;;		_dc_motor_stop
  1140 ;;		_keypad_get_value
  1141 ;;		_led_turn_on
  1142 ;;		_led_turn_off
  1143 ;;		_relay_turn_on
  1144 ;;		_relay_turn_off
  1145 ;;		_lcd_4bit_send_command
  1146 ;;		_lcd_4bit_send_char_data
  1147 ;;		_lcd_send_4bits
  1148 ;;		_lcd_4bit_send_enable_signal
  1149 ;; This function uses a non-reentrant model
  1150 ;;
  1151                           
  1152                           	psect	text8
  1153   001138                     __ptext8:
  1154                           	callstack 0
  1155   001138                     _gpio_pin_write_logic:
  1156                           	callstack 28
  1157   001138                     
  1158                           ;MCAL_Layer/GPIO/hel_gpio.c: 98:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1159   001138  0E01               	movlw	1
  1160   00113A  6E36               	movwf	gpio_pin_write_logic@ret^0,c
  1161                           
  1162                           ;MCAL_Layer/GPIO/hel_gpio.c: 99:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1){
  1163   00113C  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1164   00113E  B4D8               	btfsc	status,2,c
  1165   001140  EFA4  F008         	goto	u881
  1166   001144  EFA6  F008         	goto	u880
  1167   001148                     u881:
  1168   001148  EFB6  F008         	goto	l1767
  1169   00114C                     u880:
  1170   00114C  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1171   00114E  6ED9               	movwf	fsr2l,c
  1172   001150  6ADA               	clrf	fsr2h,c
  1173   001152  30DF               	rrcf	223,w,c
  1174   001154  32E8               	rrcf	wreg,f,c
  1175   001156  32E8               	rrcf	wreg,f,c
  1176   001158  0B07               	andlw	7
  1177   00115A  6E31               	movwf	??_gpio_pin_write_logic^0,c
  1178   00115C  0E07               	movlw	7
  1179   00115E  6431               	cpfsgt	??_gpio_pin_write_logic^0,c
  1180   001160  EFB4  F008         	goto	u891
  1181   001164  EFB6  F008         	goto	u890
  1182   001168                     u891:
  1183   001168  EF0D  F009         	goto	l1775
  1184   00116C                     u890:
  1185   00116C                     l1767:
  1186                           
  1187                           ;MCAL_Layer/GPIO/hel_gpio.c: 100:         ret = (Std_ReturnType)0x00;
  1188   00116C  0E00               	movlw	0
  1189   00116E  6E36               	movwf	gpio_pin_write_logic@ret^0,c
  1190                           
  1191                           ;MCAL_Layer/GPIO/hel_gpio.c: 101:     }
  1192   001170  EF22  F009         	goto	l1777
  1193   001174                     l1769:
  1194                           
  1195                           ;MCAL_Layer/GPIO/hel_gpio.c: 105:                 (*lat_registers[_pin_config->port] &= 
      +                          ~((uint8) 1 << _pin_config->pin));
  1196   001174  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1197   001176  6ED9               	movwf	fsr2l,c
  1198   001178  6ADA               	clrf	fsr2h,c
  1199   00117A  30DF               	rrcf	223,w,c
  1200   00117C  32E8               	rrcf	wreg,f,c
  1201   00117E  32E8               	rrcf	wreg,f,c
  1202   001180  0B07               	andlw	7
  1203   001182  6E31               	movwf	??_gpio_pin_write_logic^0,c
  1204   001184  0E01               	movlw	1
  1205   001186  6E32               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1206   001188  2A31               	incf	??_gpio_pin_write_logic^0,f,c
  1207   00118A  EFC9  F008         	goto	u904
  1208   00118E                     u905:
  1209   00118E  90D8               	bcf	status,0,c
  1210   001190  3632               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1211   001192                     u904:
  1212   001192  2E31               	decfsz	??_gpio_pin_write_logic^0,f,c
  1213   001194  EFC7  F008         	goto	u905
  1214   001198  5032               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1215   00119A  0AFF               	xorlw	255
  1216   00119C  6E33               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1217   00119E  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1218   0011A0  6ED9               	movwf	fsr2l,c
  1219   0011A2  6ADA               	clrf	fsr2h,c
  1220   0011A4  50DF               	movf	223,w,c
  1221   0011A6  0B07               	andlw	7
  1222   0011A8  0D02               	mullw	2
  1223   0011AA  50F3               	movf	243,w,c
  1224   0011AC  0F0B               	addlw	low _lat_registers
  1225   0011AE  6ED9               	movwf	fsr2l,c
  1226   0011B0  6ADA               	clrf	fsr2h,c
  1227   0011B2  CFDE F034          	movff	postinc2,??_gpio_pin_write_logic+3
  1228   0011B6  CFDD F035          	movff	postdec2,??_gpio_pin_write_logic+4
  1229   0011BA  C034  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1230   0011BE  C035  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1231   0011C2  5033               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1232   0011C4  16DF               	andwf	indf2,f,c
  1233                           
  1234                           ;MCAL_Layer/GPIO/hel_gpio.c: 106:                 break;
  1235   0011C6  EF22  F009         	goto	l1777
  1236   0011CA                     l1771:
  1237                           
  1238                           ;MCAL_Layer/GPIO/hel_gpio.c: 108:                 (*lat_registers[_pin_config->port] |= 
      +                          ((uint8) 1 << _pin_config->pin));
  1239   0011CA  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1240   0011CC  6ED9               	movwf	fsr2l,c
  1241   0011CE  6ADA               	clrf	fsr2h,c
  1242   0011D0  30DF               	rrcf	223,w,c
  1243   0011D2  32E8               	rrcf	wreg,f,c
  1244   0011D4  32E8               	rrcf	wreg,f,c
  1245   0011D6  0B07               	andlw	7
  1246   0011D8  6E31               	movwf	??_gpio_pin_write_logic^0,c
  1247   0011DA  0E01               	movlw	1
  1248   0011DC  6E32               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1249   0011DE  2A31               	incf	??_gpio_pin_write_logic^0,f,c
  1250   0011E0  EFF4  F008         	goto	u914
  1251   0011E4                     u915:
  1252   0011E4  90D8               	bcf	status,0,c
  1253   0011E6  3632               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1254   0011E8                     u914:
  1255   0011E8  2E31               	decfsz	??_gpio_pin_write_logic^0,f,c
  1256   0011EA  EFF2  F008         	goto	u915
  1257   0011EE  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1258   0011F0  6ED9               	movwf	fsr2l,c
  1259   0011F2  6ADA               	clrf	fsr2h,c
  1260   0011F4  50DF               	movf	223,w,c
  1261   0011F6  0B07               	andlw	7
  1262   0011F8  0D02               	mullw	2
  1263   0011FA  50F3               	movf	243,w,c
  1264   0011FC  0F0B               	addlw	low _lat_registers
  1265   0011FE  6ED9               	movwf	fsr2l,c
  1266   001200  6ADA               	clrf	fsr2h,c
  1267   001202  CFDE F033          	movff	postinc2,??_gpio_pin_write_logic+2
  1268   001206  CFDD F034          	movff	postdec2,??_gpio_pin_write_logic+3
  1269   00120A  C033  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  1270   00120E  C034  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  1271   001212  5032               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1272   001214  12DF               	iorwf	indf2,f,c
  1273                           
  1274                           ;MCAL_Layer/GPIO/hel_gpio.c: 109:                 break;
  1275   001216  EF22  F009         	goto	l1777
  1276   00121A                     l1775:
  1277   00121A  5030               	movf	gpio_pin_write_logic@logic^0,w,c
  1278   00121C  6E31               	movwf	??_gpio_pin_write_logic^0,c
  1279   00121E  6A32               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1280                           
  1281                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1282                           ; Switch size 1, requested type "simple"
  1283                           ; Number of cases is 1, Range of values is 0 to 0
  1284                           ; switch strategies available:
  1285                           ; Name         Instructions Cycles
  1286                           ; simple_byte            4     3 (average)
  1287                           ;	Chosen strategy is simple_byte
  1288   001220  5032               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1289   001222  0A00               	xorlw	0	; case 0
  1290   001224  B4D8               	btfsc	status,2,c
  1291   001226  EF17  F009         	goto	l2253
  1292   00122A  EFB6  F008         	goto	l1767
  1293   00122E                     l2253:
  1294                           
  1295                           ; Switch size 1, requested type "simple"
  1296                           ; Number of cases is 2, Range of values is 0 to 1
  1297                           ; switch strategies available:
  1298                           ; Name         Instructions Cycles
  1299                           ; simple_byte            7     4 (average)
  1300                           ;	Chosen strategy is simple_byte
  1301   00122E  5031               	movf	??_gpio_pin_write_logic^0,w,c
  1302   001230  0A00               	xorlw	0	; case 0
  1303   001232  B4D8               	btfsc	status,2,c
  1304   001234  EFBA  F008         	goto	l1769
  1305   001238  0A01               	xorlw	1	; case 1
  1306   00123A  B4D8               	btfsc	status,2,c
  1307   00123C  EFE5  F008         	goto	l1771
  1308   001240  EFB6  F008         	goto	l1767
  1309   001244                     l1777:
  1310                           
  1311                           ;MCAL_Layer/GPIO/hel_gpio.c: 113:     return ret;
  1312   001244  5036               	movf	gpio_pin_write_logic@ret^0,w,c
  1313   001246  0012               	return		;funcret
  1314   001248                     __end_of_gpio_pin_write_logic:
  1315                           	callstack 0
  1316                           
  1317 ;; *************** function _gpio_pin_direction_intialize *****************
  1318 ;; Defined at:
  1319 ;;		line 26 in file "MCAL_Layer/GPIO/hel_gpio.c"
  1320 ;; Parameters:    Size  Location     Type
  1321 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  1322 ;;		 -> lcd_2$lcd_data(8), lcd_2(10), lcd_1$lcd_data(4), lcd_1(6), 
  1323 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  1324 ;; Auto vars:     Size  Location     Type
  1325 ;;  ret             1    6[COMRAM] unsigned char 
  1326 ;; Return value:  Size  Location     Type
  1327 ;;                  1    wreg      unsigned char 
  1328 ;; Registers used:
  1329 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1335 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1336 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1337 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1338 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1339 ;;Total ram usage:        7 bytes
  1340 ;; Hardware stack levels used: 1
  1341 ;; This function calls:
  1342 ;;		Nothing
  1343 ;; This function is called by:
  1344 ;;		_gpio_pin_intialize
  1345 ;;		_keypad_initialize
  1346 ;;		_push_button_initialize
  1347 ;; This function uses a non-reentrant model
  1348 ;;
  1349                           
  1350                           	psect	text9
  1351   001012                     __ptext9:
  1352                           	callstack 0
  1353   001012                     _gpio_pin_direction_intialize:
  1354                           	callstack 27
  1355   001012                     
  1356                           ;MCAL_Layer/GPIO/hel_gpio.c: 27:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1357   001012  0E01               	movlw	1
  1358   001014  6E35               	movwf	gpio_pin_direction_intialize@ret^0,c
  1359                           
  1360                           ;MCAL_Layer/GPIO/hel_gpio.c: 28:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1){
  1361   001016  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1362   001018  B4D8               	btfsc	status,2,c
  1363   00101A  EF11  F008         	goto	u921
  1364   00101E  EF13  F008         	goto	u920
  1365   001022                     u921:
  1366   001022  EF23  F008         	goto	l1789
  1367   001026                     u920:
  1368   001026  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1369   001028  6ED9               	movwf	fsr2l,c
  1370   00102A  6ADA               	clrf	fsr2h,c
  1371   00102C  30DF               	rrcf	223,w,c
  1372   00102E  32E8               	rrcf	wreg,f,c
  1373   001030  32E8               	rrcf	wreg,f,c
  1374   001032  0B07               	andlw	7
  1375   001034  6E30               	movwf	??_gpio_pin_direction_intialize^0,c
  1376   001036  0E07               	movlw	7
  1377   001038  6430               	cpfsgt	??_gpio_pin_direction_intialize^0,c
  1378   00103A  EF21  F008         	goto	u931
  1379   00103E  EF23  F008         	goto	u930
  1380   001042                     u931:
  1381   001042  EF7A  F008         	goto	l1797
  1382   001046                     u930:
  1383   001046                     l1789:
  1384                           
  1385                           ;MCAL_Layer/GPIO/hel_gpio.c: 29:         ret = (Std_ReturnType)0x00;
  1386   001046  0E00               	movlw	0
  1387   001048  6E35               	movwf	gpio_pin_direction_intialize@ret^0,c
  1388                           
  1389                           ;MCAL_Layer/GPIO/hel_gpio.c: 30:     }
  1390   00104A  EF9A  F008         	goto	l1799
  1391   00104E                     l1791:
  1392                           
  1393                           ;MCAL_Layer/GPIO/hel_gpio.c: 34:                 (*tris_registers[_pin_config->port] &= 
      +                          ~((uint8) 1 << _pin_config->pin));
  1394   00104E  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1395   001050  6ED9               	movwf	fsr2l,c
  1396   001052  6ADA               	clrf	fsr2h,c
  1397   001054  30DF               	rrcf	223,w,c
  1398   001056  32E8               	rrcf	wreg,f,c
  1399   001058  32E8               	rrcf	wreg,f,c
  1400   00105A  0B07               	andlw	7
  1401   00105C  6E30               	movwf	??_gpio_pin_direction_intialize^0,c
  1402   00105E  0E01               	movlw	1
  1403   001060  6E31               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  1404   001062  2A30               	incf	??_gpio_pin_direction_intialize^0,f,c
  1405   001064  EF36  F008         	goto	u944
  1406   001068                     u945:
  1407   001068  90D8               	bcf	status,0,c
  1408   00106A  3631               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  1409   00106C                     u944:
  1410   00106C  2E30               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  1411   00106E  EF34  F008         	goto	u945
  1412   001072  5031               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1413   001074  0AFF               	xorlw	255
  1414   001076  6E32               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  1415   001078  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1416   00107A  6ED9               	movwf	fsr2l,c
  1417   00107C  6ADA               	clrf	fsr2h,c
  1418   00107E  50DF               	movf	223,w,c
  1419   001080  0B07               	andlw	7
  1420   001082  0D02               	mullw	2
  1421   001084  50F3               	movf	243,w,c
  1422   001086  0F15               	addlw	low _tris_registers
  1423   001088  6ED9               	movwf	fsr2l,c
  1424   00108A  6ADA               	clrf	fsr2h,c
  1425   00108C  CFDE F033          	movff	postinc2,??_gpio_pin_direction_intialize+3
  1426   001090  CFDD F034          	movff	postdec2,??_gpio_pin_direction_intialize+4
  1427   001094  C033  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  1428   001098  C034  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  1429   00109C  5032               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  1430   00109E  16DF               	andwf	indf2,f,c
  1431                           
  1432                           ;MCAL_Layer/GPIO/hel_gpio.c: 35:                 break;
  1433   0010A0  EF9A  F008         	goto	l1799
  1434   0010A4                     l1793:
  1435                           
  1436                           ;MCAL_Layer/GPIO/hel_gpio.c: 37:                 (*tris_registers[_pin_config->port] |= 
      +                          ((uint8) 1 << _pin_config->pin));
  1437   0010A4  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1438   0010A6  6ED9               	movwf	fsr2l,c
  1439   0010A8  6ADA               	clrf	fsr2h,c
  1440   0010AA  30DF               	rrcf	223,w,c
  1441   0010AC  32E8               	rrcf	wreg,f,c
  1442   0010AE  32E8               	rrcf	wreg,f,c
  1443   0010B0  0B07               	andlw	7
  1444   0010B2  6E30               	movwf	??_gpio_pin_direction_intialize^0,c
  1445   0010B4  0E01               	movlw	1
  1446   0010B6  6E31               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  1447   0010B8  2A30               	incf	??_gpio_pin_direction_intialize^0,f,c
  1448   0010BA  EF61  F008         	goto	u954
  1449   0010BE                     u955:
  1450   0010BE  90D8               	bcf	status,0,c
  1451   0010C0  3631               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  1452   0010C2                     u954:
  1453   0010C2  2E30               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  1454   0010C4  EF5F  F008         	goto	u955
  1455   0010C8  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1456   0010CA  6ED9               	movwf	fsr2l,c
  1457   0010CC  6ADA               	clrf	fsr2h,c
  1458   0010CE  50DF               	movf	223,w,c
  1459   0010D0  0B07               	andlw	7
  1460   0010D2  0D02               	mullw	2
  1461   0010D4  50F3               	movf	243,w,c
  1462   0010D6  0F15               	addlw	low _tris_registers
  1463   0010D8  6ED9               	movwf	fsr2l,c
  1464   0010DA  6ADA               	clrf	fsr2h,c
  1465   0010DC  CFDE F032          	movff	postinc2,??_gpio_pin_direction_intialize+2
  1466   0010E0  CFDD F033          	movff	postdec2,??_gpio_pin_direction_intialize+3
  1467   0010E4  C032  FFD9         	movff	??_gpio_pin_direction_intialize+2,fsr2l
  1468   0010E8  C033  FFDA         	movff	??_gpio_pin_direction_intialize+3,fsr2h
  1469   0010EC  5031               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1470   0010EE  12DF               	iorwf	indf2,f,c
  1471                           
  1472                           ;MCAL_Layer/GPIO/hel_gpio.c: 38:                 break;
  1473   0010F0  EF9A  F008         	goto	l1799
  1474   0010F4                     l1797:
  1475   0010F4  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1476   0010F6  6ED9               	movwf	fsr2l,c
  1477   0010F8  6ADA               	clrf	fsr2h,c
  1478   0010FA  BCDF               	btfsc	indf2,6,c
  1479   0010FC  EF82  F008         	goto	u961
  1480   001100  EF85  F008         	goto	u960
  1481   001104                     u961:
  1482   001104  0E01               	movlw	1
  1483   001106  EF86  F008         	goto	u970
  1484   00110A                     u960:
  1485   00110A  0E00               	movlw	0
  1486   00110C                     u970:
  1487   00110C  6E30               	movwf	??_gpio_pin_direction_intialize^0,c
  1488   00110E  6A31               	clrf	(??_gpio_pin_direction_intialize+1)^0,c
  1489                           
  1490                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1491                           ; Switch size 1, requested type "simple"
  1492                           ; Number of cases is 1, Range of values is 0 to 0
  1493                           ; switch strategies available:
  1494                           ; Name         Instructions Cycles
  1495                           ; simple_byte            4     3 (average)
  1496                           ;	Chosen strategy is simple_byte
  1497   001110  5031               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1498   001112  0A00               	xorlw	0	; case 0
  1499   001114  B4D8               	btfsc	status,2,c
  1500   001116  EF8F  F008         	goto	l2255
  1501   00111A  EF23  F008         	goto	l1789
  1502   00111E                     l2255:
  1503                           
  1504                           ; Switch size 1, requested type "simple"
  1505                           ; Number of cases is 2, Range of values is 0 to 1
  1506                           ; switch strategies available:
  1507                           ; Name         Instructions Cycles
  1508                           ; simple_byte            7     4 (average)
  1509                           ;	Chosen strategy is simple_byte
  1510   00111E  5030               	movf	??_gpio_pin_direction_intialize^0,w,c
  1511   001120  0A00               	xorlw	0	; case 0
  1512   001122  B4D8               	btfsc	status,2,c
  1513   001124  EF27  F008         	goto	l1791
  1514   001128  0A01               	xorlw	1	; case 1
  1515   00112A  B4D8               	btfsc	status,2,c
  1516   00112C  EF52  F008         	goto	l1793
  1517   001130  EF23  F008         	goto	l1789
  1518   001134                     l1799:
  1519                           
  1520                           ;MCAL_Layer/GPIO/hel_gpio.c: 42:     return ret;
  1521   001134  5035               	movf	gpio_pin_direction_intialize@ret^0,w,c
  1522   001136  0012               	return		;funcret
  1523   001138                     __end_of_gpio_pin_direction_intialize:
  1524                           	callstack 0
  1525                           
  1526                           	psect	rparam
  1527   000000                     
  1528                           	psect	config
  1529                           
  1530                           ; Padding undefined space
  1531   300000                     	org	3145728
  1532   300000  FF                 	db	255
  1533                           
  1534                           ;Config register CONFIG1H @ 0x300001
  1535                           ;	Oscillator Selection bits
  1536                           ;	OSC = HS, HS oscillator
  1537                           ;	Fail-Safe Clock Monitor Enable bit
  1538                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1539                           ;	Internal/External Oscillator Switchover bit
  1540                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1541   300001                     	org	3145729
  1542   300001  02                 	db	2
  1543                           
  1544                           ;Config register CONFIG2L @ 0x300002
  1545                           ;	Power-up Timer Enable bit
  1546                           ;	PWRT = OFF, PWRT disabled
  1547                           ;	Brown-out Reset Enable bits
  1548                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1549                           ;	Brown Out Reset Voltage bits
  1550                           ;	BORV = 1, 
  1551   300002                     	org	3145730
  1552   300002  09                 	db	9
  1553                           
  1554                           ;Config register CONFIG2H @ 0x300003
  1555                           ;	Watchdog Timer Enable bit
  1556                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1557                           ;	Watchdog Timer Postscale Select bits
  1558                           ;	WDTPS = 32768, 1:32768
  1559   300003                     	org	3145731
  1560   300003  1E                 	db	30
  1561                           
  1562                           ; Padding undefined space
  1563   300004                     	org	3145732
  1564   300004  FF                 	db	255
  1565                           
  1566                           ;Config register CONFIG3H @ 0x300005
  1567                           ;	CCP2 MUX bit
  1568                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1569                           ;	PORTB A/D Enable bit
  1570                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1571                           ;	Low-Power Timer1 Oscillator Enable bit
  1572                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1573                           ;	MCLR Pin Enable bit
  1574                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1575   300005                     	org	3145733
  1576   300005  81                 	db	129
  1577                           
  1578                           ;Config register CONFIG4L @ 0x300006
  1579                           ;	Stack Full/Underflow Reset Enable bit
  1580                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1581                           ;	Single-Supply ICSP Enable bit
  1582                           ;	LVP = OFF, Single-Supply ICSP disabled
  1583                           ;	Extended Instruction Set Enable bit
  1584                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1585                           ;	Background Debugger Enable bit
  1586                           ;	DEBUG = 0x1, unprogrammed default
  1587   300006                     	org	3145734
  1588   300006  81                 	db	129
  1589                           
  1590                           ; Padding undefined space
  1591   300007                     	org	3145735
  1592   300007  FF                 	db	255
  1593                           
  1594                           ;Config register CONFIG5L @ 0x300008
  1595                           ;	Code Protection bit
  1596                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1597                           ;	Code Protection bit
  1598                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1599                           ;	Code Protection bit
  1600                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1601                           ;	Code Protection bit
  1602                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1603   300008                     	org	3145736
  1604   300008  0F                 	db	15
  1605                           
  1606                           ;Config register CONFIG5H @ 0x300009
  1607                           ;	Boot Block Code Protection bit
  1608                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1609                           ;	Data EEPROM Code Protection bit
  1610                           ;	CPD = OFF, Data EEPROM not code-protected
  1611   300009                     	org	3145737
  1612   300009  C0                 	db	192
  1613                           
  1614                           ;Config register CONFIG6L @ 0x30000A
  1615                           ;	Write Protection bit
  1616                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1617                           ;	Write Protection bit
  1618                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1619                           ;	Write Protection bit
  1620                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1621                           ;	Write Protection bit
  1622                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1623   30000A                     	org	3145738
  1624   30000A  0F                 	db	15
  1625                           
  1626                           ;Config register CONFIG6H @ 0x30000B
  1627                           ;	Configuration Register Write Protection bit
  1628                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1629                           ;	Boot Block Write Protection bit
  1630                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1631                           ;	Data EEPROM Write Protection bit
  1632                           ;	WRTD = OFF, Data EEPROM not write-protected
  1633   30000B                     	org	3145739
  1634   30000B  E0                 	db	224
  1635                           
  1636                           ;Config register CONFIG7L @ 0x30000C
  1637                           ;	Table Read Protection bit
  1638                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1639                           ;	Table Read Protection bit
  1640                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1641                           ;	Table Read Protection bit
  1642                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1643                           ;	Table Read Protection bit
  1644                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1645   30000C                     	org	3145740
  1646   30000C  0F                 	db	15
  1647                           
  1648                           ;Config register CONFIG7H @ 0x30000D
  1649                           ;	Boot Block Table Read Protection bit
  1650                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1651   30000D                     	org	3145741
  1652   30000D  40                 	db	64
  1653                           tosu	equ	0xFFF
  1654                           tosh	equ	0xFFE
  1655                           tosl	equ	0xFFD
  1656                           stkptr	equ	0xFFC
  1657                           pclatu	equ	0xFFB
  1658                           pclath	equ	0xFFA
  1659                           pcl	equ	0xFF9
  1660                           tblptru	equ	0xFF8
  1661                           tblptrh	equ	0xFF7
  1662                           tblptrl	equ	0xFF6
  1663                           tablat	equ	0xFF5
  1664                           prodh	equ	0xFF4
  1665                           prodl	equ	0xFF3
  1666                           indf0	equ	0xFEF
  1667                           postinc0	equ	0xFEE
  1668                           postdec0	equ	0xFED
  1669                           preinc0	equ	0xFEC
  1670                           plusw0	equ	0xFEB
  1671                           fsr0h	equ	0xFEA
  1672                           fsr0l	equ	0xFE9
  1673                           wreg	equ	0xFE8
  1674                           indf1	equ	0xFE7
  1675                           postinc1	equ	0xFE6
  1676                           postdec1	equ	0xFE5
  1677                           preinc1	equ	0xFE4
  1678                           plusw1	equ	0xFE3
  1679                           fsr1h	equ	0xFE2
  1680                           fsr1l	equ	0xFE1
  1681                           bsr	equ	0xFE0
  1682                           indf2	equ	0xFDF
  1683                           postinc2	equ	0xFDE
  1684                           postdec2	equ	0xFDD
  1685                           preinc2	equ	0xFDC
  1686                           plusw2	equ	0xFDB
  1687                           fsr2h	equ	0xFDA
  1688                           fsr2l	equ	0xFD9
  1689                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    16
    Data        46
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     20      73
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    gpio_pin_direction_intialize@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), lcd_2(COMRAM[10]), lcd_2$lcd_data(COMRAM[8]), 
		 -> led_initialize@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_intialize@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), lcd_2(COMRAM[10]), lcd_2$lcd_data(COMRAM[8]), 
		 -> led_initialize@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), lcd_2(COMRAM[10]), lcd_2$lcd_data(COMRAM[8]), 
		 -> led_initialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 
		 -> relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    lcd_4bit_initialize@_lcd_	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_8bit_initialize@_lcd_	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_char_data@_lcd_	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_command@_lcd_	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_enable_signal@_lcd_	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 


Critical Paths under _main in COMRAM

    _lcd_8bit_send_char_data->_lcd_8bit_send_enable_signal
    _application_intialize->_lcd_8bit_initialize
    _lcd_8bit_initialize->_lcd_8bit_send_command
    _lcd_8bit_send_command->_lcd_8bit_send_enable_signal
    _lcd_8bit_send_enable_signal->_gpio_pin_write_logic
    _lcd_4bit_initialize->_gpio_pin_intialize
    _gpio_pin_intialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   35862
              _application_intialize
            _lcd_8bit_send_char_data
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_send_char_data                              6     4      2   10383
                                             10 COMRAM     6     4      2
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                1     1      0   25477
                _lcd_4bit_initialize
                _lcd_8bit_initialize
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_initialize                                  4     3      1   18640
                                             16 COMRAM     4     3      1
                 _gpio_pin_intialize
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_command                                6     4      2   11599
                                             10 COMRAM     6     4      2
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_enable_signal                          2     1      1    5112
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_initialize                                  3     2      1    6834
                                             11 COMRAM     3     2      1
                 _gpio_pin_intialize
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_intialize                                   3     2      1    6574
                                              8 COMRAM     3     2      1
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_write_logic                                 8     6      2    4891
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_intialize                         7     6      1     407
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_intialize
     _lcd_4bit_initialize
       _gpio_pin_intialize
         _gpio_pin_direction_intialize
         _gpio_pin_write_logic
     _lcd_8bit_initialize
       _gpio_pin_intialize
       _lcd_8bit_send_command
         _gpio_pin_write_logic
         _lcd_8bit_send_enable_signal
           _gpio_pin_write_logic
   _lcd_8bit_send_char_data
     _gpio_pin_write_logic
     _lcd_8bit_send_enable_signal

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     14      49       1       57.5%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      49      39        0.0%
DATA                 0      0      49       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Nov 14 18:10:27 2023

                                    l210 147A                                      l203 1136  
                                    l312 14D2                                      l401 155A  
                                    l229 1246                                      l291 1584  
                                    l363 13A6                                      l356 141C  
                                    l349 1330                                      u920 1026  
                                    u904 1192                                      u921 1022  
                                    u905 118E                                      u930 1046  
                                    u914 11E8                                      u931 1042  
                                    u915 11E4                                      u960 110A  
                                    u944 106C                                      u880 114C  
                                    u961 1104                                      u945 1068  
                                    u881 1148                                      u970 110C  
                                    u954 10C2                                      u890 116C  
                                    u955 10BE                                      u891 1168  
                                    u980 142E                                      u981 142A  
                                    u990 144E                                      u991 144A  
                    led_initialize@F2891 0049                                      wreg 0FE8  
                  relay_initialize@F2885 0045                                     l2201 1560  
                                   l2253 122E                                     l2255 111E  
                                   l1811 1544                                     l1821 144E  
                                   l1813 154A                                     l1901 12D8  
                                   l2197 155C                                     l1823 1456  
                                   l1807 1538                                     l1831 13BC  
                                   l1911 1314                                     l1903 12E4  
                                   l2199 155C                                     l1825 1478  
                                   l1817 141E                                     l1809 1538  
                                   l1841 13D4                                     l1833 13C4  
                                   l1913 1320                                     l1905 12F0  
                                   l1921 1574                                     l1771 11CA  
                                   l1763 1138                                     l1819 142E  
                                   l1843 13FE                                     l1835 13D0  
                                   l1907 12FC                                     l1915 132E  
                                   l1923 157C                                     l1931 135A  
                                   l1765 114C                                     l1853 147C  
                                   l1845 1400                                     l1829 13A8  
                                   l1909 1308                                     l1941 138A  
                                   l1925 1332                                     l1791 104E  
                                   l1775 121A                                     l1767 116C  
                                   l1871 14D0                                     l1855 1490  
                                   l1847 1410                                     l1919 1574  
                                   l1943 139A                                     l1927 1346  
                                   l1793 10A4                                     l1785 1012  
                                   l1769 1174                                     l1777 1244  
                                   l1865 14B0                                     l1857 1498  
                                   l1849 141A                                     l1881 1278  
                                   l1937 135E                                     l1945 13A4  
                                   l1929 134E                                     l1787 1026  
                                   l1867 14BE                                     l1859 14AC  
                                   l1891 128A                                     l1875 1248  
                                   l1939 1388                                     l1797 10F4  
                                   l1789 1046                                     l1869 14C0  
                                   l1893 129A                                     l1877 125C  
                                   l1799 1134                                     l1895 12AA  
                                   l1887 127C                                     l1879 1264  
                                   l1897 12B6                                     l1889 1288  
                                   l1899 12D2                                     u1000 13BC  
                                   u1001 13B8                                     u1020 1410  
                                   u1021 140C                                     u1030 1490  
                                   u1014 13EE                                     u1031 148C  
                                   u1015 13EA                                     u1040 14D0  
                                   u1041 14CC                                     u1050 125C  
                                   u1051 1258                                     u1060 129A  
                                   u1061 1296                                     u1070 1346  
                                   u1071 1342       lcd_8bit_send_command@l_pin_counter 003E  
                                   u1090 139A                                     u1091 1396  
                                   u1084 1378                                     u1085 1374  
                                   _LATA 0F89                                     _LATB 0F8A  
                                   _LATC 0F8B                                     _LATD 0F8C  
                                   u1417 12A0                                     _LATE 0F8D  
                                   u1427 12BC                                     u1437 12D4  
                ??_application_intialize 0043                                     _main 155C  
                                   fsr2h 0FDA                                     indf2 0FDF  
                                   fsr1l 0FE1                                     fsr2l 0FD9  
                                   prodl 0FF3                                     start 0000  
          __end_of_lcd_8bit_send_command 141E                             ___param_bank 0000  
                   _gpio_pin_write_logic 1138                                    ?_main 002F  
                    relay_turn_off@F2895 0043                                    _PORTA 0F80  
                                  _PORTB 0F81                                    _PORTC 0F82  
                                  _PORTD 0F83                                    _PORTE 0F84  
                                  _TRISA 0F92                                    _TRISB 0F93  
                                  _TRISC 0F94                                    _TRISD 0F95  
                                  _TRISE 0F96                                    _lcd_1 0029  
                                  _lcd_2 001F                 ?_lcd_8bit_send_char_data 0039  
                                  tablat 0FF5                                    status 0FD8  
                        __initialization 14D4                             __end_of_main 1574  
                  ?_gpio_pin_write_logic 002F                            _lat_registers 000B  
                                 ??_main 0043                            __activetblptr 0002  
                       led_turn_on@F2896 0048                                   clear_0 14FA  
                                 isa$std 0001  gpio_pin_direction_intialize@_pin_config 002F  
                           __pdataCOMRAM 0001                             __mediumconst 0000  
                                 tblptrh 0FF7                                   tblptrl 0FF6  
                                 tblptru 0FF8               lcd_8bit_send_command@_lcd_ 0039  
                             __accesstop 0080                  __end_of__initialization 1500  
                          ___rparam_used 0001                   ??_gpio_pin_write_logic 0031  
                         __pcstackCOMRAM 002F                 lcd_8bit_initialize@_lcd_ 003F  
          __end_of_application_intialize 1586                   lcd_8bit_initialize@ret 0042  
           lcd_8bit_send_char_data@_lcd_ 0039                        led_turn_off@F2901 0047  
                   led_turn_toggle@F2906 0046      __end_of_lcd_8bit_send_enable_signal 155C  
            _lcd_8bit_send_enable_signal 1538                               _btn_values 1001  
         lcd_8bit_send_enable_signal@ret 0038                           _tris_registers 0015  
          ??_lcd_8bit_send_enable_signal 0038   lcd_8bit_initialize@l_data_pins_counter 0041  
 lcd_4bit_initialize@l_data_pins_counter 003C                                  __Hparam 0000  
                                __Lparam 0000                    _lcd_8bit_send_command 13A8  
                           __psmallconst 1000               __end_of_gpio_pin_intialize 147C  
                                __pcinit 14D4                                  __ramtop 1000  
                                __ptext0 155C                                  __ptext1 1332  
                                __ptext2 1574                                  __ptext3 1248  
                                __ptext4 13A8                                  __ptext5 1538  
                                __ptext6 147C                                  __ptext7 141E  
                                __ptext8 1138                                  __ptext9 1012  
                   end_of_initialization 1500                            __Lmediumconst 0000  
                  gpio_pin_intialize@ret 0039                                  postdec1 0FE5  
                                postdec2 0FDD                                  postinc0 0FEE  
                                postinc2 0FDE                      _lcd_4bit_initialize 147C  
          gpio_pin_intialize@_pin_config 0037     __end_of_gpio_pin_direction_intialize 1138  
           _gpio_pin_direction_intialize 1012                     ?_lcd_4bit_initialize 003A  
       lcd_8bit_send_enable_signal@_lcd_ 0037                   ?_lcd_8bit_send_command 0039  
                     relay_turn_on@F2890 0044                            __pidataCOMRAM 150A  
                    start_initialization 14D4                      _lcd_8bit_initialize 1248  
          ?_gpio_pin_direction_intialize 002F                    ??_lcd_4bit_initialize 003B  
                   ?_lcd_8bit_initialize 003F                  _lcd_8bit_send_char_data 1332  
               lcd_8bit_send_command@ret 003D                              __pbssCOMRAM 0043  
        gpio_pin_direction_intialize@ret 0035                    ??_lcd_8bit_initialize 0040  
                  _application_intialize 1574              lcd_8bit_send_char_data@data 003A  
        gpio_pin_write_logic@_pin_config 002F                gpio_pin_write_logic@logic 0030  
                            __smallconst 1000                       _gpio_pin_intialize 141E  
         ??_gpio_pin_direction_intialize 0030                ??_lcd_8bit_send_char_data 003B  
                    ?_gpio_pin_intialize 0037     lcd_8bit_send_char_data@l_pin_counter 003E  
                   ??_gpio_pin_intialize 0038                  gpio_pin_write_logic@ret 0036  
                              copy_data0 14E8                  ??_lcd_8bit_send_command 003B  
                 ?_application_intialize 002F                                 __Hrparam 0000  
                               __Lrparam 0000          __end_of_lcd_8bit_send_char_data 13A8  
                     __end_of_btn_values 1011               lcd_8bit_send_char_data@ret 003D  
                               isa$xinst 0000              __end_of_lcd_4bit_initialize 14D4  
           __end_of_gpio_pin_write_logic 1248             ?_lcd_8bit_send_enable_signal 0037  
                         _port_registers 0001              __end_of_lcd_8bit_initialize 1332  
               lcd_4bit_initialize@_lcd_ 003A             lcd_8bit_send_command@command 003A  
                 lcd_4bit_initialize@ret 003B  
